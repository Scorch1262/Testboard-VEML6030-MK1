

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 15 15:23:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,inline
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   118                           	psect	text102,global,reloc=2,class=CODE,delta=1
   119                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   120                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   121                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   123  0000                     
   124                           ; Version 2.20
   125                           ; Generated 05/05/2020 GMT
   126                           ; 
   127                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F46K20 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	smallconst
   160  001000                     __psmallconst:
   161                           	callstack 0
   162  001000  00                 	db	0
   163  001001                     _fsmStateTable:
   164                           	callstack 0
   165  001001  54                 	db	low _I2C_DO_IDLE
   166  001002  48                 	db	high _I2C_DO_IDLE
   167  001003  2C                 	db	low _I2C_DO_SEND_ADR_READ
   168  001004  48                 	db	high _I2C_DO_SEND_ADR_READ
   169  001005  1C                 	db	low _I2C_DO_SEND_ADR_WRITE
   170  001006  48                 	db	high _I2C_DO_SEND_ADR_WRITE
   171  001007  E6                 	db	low _I2C_DO_TX
   172  001008  38                 	db	high _I2C_DO_TX
   173  001009  C4                 	db	low _I2C_DO_RX
   174  00100A  3B                 	db	high _I2C_DO_RX
   175  00100B  48                 	db	low _I2C_DO_RCEN
   176  00100C  48                 	db	high _I2C_DO_RCEN
   177  00100D  14                 	db	low _I2C_DO_TX_EMPTY
   178  00100E  3E                 	db	high _I2C_DO_TX_EMPTY
   179  00100F  DE                 	db	low _I2C_DO_SEND_RESTART_READ
   180  001010  48                 	db	high _I2C_DO_SEND_RESTART_READ
   181  001011  D6                 	db	low _I2C_DO_SEND_RESTART_WRITE
   182  001012  48                 	db	high _I2C_DO_SEND_RESTART_WRITE
   183  001013  CE                 	db	low _I2C_DO_SEND_RESTART
   184  001014  48                 	db	high _I2C_DO_SEND_RESTART
   185  001015  C6                 	db	low _I2C_DO_SEND_STOP
   186  001016  48                 	db	high _I2C_DO_SEND_STOP
   187  001017  BE                 	db	low _I2C_DO_RX_ACK
   188  001018  48                 	db	high _I2C_DO_RX_ACK
   189  001019  B6                 	db	low _I2C_DO_RX_NACK_STOP
   190  00101A  48                 	db	high _I2C_DO_RX_NACK_STOP
   191  00101B  AE                 	db	low _I2C_DO_RX_NACK_RESTART
   192  00101C  48                 	db	high _I2C_DO_RX_NACK_RESTART
   193  00101D  3C                 	db	low _I2C_DO_RESET
   194  00101E  48                 	db	high _I2C_DO_RESET
   195  00101F  5E                 	db	low _I2C_DO_ADDRESS_NACK
   196  001020  40                 	db	high _I2C_DO_ADDRESS_NACK
   197  001021                     __end_of_fsmStateTable:
   198                           	callstack 0
   199  001021                     STR_1:
   200  001021  48                 	db	72	;'H'
   201  001022  65                 	db	101	;'e'
   202  001023  6C                 	db	108	;'l'
   203  001024  6C                 	db	108	;'l'
   204  001025  69                 	db	105	;'i'
   205  001026  67                 	db	103	;'g'
   206  001027  6B                 	db	107	;'k'
   207  001028  65                 	db	101	;'e'
   208  001029  69                 	db	105	;'i'
   209  00102A  74                 	db	116	;'t'
   210  00102B  20                 	db	32
   211  00102C  3D                 	db	61	;'='
   212  00102D  20                 	db	32
   213  00102E  25                 	db	37
   214  00102F  2E                 	db	46
   215  001030  32                 	db	50	;'2'
   216  001031  66                 	db	102	;'f'
   217  001032  20                 	db	32
   218  001033  6C                 	db	108	;'l'
   219  001034  75                 	db	117	;'u'
   220  001035  78                 	db	120	;'x'
   221  001036  0D                 	db	13
   222  001037  0A                 	db	10
   223  001038  00                 	db	0
   224  001039                     STR_2:
   225  001039  49                 	db	73	;'I'
   226  00103A  4E                 	db	78	;'N'
   227  00103B  46                 	db	70	;'F'
   228  00103C  00                 	db	0
   229  00103D                     STR_6:
   230  00103D  4E                 	db	78	;'N'
   231  00103E  41                 	db	65	;'A'
   232  00103F  4E                 	db	78	;'N'
   233  001040  00                 	db	0
   234  001041                     STR_3:
   235  001041  69                 	db	105	;'i'
   236  001042  6E                 	db	110	;'n'
   237  001043  66                 	db	102	;'f'
   238  001044  00                 	db	0
   239  001045                     STR_7:
   240  001045  6E                 	db	110	;'n'
   241  001046  61                 	db	97	;'a'
   242  001047  6E                 	db	110	;'n'
   243  001048  00                 	db	0
   244  001049                     STR_10:
   245  001049  6C                 	db	108	;'l'
   246  00104A  66                 	db	102	;'f'
   247  00104B  00                 	db	0
   248  00104C  00                 	db	0	; dummy byte at the end
   249  0000                     
   250                           	psect	nvBANK0
   251  0000FA                     __pnvBANK0:
   252                           	callstack 0
   253  0000FA                     _EUSART_RxDefaultInterruptHandler:
   254                           	callstack 0
   255  0000FA                     	ds	2
   256  0000FC                     _EUSART_TxDefaultInterruptHandler:
   257                           	callstack 0
   258  0000FC                     	ds	2
   259  0000FE                     _eusartTxBufferRemaining:
   260                           	callstack 0
   261  0000FE                     	ds	1
   262                           
   263                           	psect	nvBANK1
   264  000150                     __pnvBANK1:
   265                           	callstack 0
   266  000150                     _EUSART_ErrorHandler:
   267                           	callstack 0
   268  000150                     	ds	2
   269  000152                     _EUSART_OverrunErrorHandler:
   270                           	callstack 0
   271  000152                     	ds	2
   272  000154                     _EUSART_FramingErrorHandler:
   273                           	callstack 0
   274  000154                     	ds	2
   275  0000                     _RCONbits	set	4048
   276  0000                     _RCREG	set	4014
   277  0000                     _RCSTAbits	set	4011
   278  0000                     _TXREG	set	4013
   279  0000                     _TXSTAbits	set	4012
   280  0000                     _SPBRGH	set	4016
   281  0000                     _SPBRG	set	4015
   282  0000                     _TXSTA	set	4012
   283  0000                     _RCSTA	set	4011
   284  0000                     _BAUDCON	set	4024
   285  0000                     _INTCONbits	set	4082
   286  0000                     _INTCON2bits	set	4081
   287  0000                     _WPUB	set	3964
   288  0000                     _ANSELH	set	3967
   289  0000                     _ANSEL	set	3966
   290  0000                     _TRISD	set	3989
   291  0000                     _TRISC	set	3988
   292  0000                     _TRISB	set	3987
   293  0000                     _TRISA	set	3986
   294  0000                     _TRISE	set	3990
   295  0000                     _LATC	set	3979
   296  0000                     _LATB	set	3978
   297  0000                     _LATA	set	3977
   298  0000                     _LATD	set	3980
   299  0000                     _LATE	set	3981
   300  0000                     _OSCTUNE	set	3995
   301  0000                     _OSCCON	set	4051
   302  0000                     _PIR1bits	set	3998
   303  0000                     _PIE1bits	set	3997
   304  0000                     _SSPSTATbits	set	4039
   305  0000                     _PIR2bits	set	4001
   306  0000                     _SSPCON2bits	set	4037
   307  0000                     _SSPBUF	set	4041
   308  0000                     _SSPCON1bits	set	4038
   309  0000                     _SSPADD	set	4040
   310  0000                     _SSPCON2	set	4037
   311  0000                     _SSPCON1	set	4038
   312  0000                     _SSPSTAT	set	4039
   313                           
   314                           ; #config settings
   315                           
   316                           	psect	cinit
   317  004596                     __pcinit:
   318                           	callstack 0
   319  004596                     start_initialization:
   320                           	callstack 0
   321  004596                     __initialization:
   322                           	callstack 0
   323                           
   324                           ; Clear objects allocated to BANK1 (80 bytes)
   325  004596  EE01  F000         	lfsr	0,__pbssBANK1
   326  00459A  0E50               	movlw	80
   327  00459C                     clear_0:
   328  00459C  6AEE               	clrf	postinc0,c
   329  00459E  06E8               	decf	wreg,f,c
   330  0045A0  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to BANK0 (86 bytes)
   333  0045A2  EE00  F060         	lfsr	0,__pbssBANK0
   334  0045A6  0E56               	movlw	86
   335  0045A8                     clear_1:
   336  0045A8  6AEE               	clrf	postinc0,c
   337  0045AA  06E8               	decf	wreg,f,c
   338  0045AC  E1FD               	bnz	clear_1
   339                           
   340                           ; Clear objects allocated to COMRAM (5 bytes)
   341  0045AE  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   342  0045B0  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   343  0045B2  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   344  0045B4  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   345  0045B6  6A56               	clrf	__pbssCOMRAM& (0+255),c
   346  0045B8                     end_of_initialization:
   347                           	callstack 0
   348  0045B8                     __end_of__initialization:
   349                           	callstack 0
   350  0045B8  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   351  0045BA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   352  0045BC  0100               	movlb	0
   353  0045BE  EF94  F020         	goto	_main	;jump to C main() function
   354                           
   355                           	psect	bssCOMRAM
   356  000056                     __pbssCOMRAM:
   357                           	callstack 0
   358  000056                     _eusartRxCount:
   359                           	callstack 0
   360  000056                     	ds	1
   361  000057                     _eusartRxTail:
   362                           	callstack 0
   363  000057                     	ds	1
   364  000058                     _eusartRxHead:
   365                           	callstack 0
   366  000058                     	ds	1
   367  000059                     _eusartTxTail:
   368                           	callstack 0
   369  000059                     	ds	1
   370  00005A                     _eusartTxHead:
   371                           	callstack 0
   372  00005A                     	ds	1
   373                           
   374                           	psect	bssBANK0
   375  000060                     __pbssBANK0:
   376                           	callstack 0
   377  000060                     _I2C_Status:
   378                           	callstack 0
   379  000060                     	ds	36
   380  000084                     _eusartRxStatusBuffer:
   381                           	callstack 0
   382  000084                     	ds	8
   383  00008C                     _eusartRxBuffer:
   384                           	callstack 0
   385  00008C                     	ds	8
   386  000094                     _eusartTxBuffer:
   387                           	callstack 0
   388  000094                     	ds	8
   389  00009C                     floorf@F527:
   390                           	callstack 0
   391  00009C                     	ds	4
   392  0000A0                     ___fpclassifyf@F465:
   393                           	callstack 0
   394  0000A0                     	ds	4
   395  0000A4                     _light:
   396                           	callstack 0
   397  0000A4                     	ds	4
   398  0000A8                     _writeBuffer:
   399                           	callstack 0
   400  0000A8                     	ds	3
   401  0000AB                     _nout:
   402                           	callstack 0
   403  0000AB                     	ds	2
   404  0000AD                     _width:
   405                           	callstack 0
   406  0000AD                     	ds	2
   407  0000AF                     _prec:
   408                           	callstack 0
   409  0000AF                     	ds	2
   410  0000B1                     _flags:
   411                           	callstack 0
   412  0000B1                     	ds	2
   413  0000B3                     _readBuffer:
   414                           	callstack 0
   415  0000B3                     	ds	2
   416  0000B5                     _eusartRxLastError:
   417                           	callstack 0
   418  0000B5                     	ds	1
   419                           
   420                           	psect	bssBANK1
   421  000100                     __pbssBANK1:
   422                           	callstack 0
   423  000100                     _dbuf:
   424                           	callstack 0
   425  000100                     	ds	80
   426                           
   427                           	psect	cstackBANK1
   428  000156                     __pcstackBANK1:
   429                           	callstack 0
   430  000156                     printf@ap:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x0
   434  000156                     	ds	2
   435  000158                     ??_main:
   436                           
   437                           ; 1 bytes @ 0x2
   438  000158                     	ds	2
   439                           
   440                           	psect	cstackBANK0
   441  0000B6                     __pcstackBANK0:
   442                           	callstack 0
   443  0000B6                     _efgtoa$2091:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x0
   447  0000B6                     	ds	2
   448  0000B8                     _efgtoa$2092:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  0000B8                     	ds	2
   453  0000BA                     _efgtoa$2097:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x4
   457  0000BA                     	ds	2
   458  0000BC                     _efgtoa$2101:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x6
   462  0000BC                     	ds	2
   463  0000BE                     _efgtoa$2102:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x8
   467  0000BE                     	ds	2
   468  0000C0                     _efgtoa$2103:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xA
   472  0000C0                     	ds	2
   473  0000C2                     efgtoa@t:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0xC
   477  0000C2                     	ds	2
   478  0000C4                     efgtoa@pp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0xE
   482  0000C4                     	ds	2
   483  0000C6                     efgtoa@ne:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x10
   487  0000C6                     	ds	2
   488  0000C8                     efgtoa@m:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x12
   492  0000C8                     	ds	2
   493  0000CA                     efgtoa@ou:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0x14
   497  0000CA                     	ds	4
   498  0000CE                     efgtoa@d:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x18
   502  0000CE                     	ds	2
   503  0000D0                     efgtoa@sign:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x1A
   507  0000D0                     	ds	2
   508  0000D2                     efgtoa@p:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1C
   512  0000D2                     	ds	2
   513  0000D4                     efgtoa@w:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x1E
   517  0000D4                     	ds	2
   518  0000D6                     efgtoa@nmode:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x20
   522  0000D6                     	ds	1
   523  0000D7                     efgtoa@mode:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x21
   527  0000D7                     	ds	1
   528  0000D8                     efgtoa@h:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x22
   532  0000D8                     	ds	4
   533  0000DC                     efgtoa@l:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x26
   537  0000DC                     	ds	4
   538  0000E0                     efgtoa@i:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x2A
   542  0000E0                     	ds	2
   543  0000E2                     efgtoa@g:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x2C
   547  0000E2                     	ds	4
   548  0000E6                     efgtoa@e:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x30
   552  0000E6                     	ds	2
   553  0000E8                     efgtoa@n:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x32
   557  0000E8                     	ds	2
   558  0000EA                     efgtoa@u:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x34
   562  0000EA                     	ds	4
   563  0000EE                     ?_vfprintf:
   564                           	callstack 0
   565  0000EE                     vfprintf@fp:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x38
   569  0000EE                     	ds	2
   570  0000F0                     vfprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x3A
   574  0000F0                     	ds	2
   575  0000F2                     vfprintf@ap:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x3C
   579  0000F2                     	ds	2
   580  0000F4                     ?_printf:
   581                           	callstack 0
   582  0000F4                     printf@fmt:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x3E
   586  0000F4                     	ds	6
   587                           
   588                           	psect	cstackCOMRAM
   589  000001                     __pcstackCOMRAM:
   590                           	callstack 0
   591  000001                     ??_INTERRUPT_InterruptManager:
   592  000001                     
   593                           ; 1 bytes @ 0x0
   594  000001                     	ds	4
   595  000005                     ?_strlen:
   596                           	callstack 0
   597  000005                     ?___fpclassifyf:
   598                           	callstack 0
   599  000005                     ?_isupper:
   600                           	callstack 0
   601  000005                     ?_isdigit:
   602                           	callstack 0
   603  000005                     ?_strncmp:
   604                           	callstack 0
   605  000005                     ?_isspace:
   606                           	callstack 0
   607  000005                     ?___wmul:
   608                           	callstack 0
   609  000005                     ?___awdiv:
   610                           	callstack 0
   611  000005                     ?___awmod:
   612                           	callstack 0
   613  000005                     ?___fladd:
   614                           	callstack 0
   615  000005                     ?___fldiv:
   616                           	callstack 0
   617  000005                     ?___flmul:
   618                           	callstack 0
   619  000005                     ?___flneg:
   620                           	callstack 0
   621  000005                     ?___fltol:
   622                           	callstack 0
   623  000005                     ?___xxtofl:
   624                           	callstack 0
   625  000005                     I2C_Open@address:
   626                           	callstack 0
   627  000005                     I2C_Close@returnValue:
   628                           	callstack 0
   629  000005                     I2C_MasterSendTxData@data:
   630                           	callstack 0
   631  000005                     EUSART_Write@txData:
   632                           	callstack 0
   633  000005                     I2C_SetBuffer@buffer:
   634                           	callstack 0
   635  000005                     I2C_SetCallback@cb:
   636                           	callstack 0
   637  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   638                           	callstack 0
   639  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   640                           	callstack 0
   641  000005                     EUSART_SetErrorHandler@interruptHandler:
   642                           	callstack 0
   643  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   644                           	callstack 0
   645  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   646                           	callstack 0
   647  000005                     ___wmul@multiplier:
   648                           	callstack 0
   649  000005                     ___awdiv@dividend:
   650                           	callstack 0
   651  000005                     ___awmod@dividend:
   652                           	callstack 0
   653  000005                     isdigit@c:
   654                           	callstack 0
   655  000005                     isspace@c:
   656                           	callstack 0
   657  000005                     isupper@c:
   658                           	callstack 0
   659  000005                     strcpy@dest:
   660                           	callstack 0
   661  000005                     strlen@s:
   662                           	callstack 0
   663  000005                     strncmp@_l:
   664                           	callstack 0
   665  000005                     ___fleq@ff1:
   666                           	callstack 0
   667  000005                     ___flneg@f1:
   668                           	callstack 0
   669  000005                     ___fltol@f1:
   670                           	callstack 0
   671  000005                     ___fladd@b:
   672                           	callstack 0
   673  000005                     ___fldiv@b:
   674                           	callstack 0
   675  000005                     ___flmul@b:
   676                           	callstack 0
   677  000005                     ___xxtofl@val:
   678                           	callstack 0
   679  000005                     ___fpclassifyf@x:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000005                     	ds	1
   684  000006                     I2C_Open@returnValue:
   685                           	callstack 0
   686  000006                     putch@txData:
   687                           	callstack 0
   688                           
   689                           ; 1 bytes @ 0x5
   690  000006                     	ds	1
   691  000007                     ??_isupper:
   692  000007                     ??_isdigit:
   693  000007                     ??_isspace:
   694  000007                     I2C_SetBuffer@bufferSize:
   695                           	callstack 0
   696  000007                     I2C_SetCallback@ptr:
   697                           	callstack 0
   698  000007                     ___wmul@multiplicand:
   699                           	callstack 0
   700  000007                     ___awdiv@divisor:
   701                           	callstack 0
   702  000007                     ___awmod@divisor:
   703                           	callstack 0
   704  000007                     fputc@c:
   705                           	callstack 0
   706  000007                     strcpy@src:
   707                           	callstack 0
   708  000007                     strlen@a:
   709                           	callstack 0
   710  000007                     strncmp@_r:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x6
   714  000007                     	ds	2
   715  000009                     ??___fpclassifyf:
   716  000009                     ??_strcpy:
   717  000009                     ??___fltol:
   718  000009                     ??___xxtofl:
   719  000009                     I2C_SetCallback@idx:
   720                           	callstack 0
   721  000009                     ___awdiv@counter:
   722                           	callstack 0
   723  000009                     ___awmod@counter:
   724                           	callstack 0
   725  000009                     ___wmul@product:
   726                           	callstack 0
   727  000009                     fputc@fp:
   728                           	callstack 0
   729  000009                     strncmp@n:
   730                           	callstack 0
   731  000009                     ___fleq@ff2:
   732                           	callstack 0
   733  000009                     ___fladd@a:
   734                           	callstack 0
   735  000009                     ___fldiv@a:
   736                           	callstack 0
   737  000009                     ___flmul@a:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x8
   741  000009                     	ds	1
   742  00000A                     ___awdiv@sign:
   743                           	callstack 0
   744  00000A                     ___awmod@sign:
   745                           	callstack 0
   746  00000A                     I2C_SetDataCompleteCallback@cb:
   747                           	callstack 0
   748  00000A                     I2C_SetAddressNackCallback@cb:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x9
   752  00000A                     	ds	1
   753  00000B                     ??_fputc:
   754  00000B                     ??_strncmp:
   755  00000B                     ?_tolower:
   756                           	callstack 0
   757  00000B                     _isspace$2186:
   758                           	callstack 0
   759  00000B                     ___awdiv@quotient:
   760                           	callstack 0
   761  00000B                     strcpy@s:
   762                           	callstack 0
   763  00000B                     tolower@c:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0xA
   767  00000B                     	ds	1
   768  00000C                     ?_atoi:
   769                           	callstack 0
   770  00000C                     I2C_SetDataCompleteCallback@ptr:
   771                           	callstack 0
   772  00000C                     I2C_SetAddressNackCallback@ptr:
   773                           	callstack 0
   774  00000C                     atoi@s:
   775                           	callstack 0
   776  00000C                     strncmp@l:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0xB
   780  00000C                     	ds	1
   781  00000D                     ??___fladd:
   782  00000D                     ??___fldiv:
   783  00000D                     ??___flmul:
   784  00000D                     ??_tolower:
   785  00000D                     ??___fleq:
   786  00000D                     ___fltol@sign1:
   787                           	callstack 0
   788  00000D                     ___xxtofl@sign:
   789                           	callstack 0
   790  00000D                     ___fpclassifyf@e:
   791                           	callstack 0
   792  00000D                     strcpy@d:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0xC
   796  00000D                     	ds	1
   797  00000E                     ??_atoi:
   798  00000E                     ___fltol@exp1:
   799                           	callstack 0
   800  00000E                     ___xxtofl@exp:
   801                           	callstack 0
   802  00000E                     rd1RegCompleteHandler@ptr:
   803                           	callstack 0
   804  00000E                     rd2RegCompleteHandler@ptr:
   805                           	callstack 0
   806  00000E                     wr1RegCompleteHandler@ptr:
   807                           	callstack 0
   808  00000E                     wr2RegCompleteHandler@ptr:
   809                           	callstack 0
   810  00000E                     rdBlkRegCompleteHandler@ptr:
   811                           	callstack 0
   812  00000E                     I2C_CallbackReturnReset@funPtr:
   813                           	callstack 0
   814  00000E                     strncmp@r:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0xD
   818  00000E                     	ds	1
   819  00000F                     ___xxtofl@arg:
   820                           	callstack 0
   821  00000F                     ___fpclassifyf@u:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0xE
   825  00000F                     	ds	1
   826  000010                     ??_I2C_DO_TX:
   827  000010                     ??_I2C_DO_RX:
   828  000010                     ??_I2C_DO_TX_EMPTY:
   829  000010                     ??_I2C_DO_ADDRESS_NACK:
   830  000010                     fputs@s:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xF
   834  000010                     	ds	1
   835  000011                     ___fladd@signs:
   836                           	callstack 0
   837  000011                     ___flmul@sign:
   838                           	callstack 0
   839  000011                     _tolower$2244:
   840                           	callstack 0
   841  000011                     ___fldiv@rem:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x10
   845  000011                     	ds	1
   846  000012                     ??_I2C_MasterFsm:
   847  000012                     ___fladd@aexp:
   848                           	callstack 0
   849  000012                     ___flmul@aexp:
   850                           	callstack 0
   851  000012                     atoi@neg:
   852                           	callstack 0
   853  000012                     fputs@fp:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x11
   857  000012                     	ds	1
   858  000013                     ___fladd@bexp:
   859                           	callstack 0
   860  000013                     ___flmul@grs:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x12
   864  000013                     	ds	1
   865  000014                     I2C_MasterOperation@read:
   866                           	callstack 0
   867  000014                     ___fladd@grs:
   868                           	callstack 0
   869  000014                     fputs@c:
   870                           	callstack 0
   871  000014                     _atoi$2155:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x13
   875  000014                     	ds	1
   876  000015                     I2C_MasterOperation@returnValue:
   877                           	callstack 0
   878  000015                     ___fldiv@sign:
   879                           	callstack 0
   880  000015                     fputs@i:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x14
   884  000015                     	ds	1
   885  000016                     ?_I2C_Read2ByteRegister:
   886                           	callstack 0
   887  000016                     I2C_Read2ByteRegister@reg:
   888                           	callstack 0
   889  000016                     I2C_Write1ByteRegister@reg:
   890                           	callstack 0
   891  000016                     ___fldiv@new_exp:
   892                           	callstack 0
   893  000016                     _atoi$2157:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x15
   897  000016                     	ds	1
   898  000017                     ?_pad:
   899                           	callstack 0
   900  000017                     I2C_Write1ByteRegister@data:
   901                           	callstack 0
   902  000017                     ___flmul@bexp:
   903                           	callstack 0
   904  000017                     pad@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x16
   908  000017                     	ds	1
   909  000018                     ??_I2C_Read2ByteRegister:
   910  000018                     I2C_Write1ByteRegister@address:
   911                           	callstack 0
   912  000018                     _atoi$2156:
   913                           	callstack 0
   914  000018                     ___fldiv@grs:
   915                           	callstack 0
   916  000018                     ___flmul@prod:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x17
   920  000018                     	ds	1
   921  000019                     ??_VEML6030_Init:
   922  000019                     pad@buf:
   923                           	callstack 0
   924  000019                     atoi@n:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x18
   928  000019                     	ds	2
   929  00001B                     I2C_Read2ByteRegister@address:
   930                           	callstack 0
   931  00001B                     pad@p:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x1A
   935  00001B                     	ds	1
   936  00001C                     ___fldiv@bexp:
   937                           	callstack 0
   938  00001C                     I2C_Read2ByteRegister@returnValue:
   939                           	callstack 0
   940  00001C                     ___flmul@temp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x1B
   944  00001C                     	ds	1
   945  00001D                     ??_pad:
   946  00001D                     ___fldiv@aexp:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1C
   950  00001D                     	ds	1
   951  00001E                     ?_VEML6030_GetValue:
   952                           	callstack 0
   953  00001E                     ?___flsub:
   954                           	callstack 0
   955  00001E                     ?_floorf:
   956                           	callstack 0
   957  00001E                     pad@i:
   958                           	callstack 0
   959  00001E                     ___flge@ff1:
   960                           	callstack 0
   961  00001E                     ___flsub@b:
   962                           	callstack 0
   963  00001E                     floorf@x:
   964                           	callstack 0
   965                           
   966                           ; 4 bytes @ 0x1D
   967  00001E                     	ds	2
   968  000020                     pad@w:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x1F
   972  000020                     	ds	2
   973  000022                     ??_floorf:
   974  000022                     VEML6030_GetValue@lightDataAnz:
   975                           	callstack 0
   976  000022                     ___flge@ff2:
   977                           	callstack 0
   978  000022                     ___flsub@a:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x21
   982  000022                     	ds	4
   983  000026                     ??___flge:
   984  000026                     VEML6030_GetValue@data:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x25
   988  000026                     	ds	2
   989  000028                     floorf@m:
   990                           	callstack 0
   991                           
   992                           ; 4 bytes @ 0x27
   993  000028                     	ds	4
   994  00002C                     floorf@e:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x2B
   998  00002C                     	ds	2
   999  00002E                     floorf@u:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x2D
  1003  00002E                     	ds	4
  1004  000032                     ?_efgtoa:
  1005                           	callstack 0
  1006  000032                     efgtoa@fp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x31
  1010  000032                     	ds	2
  1011  000034                     efgtoa@f:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x33
  1015  000034                     	ds	4
  1016  000038                     efgtoa@c:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x37
  1020  000038                     	ds	1
  1021  000039                     ??_efgtoa:
  1022                           
  1023                           ; 1 bytes @ 0x38
  1024  000039                     	ds	5
  1025  00003E                     ?_vfpfcnvrt:
  1026                           	callstack 0
  1027  00003E                     vfpfcnvrt@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x3D
  1031  00003E                     	ds	2
  1032  000040                     vfpfcnvrt@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x3F
  1036  000040                     	ds	2
  1037  000042                     vfpfcnvrt@ap:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x41
  1041  000042                     	ds	2
  1042  000044                     ??_vfpfcnvrt:
  1043                           
  1044                           ; 1 bytes @ 0x43
  1045  000044                     	ds	4
  1046  000048                     _vfpfcnvrt$2117:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x47
  1050  000048                     	ds	2
  1051  00004A                     _vfpfcnvrt$2121:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x49
  1055  00004A                     	ds	2
  1056  00004C                     vfpfcnvrt@f:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x4B
  1060  00004C                     	ds	4
  1061  000050                     vfpfcnvrt@ct:
  1062                           	callstack 0
  1063                           
  1064                           ; 3 bytes @ 0x4F
  1065  000050                     	ds	3
  1066  000053                     vfpfcnvrt@c:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x52
  1070  000053                     	ds	1
  1071  000054                     vfprintf@cfmt:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x53
  1075  000054                     	ds	2
  1076  000056                     
  1077                           ; 1 bytes @ 0x55
  1078 ;;
  1079 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1080 ;;
  1081 ;; *************** function _main *****************
  1082 ;; Defined at:
  1083 ;;		line 53 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels required when called: 14
  1103 ;; This function calls:
  1104 ;;		_SYSTEM_Initialize
  1105 ;;		_VEML6030_GetValue
  1106 ;;		_VEML6030_Init
  1107 ;;		_printf
  1108 ;; This function is called by:
  1109 ;;		Startup code after reset
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text0
  1114  004128                     __ptext0:
  1115                           	callstack 0
  1116  004128                     _main:
  1117                           	callstack 17
  1118  004128                     
  1119                           ;main.c: 55:     SYSTEM_Initialize();
  1120  004128  ECE7  F023         	call	_SYSTEM_Initialize	;wreg free
  1121  00412C                     
  1122                           ;main.c: 56:     VEML6030_Init();
  1123  00412C  EC9E  F023         	call	_VEML6030_Init	;wreg free
  1124  004130                     
  1125                           ;main.c: 63:     (INTCONbits.GIE = 1);
  1126  004130  8EF2               	bsf	242,7,c	;volatile
  1127  004132                     
  1128                           ;main.c: 69:     (INTCONbits.PEIE = 1);
  1129  004132  8CF2               	bsf	242,6,c	;volatile
  1130  004134                     l7311:
  1131                           
  1132                           ;main.c: 75:         light = VEML6030_GetValue();
  1133  004134  EC9C  F021         	call	_VEML6030_GetValue	;wreg free
  1134  004138  C01E  F0A4         	movff	?_VEML6030_GetValue,_light
  1135  00413C  C01F  F0A5         	movff	?_VEML6030_GetValue+1,_light+1
  1136  004140  C020  F0A6         	movff	?_VEML6030_GetValue+2,_light+2
  1137  004144  C021  F0A7         	movff	?_VEML6030_GetValue+3,_light+3
  1138  004148                     
  1139                           ;main.c: 76:         printf("Helligkeit = %.2f lux\r\n",light);
  1140  004148  0E21               	movlw	low STR_1
  1141  00414A  0100               	movlb	0	; () banked
  1142  00414C  6FF4               	movwf	printf@fmt& (0+255),b
  1143  00414E  0E10               	movlw	high STR_1
  1144  004150  6FF5               	movwf	(printf@fmt+1)& (0+255),b
  1145  004152  C0A4  F0F6         	movff	_light,?_printf+2
  1146  004156  C0A5  F0F7         	movff	_light+1,?_printf+3
  1147  00415A  C0A6  F0F8         	movff	_light+2,?_printf+4
  1148  00415E  C0A7  F0F9         	movff	_light+3,?_printf+5
  1149  004162  EC4F  F023         	call	_printf	;wreg free
  1150  004166                     
  1151                           ;main.c: 77:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1152  004166  0E06               	movlw	6
  1153  004168  0101               	movlb	1	; () banked
  1154  00416A  6F59               	movwf	(??_main+1)& (0+255),b
  1155  00416C  0E13               	movlw	19
  1156  00416E  6F58               	movwf	??_main& (0+255),b
  1157  004170  0EAD               	movlw	173
  1158  004172                     u8227:
  1159  004172  2EE8               	decfsz	wreg,f,c
  1160  004174  D7FE               	bra	u8227
  1161  004176  2F58               	decfsz	??_main& (0+255),f,b
  1162  004178  D7FC               	bra	u8227
  1163  00417A  2F59               	decfsz	(??_main+1)& (0+255),f,b
  1164  00417C  D7FA               	bra	u8227
  1165  00417E  F000 F000          	nop2	
  1166  004182  EF9A  F020         	goto	l7311
  1167  004186  EF58  F000         	goto	start
  1168  00418A                     __end_of_main:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _printf *****************
  1172 ;; Defined at:
  1173 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  1176 ;;		 -> STR_1(24), 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  ap              2    0[BANK1 ] PTR void [1]
  1179 ;;		 -> ?_printf(2), 
  1180 ;;  ret             2    0        int 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2   62[BANK0 ] int 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1190 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;Total ram usage:        8 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 12
  1197 ;; This function calls:
  1198 ;;		_vfprintf
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text1
  1205  00469E                     __ptext1:
  1206                           	callstack 0
  1207  00469E                     _printf:
  1208                           	callstack 18
  1209  00469E  0EF6               	movlw	low (?_printf+2)
  1210  0046A0  0101               	movlb	1	; () banked
  1211  0046A2  6F56               	movwf	printf@ap& (0+255),b
  1212  0046A4  0E00               	movlw	high (?_printf+2)
  1213  0046A6  6F57               	movwf	(printf@ap+1)& (0+255),b
  1214  0046A8                     
  1215                           ; BSR set to: 1
  1216  0046A8  0E00               	movlw	0
  1217  0046AA  0100               	movlb	0	; () banked
  1218  0046AC  6FEE               	movwf	vfprintf@fp& (0+255),b
  1219  0046AE  0E00               	movlw	0
  1220  0046B0  6FEF               	movwf	(vfprintf@fp+1)& (0+255),b
  1221  0046B2  C0F4  F0F0         	movff	printf@fmt,vfprintf@fmt
  1222  0046B6  C0F5  F0F1         	movff	printf@fmt+1,vfprintf@fmt+1
  1223  0046BA  0E56               	movlw	low printf@ap
  1224  0046BC  6FF2               	movwf	vfprintf@ap& (0+255),b
  1225  0046BE  0E01               	movlw	high printf@ap
  1226  0046C0  6FF3               	movwf	(vfprintf@ap+1)& (0+255),b
  1227  0046C2  EC62  F020         	call	_vfprintf	;wreg free
  1228  0046C6  0012               	return		;funcret
  1229  0046C8                     __end_of_printf:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _vfprintf *****************
  1233 ;; Defined at:
  1234 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  1237 ;;		 -> NULL(0), 
  1238 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1239 ;;		 -> STR_1(24), 
  1240 ;;  ap              2   60[BANK0 ] PTR PTR void 
  1241 ;;		 -> printf@ap(2), 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1244 ;;		 -> STR_1(24), 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  2   56[BANK0 ] int 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1254 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;Total ram usage:        8 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 11
  1261 ;; This function calls:
  1262 ;;		_vfpfcnvrt
  1263 ;; This function is called by:
  1264 ;;		_printf
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text2
  1269  0040C4                     __ptext2:
  1270                           	callstack 0
  1271  0040C4                     _vfprintf:
  1272                           	callstack 18
  1273  0040C4                     
  1274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1275  0040C4  C0F0  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1276  0040C8  C0F1  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1277  0040CC                     
  1278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1279  0040CC  0E00               	movlw	0
  1280  0040CE  0100               	movlb	0	; () banked
  1281  0040D0  6FAC               	movwf	(_nout+1)& (0+255),b
  1282  0040D2  0E00               	movlw	0
  1283  0040D4  6FAB               	movwf	_nout& (0+255),b
  1284                           
  1285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1286  0040D6  EF80  F020         	goto	l7295
  1287  0040DA                     l7293:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1291  0040DA  C0EE  F03E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1292  0040DE  C0EF  F03F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1293  0040E2  0E54               	movlw	low vfprintf@cfmt
  1294  0040E4  6E40               	movwf	vfpfcnvrt@fmt^0,c
  1295  0040E6  0E00               	movlw	high vfprintf@cfmt
  1296  0040E8  6E41               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1297  0040EA  C0F2  F042         	movff	vfprintf@ap,vfpfcnvrt@ap
  1298  0040EE  C0F3  F043         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1299  0040F2  ECDA  F010         	call	_vfpfcnvrt	;wreg free
  1300  0040F6  503E               	movf	?_vfpfcnvrt^0,w,c
  1301  0040F8  0100               	movlb	0	; () banked
  1302  0040FA  27AB               	addwf	_nout& (0+255),f,b
  1303  0040FC  503F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1304  0040FE  23AC               	addwfc	(_nout+1)& (0+255),f,b
  1305  004100                     l7295:
  1306                           
  1307                           ; BSR set to: 0
  1308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1309  004100  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1310  004104  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1311  004108                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1312  004108  6AF8               	clrf	tblptru,c
  1313  00410A                     	endif
  1314  00410A                     	if	0	;tblptru may be non-zero
  1315  00410A                     	endif
  1316  00410A  0008               	tblrd		*
  1317  00410C  50F5               	movf	tablat,w,c
  1318  00410E  0900               	iorlw	0
  1319  004110  A4D8               	btfss	status,2,c
  1320  004112  EF8D  F020         	goto	u8211
  1321  004116  EF8F  F020         	goto	u8210
  1322  00411A                     u8211:
  1323  00411A  EF6D  F020         	goto	l7293
  1324  00411E                     u8210:
  1325  00411E                     
  1326                           ; BSR set to: 0
  1327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1328  00411E  C0AB  F0EE         	movff	_nout,?_vfprintf
  1329  004122  C0AC  F0EF         	movff	_nout+1,?_vfprintf+1
  1330  004126                     
  1331                           ; BSR set to: 0
  1332  004126  0012               	return		;funcret
  1333  004128                     __end_of_vfprintf:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _vfpfcnvrt *****************
  1337 ;; Defined at:
  1338 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  fp              2   61[COMRAM] PTR struct _IO_FILE
  1341 ;;		 -> NULL(0), 
  1342 ;;  fmt             2   63[COMRAM] PTR PTR unsigned char 
  1343 ;;		 -> vfprintf@cfmt(2), 
  1344 ;;  ap              2   65[COMRAM] PTR PTR void 
  1345 ;;		 -> printf@ap(2), 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  llu             8    0        unsigned long long 
  1348 ;;  ll              8    0        long long 
  1349 ;;  f               4   75[COMRAM] long long 
  1350 ;;  ct              3   79[COMRAM] unsigned char [3]
  1351 ;;  vp              3    0        PTR void 
  1352 ;;  cp              3    0        PTR unsigned char 
  1353 ;;  i               2    0        int 
  1354 ;;  done            2    0        int 
  1355 ;;  c               1   82[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  2   61[COMRAM] int 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:       22 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 10
  1372 ;; This function calls:
  1373 ;;		_atoi
  1374 ;;		_efgtoa
  1375 ;;		_fputc
  1376 ;;		_isdigit
  1377 ;;		_isupper
  1378 ;;		_strncmp
  1379 ;;		_tolower
  1380 ;; This function is called by:
  1381 ;;		_vfprintf
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text3
  1386  0021B4                     __ptext3:
  1387                           	callstack 0
  1388  0021B4                     _vfpfcnvrt:
  1389                           	callstack 18
  1390  0021B4                     
  1391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1392  0021B4  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  0021B8  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  0021BC  CFDE FFF6          	movff	postinc2,tblptrl
  1395  0021C0  CFDD FFF7          	movff	postdec2,tblptrh
  1396  0021C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1397  0021C4  6AF8               	clrf	tblptru,c
  1398  0021C6                     	endif
  1399  0021C6                     	if	0	;tblptru may be non-zero
  1400  0021C6                     	endif
  1401  0021C6  0008               	tblrd		*
  1402  0021C8  50F5               	movf	tablat,w,c
  1403  0021CA  0A25               	xorlw	37
  1404  0021CC  A4D8               	btfss	status,2,c
  1405  0021CE  EFEB  F010         	goto	u8071
  1406  0021D2  EFED  F010         	goto	u8070
  1407  0021D6                     u8071:
  1408  0021D6  EF0D  F013         	goto	l7281
  1409  0021DA                     u8070:
  1410  0021DA                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1412  0021DA  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  0021DE  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  0021E2  2ADE               	incf	postinc2,f,c
  1415  0021E4  0E00               	movlw	0
  1416  0021E6  22DD               	addwfc	postdec2,f,c
  1417  0021E8                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1419  0021E8  0E00               	movlw	0
  1420  0021EA  0100               	movlb	0	; () banked
  1421  0021EC  6FAE               	movwf	(_width+1)& (0+255),b
  1422  0021EE  0E00               	movlw	0
  1423  0021F0  6FAD               	movwf	_width& (0+255),b
  1424  0021F2  C0AD  F0B1         	movff	_width,_flags
  1425  0021F6  C0AE  F0B2         	movff	_width+1,_flags+1
  1426  0021FA                     
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1429  0021FA  69AF               	setf	_prec& (0+255),b
  1430  0021FC  69B0               	setf	(_prec+1)& (0+255),b
  1431  0021FE                     
  1432                           ; BSR set to: 0
  1433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1434  0021FE  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1435  002202  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1436  002206  CFDE FFF6          	movff	postinc2,tblptrl
  1437  00220A  CFDD FFF7          	movff	postdec2,tblptrh
  1438  00220E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1439  00220E  6AF8               	clrf	tblptru,c
  1440  002210                     	endif
  1441  002210                     	if	0	;tblptru may be non-zero
  1442  002210                     	endif
  1443  002210  0008               	tblrd		*
  1444  002212  50F5               	movf	tablat,w,c
  1445  002214  0A2E               	xorlw	46
  1446  002216  A4D8               	btfss	status,2,c
  1447  002218  EF10  F011         	goto	u8081
  1448  00221C  EF12  F011         	goto	u8080
  1449  002220                     u8081:
  1450  002220  EF91  F011         	goto	l7227
  1451  002224                     u8080:
  1452  002224                     
  1453                           ; BSR set to: 0
  1454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1455  002224  0E00               	movlw	0
  1456  002226  6FB0               	movwf	(_prec+1)& (0+255),b
  1457  002228  0E00               	movlw	0
  1458  00222A  6FAF               	movwf	_prec& (0+255),b
  1459  00222C                     
  1460                           ; BSR set to: 0
  1461                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1462  00222C  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1463  002230  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1464  002234  2ADE               	incf	postinc2,f,c
  1465  002236  0E00               	movlw	0
  1466  002238  22DD               	addwfc	postdec2,f,c
  1467  00223A                     
  1468                           ; BSR set to: 0
  1469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1470  00223A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1471  00223E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1472  002242  CFDE FFF6          	movff	postinc2,tblptrl
  1473  002246  CFDD FFF7          	movff	postdec2,tblptrh
  1474  00224A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1475  00224A  6AF8               	clrf	tblptru,c
  1476  00224C                     	endif
  1477  00224C                     	if	0	;tblptru may be non-zero
  1478  00224C                     	endif
  1479  00224C  0008               	tblrd		*
  1480  00224E  50F5               	movf	tablat,w,c
  1481  002250  0A2A               	xorlw	42
  1482  002252  A4D8               	btfss	status,2,c
  1483  002254  EF2E  F011         	goto	u8091
  1484  002258  EF30  F011         	goto	u8090
  1485  00225C                     u8091:
  1486  00225C  EF4D  F011         	goto	l7217
  1487  002260                     u8090:
  1488  002260                     
  1489                           ; BSR set to: 0
  1490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1491  002260  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1492  002264  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1493  002268  2ADE               	incf	postinc2,f,c
  1494  00226A  0E00               	movlw	0
  1495  00226C  22DD               	addwfc	postdec2,f,c
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1498  00226E  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1499  002272  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1500  002276  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1501  00227A  0E02               	movlw	2
  1502  00227C  26DE               	addwf	postinc2,f,c
  1503  00227E  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1504  002282  0E00               	movlw	0
  1505  002284  22DD               	addwfc	postdec2,f,c
  1506  002286  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1507  00228A  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1508  00228E  CFDE F0AF          	movff	postinc2,_prec
  1509  002292  CFDD F0B0          	movff	postdec2,_prec+1
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1512  002296  EF91  F011         	goto	l7227
  1513  00229A                     l7217:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1517  00229A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1518  00229E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1519  0022A2  CFDE F00C          	movff	postinc2,atoi@s
  1520  0022A6  CFDD F00D          	movff	postdec2,atoi@s+1
  1521  0022AA  ECEF  F018         	call	_atoi	;wreg free
  1522  0022AE  C00C  F0AF         	movff	?_atoi,_prec
  1523  0022B2  C00D  F0B0         	movff	?_atoi+1,_prec+1
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1526  0022B6  EF64  F011         	goto	l7221
  1527  0022BA                     l7219:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1530  0022BA  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531  0022BE  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532  0022C2  2ADE               	incf	postinc2,f,c
  1533  0022C4  0E00               	movlw	0
  1534  0022C6  22DD               	addwfc	postdec2,f,c
  1535  0022C8                     l7221:
  1536  0022C8  0ED0               	movlw	208
  1537  0022CA  6E44               	movwf	??_vfpfcnvrt^0,c
  1538  0022CC  0EFF               	movlw	255
  1539  0022CE  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1540  0022D0  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1541  0022D4  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1542  0022D8  CFDE FFF6          	movff	postinc2,tblptrl
  1543  0022DC  CFDD FFF7          	movff	postdec2,tblptrh
  1544  0022E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1545  0022E0  6AF8               	clrf	tblptru,c
  1546  0022E2                     	endif
  1547  0022E2                     	if	0	;tblptru may be non-zero
  1548  0022E2                     	endif
  1549  0022E2  0008               	tblrd		*
  1550  0022E4  50F5               	movf	tablat,w,c
  1551  0022E6  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  1552  0022E8  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  1553  0022EA  5044               	movf	??_vfpfcnvrt^0,w,c
  1554  0022EC  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1555  0022EE  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1556  0022F0  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1557  0022F2  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  1558  0022F4  E10A               	bnz	u8100
  1559  0022F6  0E0A               	movlw	10
  1560  0022F8  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1561  0022FA  A0D8               	btfss	status,0,c
  1562  0022FC  EF82  F011         	goto	u8101
  1563  002300  EF85  F011         	goto	u8100
  1564  002304                     u8101:
  1565  002304  0E01               	movlw	1
  1566  002306  EF86  F011         	goto	u8110
  1567  00230A                     u8100:
  1568  00230A  0E00               	movlw	0
  1569  00230C                     u8110:
  1570  00230C  6E48               	movwf	_vfpfcnvrt$2117^0,c
  1571  00230E  6A49               	clrf	(_vfpfcnvrt$2117+1)^0,c
  1572  002310  5048               	movf	_vfpfcnvrt$2117^0,w,c
  1573  002312  1049               	iorwf	(_vfpfcnvrt$2117+1)^0,w,c
  1574  002314  A4D8               	btfss	status,2,c
  1575  002316  EF8F  F011         	goto	u8121
  1576  00231A  EF91  F011         	goto	u8120
  1577  00231E                     u8121:
  1578  00231E  EF5D  F011         	goto	l7219
  1579  002322                     u8120:
  1580  002322                     l7227:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1583  002322  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584  002326  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585  00232A  CFDE FFF6          	movff	postinc2,tblptrl
  1586  00232E  CFDD FFF7          	movff	postdec2,tblptrh
  1587  002332                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1588  002332  6AF8               	clrf	tblptru,c
  1589  002334                     	endif
  1590  002334                     	if	0	;tblptru may be non-zero
  1591  002334                     	endif
  1592  002334  0008               	tblrd		*
  1593  002336  50F5               	movf	tablat,w,c
  1594  002338  6E0B               	movwf	tolower@c^0,c
  1595  00233A  6A0C               	clrf	(tolower@c+1)^0,c
  1596  00233C  ECC5  F020         	call	_tolower	;wreg free
  1597  002340  500B               	movf	?_tolower^0,w,c
  1598  002342  6E50               	movwf	vfpfcnvrt@ct^0,c
  1599  002344                     
  1600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1601  002344  5050               	movf	vfpfcnvrt@ct^0,w,c
  1602  002346  B4D8               	btfsc	status,2,c
  1603  002348  EFA8  F011         	goto	u8131
  1604  00234C  EFAA  F011         	goto	u8130
  1605  002350                     u8131:
  1606  002350  EFE4  F011         	goto	l7237
  1607  002354                     u8130:
  1608  002354                     
  1609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1610  002354  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1611  002358  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1612  00235C  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1613  002360  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1614  002364  0E01               	movlw	1
  1615  002366  2644               	addwf	??_vfpfcnvrt^0,f,c
  1616  002368  0E00               	movlw	0
  1617  00236A  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1618  00236C  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1619  002370  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1620  002374                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1621  002374  6AF8               	clrf	tblptru,c
  1622  002376                     	endif
  1623  002376                     	if	0	;tblptru may be non-zero
  1624  002376                     	endif
  1625  002376  0008               	tblrd		*
  1626  002378  50F5               	movf	tablat,w,c
  1627  00237A  6E0B               	movwf	tolower@c^0,c
  1628  00237C  6A0C               	clrf	(tolower@c+1)^0,c
  1629  00237E  ECC5  F020         	call	_tolower	;wreg free
  1630  002382  500B               	movf	?_tolower^0,w,c
  1631  002384  6E51               	movwf	(vfpfcnvrt@ct+1)^0,c
  1632  002386                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1634  002386  5051               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1635  002388  B4D8               	btfsc	status,2,c
  1636  00238A  EFC9  F011         	goto	u8141
  1637  00238E  EFCB  F011         	goto	u8140
  1638  002392                     u8141:
  1639  002392  EFE4  F011         	goto	l7237
  1640  002396                     u8140:
  1641  002396                     
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1643  002396  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1644  00239A  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1645  00239E  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1646  0023A2  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1647  0023A6  0E02               	movlw	2
  1648  0023A8  2644               	addwf	??_vfpfcnvrt^0,f,c
  1649  0023AA  0E00               	movlw	0
  1650  0023AC  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1651  0023AE  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1652  0023B2  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1653  0023B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1654  0023B6  6AF8               	clrf	tblptru,c
  1655  0023B8                     	endif
  1656  0023B8                     	if	0	;tblptru may be non-zero
  1657  0023B8                     	endif
  1658  0023B8  0008               	tblrd		*
  1659  0023BA  50F5               	movf	tablat,w,c
  1660  0023BC  6E0B               	movwf	tolower@c^0,c
  1661  0023BE  6A0C               	clrf	(tolower@c+1)^0,c
  1662  0023C0  ECC5  F020         	call	_tolower	;wreg free
  1663  0023C4  500B               	movf	?_tolower^0,w,c
  1664  0023C6  6E52               	movwf	(vfpfcnvrt@ct+2)^0,c
  1665  0023C8                     l7237:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1668  0023C8  0E66               	movlw	102
  1669  0023CA  1850               	xorwf	vfpfcnvrt@ct^0,w,c
  1670  0023CC  A4D8               	btfss	status,2,c
  1671  0023CE  EFEB  F011         	goto	u8151
  1672  0023D2  EFED  F011         	goto	u8150
  1673  0023D6                     u8151:
  1674  0023D6  EF2E  F012         	goto	l7249
  1675  0023DA                     u8150:
  1676  0023DA                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1678  0023DA  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1679  0023DE  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1680  0023E2  CFDE FFF6          	movff	postinc2,tblptrl
  1681  0023E6  CFDD FFF7          	movff	postdec2,tblptrh
  1682  0023EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1683  0023EA  6AF8               	clrf	tblptru,c
  1684  0023EC                     	endif
  1685  0023EC                     	if	0	;tblptru may be non-zero
  1686  0023EC                     	endif
  1687  0023EC  0008               	tblrd		*
  1688  0023EE  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1689  0023F2                     
  1690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1691  0023F2  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1692  0023F6  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1693  0023FA  2ADE               	incf	postinc2,f,c
  1694  0023FC  0E00               	movlw	0
  1695  0023FE  22DD               	addwfc	postdec2,f,c
  1696  002400                     
  1697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1698  002400  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1699  002404  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1700  002408  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1701  00240C  0E04               	movlw	4
  1702  00240E  26DE               	addwf	postinc2,f,c
  1703  002410  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1704  002414  0E00               	movlw	0
  1705  002416  22DD               	addwfc	postdec2,f,c
  1706  002418  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1707  00241C  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1708  002420  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  1709  002424  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  1710  002428  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  1711  00242C  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  1712  002430                     
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1714  002430  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1715  002434  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1716  002438  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  1717  00243C  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1718  002440  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1719  002444  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1720  002448  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  1721  00244C  EC27  F008         	call	_efgtoa	;wreg free
  1722  002450  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  1723  002454  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1724  002458  EF29  F013         	goto	l1546
  1725  00245C                     l7249:
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1728  00245C  0E50               	movlw	low vfpfcnvrt@ct
  1729  00245E  6E05               	movwf	strncmp@_l^0,c
  1730  002460  0E00               	movlw	high vfpfcnvrt@ct
  1731  002462  6E06               	movwf	(strncmp@_l+1)^0,c
  1732  002464  0E49               	movlw	low STR_10
  1733  002466  6E07               	movwf	strncmp@_r^0,c
  1734  002468  0E10               	movlw	high STR_10
  1735  00246A  6E08               	movwf	(strncmp@_r+1)^0,c
  1736  00246C  0E00               	movlw	0
  1737  00246E  6E0A               	movwf	(strncmp@n+1)^0,c
  1738  002470  0E02               	movlw	2
  1739  002472  6E09               	movwf	strncmp@n^0,c
  1740  002474  EC40  F01B         	call	_strncmp	;wreg free
  1741  002478  5005               	movf	?_strncmp^0,w,c
  1742  00247A  1006               	iorwf	(?_strncmp+1)^0,w,c
  1743  00247C  A4D8               	btfss	status,2,c
  1744  00247E  EF43  F012         	goto	u8161
  1745  002482  EF45  F012         	goto	u8160
  1746  002486                     u8161:
  1747  002486  EFD6  F012         	goto	l7265
  1748  00248A                     u8160:
  1749  00248A                     
  1750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1751  00248A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1752  00248E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1753  002492  CFDE F044          	movff	postinc2,??_vfpfcnvrt
  1754  002496  CFDD F045          	movff	postdec2,??_vfpfcnvrt+1
  1755  00249A  0E01               	movlw	1
  1756  00249C  2644               	addwf	??_vfpfcnvrt^0,f,c
  1757  00249E  0E00               	movlw	0
  1758  0024A0  2245               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1759  0024A2  C044  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1760  0024A6  C045  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1761  0024AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1762  0024AA  6AF8               	clrf	tblptru,c
  1763  0024AC                     	endif
  1764  0024AC                     	if	0	;tblptru may be non-zero
  1765  0024AC                     	endif
  1766  0024AC  0008               	tblrd		*
  1767  0024AE  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1768  0024B2  0EBF               	movlw	191
  1769  0024B4  6E44               	movwf	??_vfpfcnvrt^0,c
  1770  0024B6  0EFF               	movlw	255
  1771  0024B8  6E45               	movwf	(??_vfpfcnvrt+1)^0,c
  1772  0024BA  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1773  0024BE  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1774  0024C2  CFDE FFF6          	movff	postinc2,tblptrl
  1775  0024C6  CFDD FFF7          	movff	postdec2,tblptrh
  1776  0024CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1777  0024CA  6AF8               	clrf	tblptru,c
  1778  0024CC                     	endif
  1779  0024CC                     	if	0	;tblptru may be non-zero
  1780  0024CC                     	endif
  1781  0024CC  0008               	tblrd		*
  1782  0024CE  50F5               	movf	tablat,w,c
  1783  0024D0  6E46               	movwf	(??_vfpfcnvrt+2)^0,c
  1784  0024D2  6A47               	clrf	(??_vfpfcnvrt+3)^0,c
  1785  0024D4  5044               	movf	??_vfpfcnvrt^0,w,c
  1786  0024D6  2646               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1787  0024D8  5045               	movf	(??_vfpfcnvrt+1)^0,w,c
  1788  0024DA  2247               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1789  0024DC  5047               	movf	(??_vfpfcnvrt+3)^0,w,c
  1790  0024DE  E10A               	bnz	u8170
  1791  0024E0  0E1A               	movlw	26
  1792  0024E2  5C46               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1793  0024E4  A0D8               	btfss	status,0,c
  1794  0024E6  EF77  F012         	goto	u8171
  1795  0024EA  EF7A  F012         	goto	u8170
  1796  0024EE                     u8171:
  1797  0024EE  0E01               	movlw	1
  1798  0024F0  EF7B  F012         	goto	u8180
  1799  0024F4                     u8170:
  1800  0024F4  0E00               	movlw	0
  1801  0024F6                     u8180:
  1802  0024F6  6E4A               	movwf	_vfpfcnvrt$2121^0,c
  1803  0024F8  6A4B               	clrf	(_vfpfcnvrt$2121+1)^0,c
  1804  0024FA  504A               	movf	_vfpfcnvrt$2121^0,w,c
  1805  0024FC  104B               	iorwf	(_vfpfcnvrt$2121+1)^0,w,c
  1806  0024FE  B4D8               	btfsc	status,2,c
  1807  002500  EF84  F012         	goto	u8191
  1808  002504  EF86  F012         	goto	u8190
  1809  002508                     u8191:
  1810  002508  EFA0  F012         	goto	l7259
  1811  00250C                     u8190:
  1812  00250C                     
  1813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1814  00250C  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1815  002510  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1816  002514  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1817  002518  0E04               	movlw	4
  1818  00251A  26DE               	addwf	postinc2,f,c
  1819  00251C  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1820  002520  0E00               	movlw	0
  1821  002522  22DD               	addwfc	postdec2,f,c
  1822  002524  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1823  002528  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1824  00252C  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  1825  002530  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  1826  002534  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  1827  002538  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1830  00253C  EFB8  F012         	goto	l1553
  1831  002540                     l7259:
  1832                           
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1834  002540  C042  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1835  002544  C043  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1836  002548  CFDF F044          	movff	indf2,??_vfpfcnvrt
  1837  00254C  0E04               	movlw	4
  1838  00254E  26DE               	addwf	postinc2,f,c
  1839  002550  CFDF F045          	movff	indf2,??_vfpfcnvrt+1
  1840  002554  0E00               	movlw	0
  1841  002556  22DD               	addwfc	postdec2,f,c
  1842  002558  C044  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1843  00255C  C045  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1844  002560  CFDE F04C          	movff	postinc2,vfpfcnvrt@f
  1845  002564  CFDE F04D          	movff	postinc2,vfpfcnvrt@f+1
  1846  002568  CFDE F04E          	movff	postinc2,vfpfcnvrt@f+2
  1847  00256C  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+3
  1848  002570                     l1553:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1851  002570  0E02               	movlw	2
  1852  002572  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  002576  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  00257A  26DE               	addwf	postinc2,f,c
  1855  00257C  0E00               	movlw	0
  1856  00257E  22DD               	addwfc	postdec2,f,c
  1857  002580                     
  1858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  1859  002580  C03E  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1860  002584  C03F  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1861  002588  C04C  F034         	movff	vfpfcnvrt@f,efgtoa@f
  1862  00258C  C04D  F035         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1863  002590  C04E  F036         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1864  002594  C04F  F037         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1865  002598  C053  F038         	movff	vfpfcnvrt@c,efgtoa@c
  1866  00259C  EC27  F008         	call	_efgtoa	;wreg free
  1867  0025A0  C032  F03E         	movff	?_efgtoa,?_vfpfcnvrt
  1868  0025A4  C033  F03F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1869  0025A8  EF29  F013         	goto	l1546
  1870  0025AC                     l7265:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1873  0025AC  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1874  0025B0  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1875  0025B4  CFDE FFF6          	movff	postinc2,tblptrl
  1876  0025B8  CFDD FFF7          	movff	postdec2,tblptrh
  1877  0025BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1878  0025BC  6AF8               	clrf	tblptru,c
  1879  0025BE                     	endif
  1880  0025BE                     	if	0	;tblptru may be non-zero
  1881  0025BE                     	endif
  1882  0025BE  0008               	tblrd		*
  1883  0025C0  50F5               	movf	tablat,w,c
  1884  0025C2  0A25               	xorlw	37
  1885  0025C4  A4D8               	btfss	status,2,c
  1886  0025C6  EFE7  F012         	goto	u8201
  1887  0025CA  EFE9  F012         	goto	u8200
  1888  0025CE                     u8201:
  1889  0025CE  EF00  F013         	goto	l7275
  1890  0025D2                     u8200:
  1891  0025D2                     
  1892                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1893  0025D2  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1894  0025D6  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1895  0025DA  2ADE               	incf	postinc2,f,c
  1896  0025DC  0E00               	movlw	0
  1897  0025DE  22DD               	addwfc	postdec2,f,c
  1898  0025E0                     
  1899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1900  0025E0  0E00               	movlw	0
  1901  0025E2  6E08               	movwf	(fputc@c+1)^0,c
  1902  0025E4  0E25               	movlw	37
  1903  0025E6  6E07               	movwf	fputc@c^0,c
  1904  0025E8  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1905  0025EC  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1906  0025F0  EC35  F01E         	call	_fputc	;wreg free
  1907  0025F4                     l7271:
  1908                           
  1909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1910  0025F4  0E00               	movlw	0
  1911  0025F6  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1912  0025F8  0E01               	movlw	1
  1913  0025FA  6E3E               	movwf	?_vfpfcnvrt^0,c
  1914  0025FC  EF29  F013         	goto	l1546
  1915  002600                     l7275:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1918  002600  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1919  002604  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1920  002608  2ADE               	incf	postinc2,f,c
  1921  00260A  0E00               	movlw	0
  1922  00260C  22DD               	addwfc	postdec2,f,c
  1923  00260E                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1925  00260E  0E00               	movlw	0
  1926  002610  6E3F               	movwf	(?_vfpfcnvrt+1)^0,c
  1927  002612  0E00               	movlw	0
  1928  002614  6E3E               	movwf	?_vfpfcnvrt^0,c
  1929  002616  EF29  F013         	goto	l1546
  1930  00261A                     l7281:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1933  00261A  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  00261E  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  002622  CFDE FFF6          	movff	postinc2,tblptrl
  1936  002626  CFDD FFF7          	movff	postdec2,tblptrh
  1937  00262A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1938  00262A  6AF8               	clrf	tblptru,c
  1939  00262C                     	endif
  1940  00262C                     	if	0	;tblptru may be non-zero
  1941  00262C                     	endif
  1942  00262C  0008               	tblrd		*
  1943  00262E  50F5               	movf	tablat,w,c
  1944  002630  6E07               	movwf	fputc@c^0,c
  1945  002632  6A08               	clrf	(fputc@c+1)^0,c
  1946  002634  C03E  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1947  002638  C03F  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1948  00263C  EC35  F01E         	call	_fputc	;wreg free
  1949  002640                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1951  002640  C040  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952  002644  C041  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953  002648  2ADE               	incf	postinc2,f,c
  1954  00264A  0E00               	movlw	0
  1955  00264C  22DD               	addwfc	postdec2,f,c
  1956  00264E  EFFA  F012         	goto	l7271
  1957  002652                     l1546:
  1958  002652  0012               	return		;funcret
  1959  002654                     __end_of_vfpfcnvrt:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _strncmp *****************
  1963 ;; Defined at:
  1964 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  1967 ;;		 -> vfpfcnvrt@ct(3), 
  1968 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  1969 ;;		 -> STR_12(3), 
  1970 ;;  n               2    8[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  r               2   13[COMRAM] PTR const unsigned char 
  1973 ;;		 -> STR_12(3), 
  1974 ;;  l               2   11[COMRAM] PTR const unsigned char 
  1975 ;;		 -> vfpfcnvrt@ct(3), 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  2    4[COMRAM] int 
  1978 ;; Registers used:
  1979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1985 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;Total ram usage:       11 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 4
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_vfpfcnvrt
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text4
  2000  003680                     __ptext4:
  2001                           	callstack 0
  2002  003680                     _strncmp:
  2003                           	callstack 23
  2004  003680  C005  F00C         	movff	strncmp@_l,strncmp@l
  2005  003684  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2006  003688  C007  F00E         	movff	strncmp@_r,strncmp@r
  2007  00368C  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2008  003690  0609               	decf	strncmp@n^0,f,c
  2009  003692  A0D8               	btfss	status,0,c
  2010  003694  060A               	decf	(strncmp@n+1)^0,f,c
  2011  003696  2809               	incf	strncmp@n^0,w,c
  2012  003698  E106               	bnz	u8021
  2013  00369A  280A               	incf	(strncmp@n+1)^0,w,c
  2014  00369C  A4D8               	btfss	status,2,c
  2015  00369E  EF53  F01B         	goto	u8021
  2016  0036A2  EF55  F01B         	goto	u8020
  2017  0036A6                     u8021:
  2018  0036A6  EF62  F01B         	goto	l7187
  2019  0036AA                     u8020:
  2020  0036AA  0E00               	movlw	0
  2021  0036AC  6E06               	movwf	(?_strncmp+1)^0,c
  2022  0036AE  0E00               	movlw	0
  2023  0036B0  6E05               	movwf	?_strncmp^0,c
  2024  0036B2  EFAD  F01B         	goto	l1671
  2025  0036B6                     l7185:
  2026  0036B6  4A0C               	infsnz	strncmp@l^0,f,c
  2027  0036B8  2A0D               	incf	(strncmp@l+1)^0,f,c
  2028  0036BA  4A0E               	infsnz	strncmp@r^0,f,c
  2029  0036BC  2A0F               	incf	(strncmp@r+1)^0,f,c
  2030  0036BE  0609               	decf	strncmp@n^0,f,c
  2031  0036C0  A0D8               	btfss	status,0,c
  2032  0036C2  060A               	decf	(strncmp@n+1)^0,f,c
  2033  0036C4                     l7187:
  2034  0036C4  C00C  FFD9         	movff	strncmp@l,fsr2l
  2035  0036C8  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2036  0036CC  50DF               	movf	indf2,w,c
  2037  0036CE  B4D8               	btfsc	status,2,c
  2038  0036D0  EF6C  F01B         	goto	u8031
  2039  0036D4  EF6E  F01B         	goto	u8030
  2040  0036D8                     u8031:
  2041  0036D8  EF9B  F01B         	goto	l7195
  2042  0036DC                     u8030:
  2043  0036DC  C00E  FFF6         	movff	strncmp@r,tblptrl
  2044  0036E0  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2045  0036E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2046  0036E4  6AF8               	clrf	tblptru,c
  2047  0036E6                     	endif
  2048  0036E6                     	if	0	;tblptru may be non-zero
  2049  0036E6                     	endif
  2050  0036E6  0008               	tblrd		*
  2051  0036E8  50F5               	movf	tablat,w,c
  2052  0036EA  0900               	iorlw	0
  2053  0036EC  B4D8               	btfsc	status,2,c
  2054  0036EE  EF7B  F01B         	goto	u8041
  2055  0036F2  EF7D  F01B         	goto	u8040
  2056  0036F6                     u8041:
  2057  0036F6  EF9B  F01B         	goto	l7195
  2058  0036FA                     u8040:
  2059  0036FA  5009               	movf	strncmp@n^0,w,c
  2060  0036FC  100A               	iorwf	(strncmp@n+1)^0,w,c
  2061  0036FE  B4D8               	btfsc	status,2,c
  2062  003700  EF84  F01B         	goto	u8051
  2063  003704  EF86  F01B         	goto	u8050
  2064  003708                     u8051:
  2065  003708  EF9B  F01B         	goto	l7195
  2066  00370C                     u8050:
  2067  00370C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2068  003710  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2069  003714  50DF               	movf	indf2,w,c
  2070  003716  6E0B               	movwf	??_strncmp^0,c
  2071  003718  C00E  FFF6         	movff	strncmp@r,tblptrl
  2072  00371C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2073  003720                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2074  003720  6AF8               	clrf	tblptru,c
  2075  003722                     	endif
  2076  003722                     	if	0	;tblptru may be non-zero
  2077  003722                     	endif
  2078  003722  0008               	tblrd		*
  2079  003724  50F5               	movf	tablat,w,c
  2080  003726  180B               	xorwf	??_strncmp^0,w,c
  2081  003728  B4D8               	btfsc	status,2,c
  2082  00372A  EF99  F01B         	goto	u8061
  2083  00372E  EF9B  F01B         	goto	u8060
  2084  003732                     u8061:
  2085  003732  EF5B  F01B         	goto	l7185
  2086  003736                     u8060:
  2087  003736                     l7195:
  2088  003736  C00C  FFD9         	movff	strncmp@l,fsr2l
  2089  00373A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2090  00373E  50DF               	movf	indf2,w,c
  2091  003740  6E0B               	movwf	??_strncmp^0,c
  2092  003742  C00E  FFF6         	movff	strncmp@r,tblptrl
  2093  003746  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2094  00374A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2095  00374A  6AF8               	clrf	tblptru,c
  2096  00374C                     	endif
  2097  00374C                     	if	0	;tblptru may be non-zero
  2098  00374C                     	endif
  2099  00374C  0008               	tblrd		*
  2100  00374E  50F5               	movf	tablat,w,c
  2101  003750  5C0B               	subwf	??_strncmp^0,w,c
  2102  003752  6E05               	movwf	?_strncmp^0,c
  2103  003754  6A06               	clrf	(?_strncmp+1)^0,c
  2104  003756  A0D8               	btfss	status,0,c
  2105  003758  0606               	decf	(?_strncmp+1)^0,f,c
  2106  00375A                     l1671:
  2107  00375A  0012               	return		;funcret
  2108  00375C                     __end_of_strncmp:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _efgtoa *****************
  2112 ;; Defined at:
  2113 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  2116 ;;		 -> NULL(0), 
  2117 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  2118 ;;  c               1   55[COMRAM] unsigned char 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  u               4   52[BANK0 ] unsigned char 
  2121 ;;  g               4   44[BANK0 ] unsigned char 
  2122 ;;  l               4   38[BANK0 ] unsigned char 
  2123 ;;  h               4   34[BANK0 ] unsigned char 
  2124 ;;  ou              4   20[BANK0 ] unsigned char 
  2125 ;;  n               2   50[BANK0 ] int 
  2126 ;;  e               2   48[BANK0 ] int 
  2127 ;;  i               2   42[BANK0 ] int 
  2128 ;;  w               2   30[BANK0 ] int 
  2129 ;;  p               2   28[BANK0 ] int 
  2130 ;;  sign            2   26[BANK0 ] int 
  2131 ;;  d               2   24[BANK0 ] int 
  2132 ;;  m               2   18[BANK0 ] int 
  2133 ;;  ne              2   16[BANK0 ] int 
  2134 ;;  pp              2   14[BANK0 ] int 
  2135 ;;  t               2   12[BANK0 ] int 
  2136 ;;  mode            1   33[BANK0 ] unsigned char 
  2137 ;;  nmode           1   32[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   49[COMRAM] int 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2147 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;Total ram usage:       68 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 9
  2154 ;; This function calls:
  2155 ;;		___awdiv
  2156 ;;		___awmod
  2157 ;;		___fladd
  2158 ;;		___fldiv
  2159 ;;		___fleq
  2160 ;;		___flge
  2161 ;;		___flmul
  2162 ;;		___flneg
  2163 ;;		___flsub
  2164 ;;		___fltol
  2165 ;;		___fpclassifyf
  2166 ;;		_floorf
  2167 ;;		_isupper
  2168 ;;		_pad
  2169 ;;		_strcpy
  2170 ;;		_tolower
  2171 ;; This function is called by:
  2172 ;;		_vfpfcnvrt
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text5
  2177  00104E                     __ptext5:
  2178                           	callstack 0
  2179  00104E                     _efgtoa:
  2180                           	callstack 18
  2181  00104E                     
  2182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2183  00104E  0E00               	movlw	0
  2184  001050  0100               	movlb	0	; () banked
  2185  001052  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  2186  001054  0E00               	movlw	0
  2187  001056  6FD0               	movwf	efgtoa@sign& (0+255),b
  2188  001058                     
  2189                           ; BSR set to: 0
  2190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2191  001058  C034  F0E2         	movff	efgtoa@f,efgtoa@g
  2192  00105C  C035  F0E3         	movff	efgtoa@f+1,efgtoa@g+1
  2193  001060  C036  F0E4         	movff	efgtoa@f+2,efgtoa@g+2
  2194  001064  C037  F0E5         	movff	efgtoa@f+3,efgtoa@g+3
  2195  001068                     
  2196                           ; BSR set to: 0
  2197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2198  001068  BFE5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2199  00106A  EF3B  F008         	goto	u7410
  2200  00106E  EF39  F008         	goto	u7411
  2201  001072                     u7411:
  2202  001072  EF51  F008         	goto	l6839
  2203  001076                     u7410:
  2204  001076                     
  2205                           ; BSR set to: 0
  2206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2207  001076  0E00               	movlw	0
  2208  001078  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  2209  00107A  0E01               	movlw	1
  2210  00107C  6FD0               	movwf	efgtoa@sign& (0+255),b
  2211  00107E                     
  2212                           ; BSR set to: 0
  2213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2214  00107E  C0E2  F005         	movff	efgtoa@g,___flneg@f1
  2215  001082  C0E3  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2216  001086  C0E4  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2217  00108A  C0E5  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2218  00108E  EC60  F022         	call	___flneg	;wreg free
  2219  001092  C005  F0E2         	movff	?___flneg,efgtoa@g
  2220  001096  C006  F0E3         	movff	?___flneg+1,efgtoa@g+1
  2221  00109A  C007  F0E4         	movff	?___flneg+2,efgtoa@g+2
  2222  00109E  C008  F0E5         	movff	?___flneg+3,efgtoa@g+3
  2223  0010A2                     l6839:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2226  0010A2  0E00               	movlw	0
  2227  0010A4  0100               	movlb	0	; () banked
  2228  0010A6  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2229  0010A8  0E00               	movlw	0
  2230  0010AA  6FE8               	movwf	efgtoa@n& (0+255),b
  2231  0010AC                     
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2234  0010AC  C0AD  F0D4         	movff	_width,efgtoa@w
  2235  0010B0  C0AE  F0D5         	movff	_width+1,efgtoa@w+1
  2236  0010B4                     
  2237                           ; BSR set to: 0
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2239  0010B4  51D0               	movf	efgtoa@sign& (0+255),w,b
  2240  0010B6  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2241  0010B8  A4D8               	btfss	status,2,c
  2242  0010BA  EF61  F008         	goto	u7421
  2243  0010BE  EF63  F008         	goto	u7420
  2244  0010C2                     u7421:
  2245  0010C2  EF6A  F008         	goto	l6847
  2246  0010C6                     u7420:
  2247  0010C6                     
  2248                           ; BSR set to: 0
  2249  0010C6  A5B1               	btfss	_flags& (0+255),2,b
  2250  0010C8  EF68  F008         	goto	u7431
  2251  0010CC  EF6A  F008         	goto	u7430
  2252  0010D0                     u7431:
  2253  0010D0  EF84  F008         	goto	l6859
  2254  0010D4                     u7430:
  2255  0010D4                     l6847:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2259  0010D4  51D0               	movf	efgtoa@sign& (0+255),w,b
  2260  0010D6  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2261  0010D8  A4D8               	btfss	status,2,c
  2262  0010DA  EF71  F008         	goto	u7441
  2263  0010DE  EF73  F008         	goto	u7440
  2264  0010E2                     u7441:
  2265  0010E2  EF79  F008         	goto	l6851
  2266  0010E6                     u7440:
  2267  0010E6                     
  2268                           ; BSR set to: 0
  2269  0010E6  0E00               	movlw	0
  2270  0010E8  6FB7               	movwf	(_efgtoa$2091+1)& (0+255),b
  2271  0010EA  0E2B               	movlw	43
  2272  0010EC  6FB6               	movwf	_efgtoa$2091& (0+255),b
  2273  0010EE  EF7D  F008         	goto	l6853
  2274  0010F2                     l6851:
  2275                           
  2276                           ; BSR set to: 0
  2277  0010F2  0E00               	movlw	0
  2278  0010F4  6FB7               	movwf	(_efgtoa$2091+1)& (0+255),b
  2279  0010F6  0E2D               	movlw	45
  2280  0010F8  6FB6               	movwf	_efgtoa$2091& (0+255),b
  2281  0010FA                     l6853:
  2282                           
  2283                           ; BSR set to: 0
  2284  0010FA  C0B6  F100         	movff	_efgtoa$2091,_dbuf
  2285  0010FE                     
  2286                           ; BSR set to: 0
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2288  0010FE  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  2289  001100  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  2290  001102                     
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2293  001102  07D4               	decf	efgtoa@w& (0+255),f,b
  2294  001104  A0D8               	btfss	status,0,c
  2295  001106  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  2296  001108                     l6859:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2300  001108  C0E2  F005         	movff	efgtoa@g,___fpclassifyf@x
  2301  00110C  C0E3  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2302  001110  C0E4  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2303  001114  C0E5  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2304  001118  ECC1  F01A         	call	___fpclassifyf	;wreg free
  2305  00111C  0405               	decf	?___fpclassifyf^0,w,c
  2306  00111E  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2307  001120  A4D8               	btfss	status,2,c
  2308  001122  EF95  F008         	goto	u7451
  2309  001126  EF97  F008         	goto	u7450
  2310  00112A                     u7451:
  2311  00112A  EFEE  F008         	goto	l6877
  2312  00112E                     u7450:
  2313  00112E  0EBF               	movlw	191
  2314  001130  6E39               	movwf	??_efgtoa^0,c
  2315  001132  0EFF               	movlw	255
  2316  001134  6E3A               	movwf	(??_efgtoa+1)^0,c
  2317  001136  5038               	movf	efgtoa@c^0,w,c
  2318  001138  6E3B               	movwf	(??_efgtoa+2)^0,c
  2319  00113A  6A3C               	clrf	(??_efgtoa+3)^0,c
  2320  00113C  5039               	movf	??_efgtoa^0,w,c
  2321  00113E  263B               	addwf	(??_efgtoa+2)^0,f,c
  2322  001140  503A               	movf	(??_efgtoa+1)^0,w,c
  2323  001142  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2324  001144  503C               	movf	(??_efgtoa+3)^0,w,c
  2325  001146  E10A               	bnz	u7460
  2326  001148  0E1A               	movlw	26
  2327  00114A  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2328  00114C  A0D8               	btfss	status,0,c
  2329  00114E  EFAB  F008         	goto	u7461
  2330  001152  EFAE  F008         	goto	u7460
  2331  001156                     u7461:
  2332  001156  0E01               	movlw	1
  2333  001158  EFAF  F008         	goto	u7470
  2334  00115C                     u7460:
  2335  00115C  0E00               	movlw	0
  2336  00115E                     u7470:
  2337  00115E  0100               	movlb	0	; () banked
  2338  001160  6FB8               	movwf	_efgtoa$2092& (0+255),b
  2339  001162  6BB9               	clrf	(_efgtoa$2092+1)& (0+255),b
  2340  001164                     
  2341                           ; BSR set to: 0
  2342  001164  51B8               	movf	_efgtoa$2092& (0+255),w,b
  2343  001166  11B9               	iorwf	(_efgtoa$2092+1)& (0+255),w,b
  2344  001168  B4D8               	btfsc	status,2,c
  2345  00116A  EFB9  F008         	goto	u7481
  2346  00116E  EFBB  F008         	goto	u7480
  2347  001172                     u7481:
  2348  001172  EFC9  F008         	goto	l6869
  2349  001176                     u7480:
  2350  001176                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2353  001176  0E00               	movlw	low _dbuf
  2354  001178  25E8               	addwf	efgtoa@n& (0+255),w,b
  2355  00117A  6E05               	movwf	strcpy@dest^0,c
  2356  00117C  0E01               	movlw	high _dbuf
  2357  00117E  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2358  001180  6E06               	movwf	(strcpy@dest+1)^0,c
  2359  001182  0E39               	movlw	low STR_2
  2360  001184  6E07               	movwf	strcpy@src^0,c
  2361  001186  0E10               	movlw	high STR_2
  2362  001188  6E08               	movwf	(strcpy@src+1)^0,c
  2363  00118A  ECF5  F020         	call	_strcpy	;wreg free
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2366  00118E  EFD5  F008         	goto	l6871
  2367  001192                     l6869:
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2371  001192  0E00               	movlw	low _dbuf
  2372  001194  25E8               	addwf	efgtoa@n& (0+255),w,b
  2373  001196  6E05               	movwf	strcpy@dest^0,c
  2374  001198  0E01               	movlw	high _dbuf
  2375  00119A  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2376  00119C  6E06               	movwf	(strcpy@dest+1)^0,c
  2377  00119E  0E41               	movlw	low STR_3
  2378  0011A0  6E07               	movwf	strcpy@src^0,c
  2379  0011A2  0E10               	movlw	high STR_3
  2380  0011A4  6E08               	movwf	(strcpy@src+1)^0,c
  2381  0011A6  ECF5  F020         	call	_strcpy	;wreg free
  2382  0011AA                     l6871:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2385  0011AA  0100               	movlb	0	; () banked
  2386  0011AC  0EFD               	movlw	253
  2387  0011AE  27D4               	addwf	efgtoa@w& (0+255),f,b
  2388  0011B0  0EFF               	movlw	255
  2389  0011B2  23D5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2390  0011B4                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2393  0011B4  C032  F017         	movff	efgtoa@fp,pad@fp
  2394  0011B8  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2395  0011BC  0E00               	movlw	low _dbuf
  2396  0011BE  6E19               	movwf	pad@buf^0,c
  2397  0011C0  0E01               	movlw	high _dbuf
  2398  0011C2  6E1A               	movwf	(pad@buf+1)^0,c
  2399  0011C4  C0D4  F01B         	movff	efgtoa@w,pad@p
  2400  0011C8  C0D5  F01C         	movff	efgtoa@w+1,pad@p+1
  2401  0011CC  ECAE  F01B         	call	_pad	;wreg free
  2402  0011D0  C017  F032         	movff	?_pad,?_efgtoa
  2403  0011D4  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2404  0011D8  EF79  F00E         	goto	l1454
  2405  0011DC                     l6877:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2408  0011DC  C0E2  F005         	movff	efgtoa@g,___fpclassifyf@x
  2409  0011E0  C0E3  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2410  0011E4  C0E4  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2411  0011E8  C0E5  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2412  0011EC  ECC1  F01A         	call	___fpclassifyf	;wreg free
  2413  0011F0  5005               	movf	?___fpclassifyf^0,w,c
  2414  0011F2  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2415  0011F4  A4D8               	btfss	status,2,c
  2416  0011F6  EFFF  F008         	goto	u7491
  2417  0011FA  EF01  F009         	goto	u7490
  2418  0011FE                     u7491:
  2419  0011FE  EF58  F009         	goto	l6895
  2420  001202                     u7490:
  2421  001202  0EBF               	movlw	191
  2422  001204  6E39               	movwf	??_efgtoa^0,c
  2423  001206  0EFF               	movlw	255
  2424  001208  6E3A               	movwf	(??_efgtoa+1)^0,c
  2425  00120A  5038               	movf	efgtoa@c^0,w,c
  2426  00120C  6E3B               	movwf	(??_efgtoa+2)^0,c
  2427  00120E  6A3C               	clrf	(??_efgtoa+3)^0,c
  2428  001210  5039               	movf	??_efgtoa^0,w,c
  2429  001212  263B               	addwf	(??_efgtoa+2)^0,f,c
  2430  001214  503A               	movf	(??_efgtoa+1)^0,w,c
  2431  001216  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2432  001218  503C               	movf	(??_efgtoa+3)^0,w,c
  2433  00121A  E10A               	bnz	u7500
  2434  00121C  0E1A               	movlw	26
  2435  00121E  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2436  001220  A0D8               	btfss	status,0,c
  2437  001222  EF15  F009         	goto	u7501
  2438  001226  EF18  F009         	goto	u7500
  2439  00122A                     u7501:
  2440  00122A  0E01               	movlw	1
  2441  00122C  EF19  F009         	goto	u7510
  2442  001230                     u7500:
  2443  001230  0E00               	movlw	0
  2444  001232                     u7510:
  2445  001232  0100               	movlb	0	; () banked
  2446  001234  6FBA               	movwf	_efgtoa$2097& (0+255),b
  2447  001236  6BBB               	clrf	(_efgtoa$2097+1)& (0+255),b
  2448  001238                     
  2449                           ; BSR set to: 0
  2450  001238  51BA               	movf	_efgtoa$2097& (0+255),w,b
  2451  00123A  11BB               	iorwf	(_efgtoa$2097+1)& (0+255),w,b
  2452  00123C  B4D8               	btfsc	status,2,c
  2453  00123E  EF23  F009         	goto	u7521
  2454  001242  EF25  F009         	goto	u7520
  2455  001246                     u7521:
  2456  001246  EF33  F009         	goto	l6887
  2457  00124A                     u7520:
  2458  00124A                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2461  00124A  0E00               	movlw	low _dbuf
  2462  00124C  25E8               	addwf	efgtoa@n& (0+255),w,b
  2463  00124E  6E05               	movwf	strcpy@dest^0,c
  2464  001250  0E01               	movlw	high _dbuf
  2465  001252  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2466  001254  6E06               	movwf	(strcpy@dest+1)^0,c
  2467  001256  0E3D               	movlw	low STR_6
  2468  001258  6E07               	movwf	strcpy@src^0,c
  2469  00125A  0E10               	movlw	high STR_6
  2470  00125C  6E08               	movwf	(strcpy@src+1)^0,c
  2471  00125E  ECF5  F020         	call	_strcpy	;wreg free
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2474  001262  EF3F  F009         	goto	l6889
  2475  001266                     l6887:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2479  001266  0E00               	movlw	low _dbuf
  2480  001268  25E8               	addwf	efgtoa@n& (0+255),w,b
  2481  00126A  6E05               	movwf	strcpy@dest^0,c
  2482  00126C  0E01               	movlw	high _dbuf
  2483  00126E  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2484  001270  6E06               	movwf	(strcpy@dest+1)^0,c
  2485  001272  0E45               	movlw	low STR_7
  2486  001274  6E07               	movwf	strcpy@src^0,c
  2487  001276  0E10               	movlw	high STR_7
  2488  001278  6E08               	movwf	(strcpy@src+1)^0,c
  2489  00127A  ECF5  F020         	call	_strcpy	;wreg free
  2490  00127E                     l6889:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2493  00127E  0100               	movlb	0	; () banked
  2494  001280  0EFD               	movlw	253
  2495  001282  27D4               	addwf	efgtoa@w& (0+255),f,b
  2496  001284  0EFF               	movlw	255
  2497  001286  23D5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2498  001288                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2501  001288  C032  F017         	movff	efgtoa@fp,pad@fp
  2502  00128C  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  2503  001290  0E00               	movlw	low _dbuf
  2504  001292  6E19               	movwf	pad@buf^0,c
  2505  001294  0E01               	movlw	high _dbuf
  2506  001296  6E1A               	movwf	(pad@buf+1)^0,c
  2507  001298  C0D4  F01B         	movff	efgtoa@w,pad@p
  2508  00129C  C0D5  F01C         	movff	efgtoa@w+1,pad@p+1
  2509  0012A0  ECAE  F01B         	call	_pad	;wreg free
  2510  0012A4  C017  F032         	movff	?_pad,?_efgtoa
  2511  0012A8  C018  F033         	movff	?_pad+1,?_efgtoa+1
  2512  0012AC  EF79  F00E         	goto	l1454
  2513  0012B0                     l6895:
  2514                           
  2515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2516  0012B0  0E00               	movlw	0
  2517  0012B2  0100               	movlb	0	; () banked
  2518  0012B4  6FEA               	movwf	efgtoa@u& (0+255),b
  2519  0012B6  0E00               	movlw	0
  2520  0012B8  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  2521  0012BA  0E80               	movlw	128
  2522  0012BC  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  2523  0012BE  0E3F               	movlw	63
  2524  0012C0  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2527  0012C2  0E00               	movlw	0
  2528  0012C4  6FE7               	movwf	(efgtoa@e+1)& (0+255),b
  2529  0012C6  0E00               	movlw	0
  2530  0012C8  6FE6               	movwf	efgtoa@e& (0+255),b
  2531  0012CA                     
  2532                           ; BSR set to: 0
  2533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2534  0012CA  C0E2  F005         	movff	efgtoa@g,___fleq@ff1
  2535  0012CE  C0E3  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2536  0012D2  C0E4  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2537  0012D6  C0E5  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2538  0012DA  0E00               	movlw	0
  2539  0012DC  6E09               	movwf	___fleq@ff2^0,c
  2540  0012DE  0E00               	movlw	0
  2541  0012E0  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2542  0012E2  0E00               	movlw	0
  2543  0012E4  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2544  0012E6  0E00               	movlw	0
  2545  0012E8  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2546  0012EA  EC8D  F01D         	call	___fleq	;wreg free
  2547  0012EE  B0D8               	btfsc	status,0,c
  2548  0012F0  EF7C  F009         	goto	u7531
  2549  0012F4  EF7E  F009         	goto	u7530
  2550  0012F8                     u7531:
  2551  0012F8  EF01  F00A         	goto	l6913
  2552  0012FC                     u7530:
  2553  0012FC  EF9D  F009         	goto	l6905
  2554  001300                     l6901:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2557  001300  C0EA  F005         	movff	efgtoa@u,___flmul@b
  2558  001304  C0EB  F006         	movff	efgtoa@u+1,___flmul@b+1
  2559  001308  C0EC  F007         	movff	efgtoa@u+2,___flmul@b+2
  2560  00130C  C0ED  F008         	movff	efgtoa@u+3,___flmul@b+3
  2561  001310  0E00               	movlw	0
  2562  001312  6E09               	movwf	___flmul@a^0,c
  2563  001314  0E00               	movlw	0
  2564  001316  6E0A               	movwf	(___flmul@a+1)^0,c
  2565  001318  0E20               	movlw	32
  2566  00131A  6E0B               	movwf	(___flmul@a+2)^0,c
  2567  00131C  0E41               	movlw	65
  2568  00131E  6E0C               	movwf	(___flmul@a+3)^0,c
  2569  001320  EC2A  F013         	call	___flmul	;wreg free
  2570  001324  C005  F0EA         	movff	?___flmul,efgtoa@u
  2571  001328  C006  F0EB         	movff	?___flmul+1,efgtoa@u+1
  2572  00132C  C007  F0EC         	movff	?___flmul+2,efgtoa@u+2
  2573  001330  C008  F0ED         	movff	?___flmul+3,efgtoa@u+3
  2574  001334                     
  2575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2576  001334  0100               	movlb	0	; () banked
  2577  001336  4BE6               	infsnz	efgtoa@e& (0+255),f,b
  2578  001338  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  2579  00133A                     l6905:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2582  00133A  C0E2  F01E         	movff	efgtoa@g,___flge@ff1
  2583  00133E  C0E3  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2584  001342  C0E4  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2585  001346  C0E5  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2586  00134A  0E00               	movlw	0
  2587  00134C  6E09               	movwf	___flmul@a^0,c
  2588  00134E  0E00               	movlw	0
  2589  001350  6E0A               	movwf	(___flmul@a+1)^0,c
  2590  001352  0E20               	movlw	32
  2591  001354  6E0B               	movwf	(___flmul@a+2)^0,c
  2592  001356  0E41               	movlw	65
  2593  001358  6E0C               	movwf	(___flmul@a+3)^0,c
  2594  00135A  C0EA  F005         	movff	efgtoa@u,___flmul@b
  2595  00135E  C0EB  F006         	movff	efgtoa@u+1,___flmul@b+1
  2596  001362  C0EC  F007         	movff	efgtoa@u+2,___flmul@b+2
  2597  001366  C0ED  F008         	movff	efgtoa@u+3,___flmul@b+3
  2598  00136A  EC2A  F013         	call	___flmul	;wreg free
  2599  00136E  C005  F022         	movff	?___flmul,___flge@ff2
  2600  001372  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2601  001376  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2602  00137A  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2603  00137E  EC3F  F01A         	call	___flge	;wreg free
  2604  001382  B0D8               	btfsc	status,0,c
  2605  001384  EFC6  F009         	goto	u7541
  2606  001388  EFC8  F009         	goto	u7540
  2607  00138C                     u7541:
  2608  00138C  EF80  F009         	goto	l6901
  2609  001390                     u7540:
  2610  001390  EFE8  F009         	goto	l6911
  2611  001394                     l6907:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2614  001394  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  2615  001398  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2616  00139C  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2617  0013A0  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2618  0013A4  0E00               	movlw	0
  2619  0013A6  6E09               	movwf	___fldiv@a^0,c
  2620  0013A8  0E00               	movlw	0
  2621  0013AA  6E0A               	movwf	(___fldiv@a+1)^0,c
  2622  0013AC  0E20               	movlw	32
  2623  0013AE  6E0B               	movwf	(___fldiv@a+2)^0,c
  2624  0013B0  0E41               	movlw	65
  2625  0013B2  6E0C               	movwf	(___fldiv@a+3)^0,c
  2626  0013B4  EC3F  F015         	call	___fldiv	;wreg free
  2627  0013B8  C005  F0EA         	movff	?___fldiv,efgtoa@u
  2628  0013BC  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  2629  0013C0  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  2630  0013C4  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  2631  0013C8                     
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2633  0013C8  0100               	movlb	0	; () banked
  2634  0013CA  07E6               	decf	efgtoa@e& (0+255),f,b
  2635  0013CC  A0D8               	btfss	status,0,c
  2636  0013CE  07E7               	decf	(efgtoa@e+1)& (0+255),f,b
  2637  0013D0                     l6911:
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2640  0013D0  C0E2  F01E         	movff	efgtoa@g,___flge@ff1
  2641  0013D4  C0E3  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2642  0013D8  C0E4  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2643  0013DC  C0E5  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2644  0013E0  C0EA  F022         	movff	efgtoa@u,___flge@ff2
  2645  0013E4  C0EB  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2646  0013E8  C0EC  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2647  0013EC  C0ED  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2648  0013F0  EC3F  F01A         	call	___flge	;wreg free
  2649  0013F4  A0D8               	btfss	status,0,c
  2650  0013F6  EFFF  F009         	goto	u7551
  2651  0013FA  EF01  F00A         	goto	u7550
  2652  0013FE                     u7551:
  2653  0013FE  EFCA  F009         	goto	l6907
  2654  001402                     u7550:
  2655  001402                     l6913:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2658  001402  C038  F00B         	movff	efgtoa@c,tolower@c
  2659  001406  6A0C               	clrf	(tolower@c+1)^0,c
  2660  001408  ECC5  F020         	call	_tolower	;wreg free
  2661  00140C  500B               	movf	?_tolower^0,w,c
  2662  00140E  0100               	movlb	0	; () banked
  2663  001410  6FD7               	movwf	efgtoa@mode& (0+255),b
  2664  001412                     
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2667  001412  C0D7  F0D6         	movff	efgtoa@mode,efgtoa@nmode
  2668  001416                     
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2671  001416  0E67               	movlw	103
  2672  001418  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  2673  00141A  A4D8               	btfss	status,2,c
  2674  00141C  EF12  F00A         	goto	u7561
  2675  001420  EF14  F00A         	goto	u7560
  2676  001424                     u7561:
  2677  001424  EF3A  F00A         	goto	l6927
  2678  001428                     u7560:
  2679  001428                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2682  001428  51AF               	movf	_prec& (0+255),w,b
  2683  00142A  11B0               	iorwf	(_prec+1)& (0+255),w,b
  2684  00142C  A4D8               	btfss	status,2,c
  2685  00142E  EF1B  F00A         	goto	u7571
  2686  001432  EF1D  F00A         	goto	u7570
  2687  001436                     u7571:
  2688  001436  EF21  F00A         	goto	l6923
  2689  00143A                     u7570:
  2690  00143A                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2693  00143A  0E00               	movlw	0
  2694  00143C  6FB0               	movwf	(_prec+1)& (0+255),b
  2695  00143E  0E01               	movlw	1
  2696  001440  6FAF               	movwf	_prec& (0+255),b
  2697  001442                     l6923:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2701  001442  BFB0               	btfsc	(_prec+1)& (0+255),7,b
  2702  001444  EF2E  F00A         	goto	u7580
  2703  001448  51B0               	movf	(_prec+1)& (0+255),w,b
  2704  00144A  E106               	bnz	u7581
  2705  00144C  05AF               	decf	_prec& (0+255),w,b
  2706  00144E  B0D8               	btfsc	status,0,c
  2707  001450  EF2C  F00A         	goto	u7581
  2708  001454  EF2E  F00A         	goto	u7580
  2709  001458                     u7581:
  2710  001458  EF34  F00A         	goto	l1472
  2711  00145C                     u7580:
  2712  00145C                     l6925:
  2713                           
  2714                           ; BSR set to: 0
  2715  00145C  0E00               	movlw	0
  2716  00145E  6FD3               	movwf	(efgtoa@p+1)& (0+255),b
  2717  001460  0E06               	movlw	6
  2718  001462  6FD2               	movwf	efgtoa@p& (0+255),b
  2719  001464  EF43  F00A         	goto	l6933
  2720  001468                     l1472:
  2721                           
  2722                           ; BSR set to: 0
  2723  001468  C0AF  F0D2         	movff	_prec,efgtoa@p
  2724  00146C  C0B0  F0D3         	movff	_prec+1,efgtoa@p+1
  2725  001470  EF43  F00A         	goto	l6933
  2726  001474                     l6927:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2730  001474  BFB0               	btfsc	(_prec+1)& (0+255),7,b
  2731  001476  EF3F  F00A         	goto	u7591
  2732  00147A  EF41  F00A         	goto	u7590
  2733  00147E                     u7591:
  2734  00147E  EF2E  F00A         	goto	l6925
  2735  001482                     u7590:
  2736  001482  EF34  F00A         	goto	l1472
  2737  001486                     l6933:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2741  001486  0E67               	movlw	103
  2742  001488  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  2743  00148A  A4D8               	btfss	status,2,c
  2744  00148C  EF4A  F00A         	goto	u7601
  2745  001490  EF4C  F00A         	goto	u7600
  2746  001494                     u7601:
  2747  001494  EF7B  F00A         	goto	l6943
  2748  001498                     u7600:
  2749  001498                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2752  001498  AFE7               	btfss	(efgtoa@e+1)& (0+255),7,b
  2753  00149A  EF5A  F00A         	goto	u7610
  2754  00149E  0EFC               	movlw	252
  2755  0014A0  5DE6               	subwf	efgtoa@e& (0+255),w,b
  2756  0014A2  0EFF               	movlw	255
  2757  0014A4  59E7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2758  0014A6  A0D8               	btfss	status,0,c
  2759  0014A8  EF58  F00A         	goto	u7611
  2760  0014AC  EF5A  F00A         	goto	u7610
  2761  0014B0                     u7611:
  2762  0014B0  EF79  F00A         	goto	l6941
  2763  0014B4                     u7610:
  2764  0014B4                     
  2765                           ; BSR set to: 0
  2766  0014B4  0EFF               	movlw	255
  2767  0014B6  6E39               	movwf	??_efgtoa^0,c
  2768  0014B8  0EFF               	movlw	255
  2769  0014BA  6E3A               	movwf	(??_efgtoa+1)^0,c
  2770  0014BC  C0D2  F03B         	movff	efgtoa@p,??_efgtoa+2
  2771  0014C0  C0D3  F03C         	movff	efgtoa@p+1,??_efgtoa+3
  2772  0014C4  5039               	movf	??_efgtoa^0,w,c
  2773  0014C6  263B               	addwf	(??_efgtoa+2)^0,f,c
  2774  0014C8  503A               	movf	(??_efgtoa+1)^0,w,c
  2775  0014CA  223C               	addwfc	(??_efgtoa+3)^0,f,c
  2776  0014CC  51E6               	movf	efgtoa@e& (0+255),w,b
  2777  0014CE  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  2778  0014D0  503C               	movf	(??_efgtoa+3)^0,w,c
  2779  0014D2  0A80               	xorlw	128
  2780  0014D4  6E3D               	movwf	(??_efgtoa+4)^0,c
  2781  0014D6  51E7               	movf	(efgtoa@e+1)& (0+255),w,b
  2782  0014D8  0A80               	xorlw	128
  2783  0014DA  583D               	subwfb	(??_efgtoa+4)^0,w,c
  2784  0014DC  A0D8               	btfss	status,0,c
  2785  0014DE  EF73  F00A         	goto	u7621
  2786  0014E2  EF75  F00A         	goto	u7620
  2787  0014E6                     u7621:
  2788  0014E6  EF79  F00A         	goto	l6941
  2789  0014EA                     u7620:
  2790  0014EA                     
  2791                           ; BSR set to: 0
  2792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2793  0014EA  0E66               	movlw	102
  2794  0014EC  6FD6               	movwf	efgtoa@nmode& (0+255),b
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2797  0014EE  EF7B  F00A         	goto	l6943
  2798  0014F2                     l6941:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2802  0014F2  0E65               	movlw	101
  2803  0014F4  6FD6               	movwf	efgtoa@nmode& (0+255),b
  2804  0014F6                     l6943:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2808  0014F6  C0D2  F0C8         	movff	efgtoa@p,efgtoa@m
  2809  0014FA  C0D3  F0C9         	movff	efgtoa@p+1,efgtoa@m+1
  2810  0014FE                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2813  0014FE  0E67               	movlw	103
  2814  001500  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  2815  001502  A4D8               	btfss	status,2,c
  2816  001504  EF86  F00A         	goto	u7631
  2817  001508  EF88  F00A         	goto	u7630
  2818  00150C                     u7631:
  2819  00150C  EF98  F00A         	goto	l6951
  2820  001510                     u7630:
  2821  001510                     
  2822                           ; BSR set to: 0
  2823  001510  0E66               	movlw	102
  2824  001512  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  2825  001514  A4D8               	btfss	status,2,c
  2826  001516  EF8F  F00A         	goto	u7641
  2827  00151A  EF91  F00A         	goto	u7640
  2828  00151E                     u7641:
  2829  00151E  EF9A  F00A         	goto	l6953
  2830  001522                     u7640:
  2831  001522                     
  2832                           ; BSR set to: 0
  2833  001522  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2834  001524  EF98  F00A         	goto	u7650
  2835  001528  EF96  F00A         	goto	u7651
  2836  00152C                     u7651:
  2837  00152C  EF9A  F00A         	goto	l6953
  2838  001530                     u7650:
  2839  001530                     l6951:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2843  001530  4BC8               	infsnz	efgtoa@m& (0+255),f,b
  2844  001532  2BC9               	incf	(efgtoa@m+1)& (0+255),f,b
  2845  001534                     l6953:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2849  001534  0E66               	movlw	102
  2850  001536  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  2851  001538  A4D8               	btfss	status,2,c
  2852  00153A  EFA1  F00A         	goto	u7661
  2853  00153E  EFA3  F00A         	goto	u7660
  2854  001542                     u7661:
  2855  001542  EFC3  F00A         	goto	l6963
  2856  001546                     u7660:
  2857  001546                     
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2860  001546  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2861  001548  EFAA  F00A         	goto	u7670
  2862  00154C  EFA8  F00A         	goto	u7671
  2863  001550                     u7671:
  2864  001550  EFB6  F00A         	goto	l6959
  2865  001554                     u7670:
  2866  001554                     
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2869  001554  0E00               	movlw	0
  2870  001556  6FEA               	movwf	efgtoa@u& (0+255),b
  2871  001558  0E00               	movlw	0
  2872  00155A  6FEB               	movwf	(efgtoa@u+1)& (0+255),b
  2873  00155C  0E80               	movlw	128
  2874  00155E  6FEC               	movwf	(efgtoa@u+2)& (0+255),b
  2875  001560  0E3F               	movlw	63
  2876  001562  6FED               	movwf	(efgtoa@u+3)& (0+255),b
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2879  001564  0E00               	movlw	0
  2880  001566  6FE7               	movwf	(efgtoa@e+1)& (0+255),b
  2881  001568  0E00               	movlw	0
  2882  00156A  6FE6               	movwf	efgtoa@e& (0+255),b
  2883  00156C                     l6959:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2887  00156C  0E67               	movlw	103
  2888  00156E  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  2889  001570  B4D8               	btfsc	status,2,c
  2890  001572  EFBD  F00A         	goto	u7681
  2891  001576  EFBF  F00A         	goto	u7680
  2892  00157A                     u7681:
  2893  00157A  EFC3  F00A         	goto	l6963
  2894  00157E                     u7680:
  2895  00157E                     
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2898  00157E  51E6               	movf	efgtoa@e& (0+255),w,b
  2899  001580  27C8               	addwf	efgtoa@m& (0+255),f,b
  2900  001582  51E7               	movf	(efgtoa@e+1)& (0+255),w,b
  2901  001584  23C9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2902  001586                     l6963:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2906  001586  0E00               	movlw	0
  2907  001588  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  2908  00158A  0E00               	movlw	0
  2909  00158C  6FE0               	movwf	efgtoa@i& (0+255),b
  2910  00158E                     
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2913  00158E  C0E2  F0D8         	movff	efgtoa@g,efgtoa@h
  2914  001592  C0E3  F0D9         	movff	efgtoa@g+1,efgtoa@h+1
  2915  001596  C0E4  F0DA         	movff	efgtoa@g+2,efgtoa@h+2
  2916  00159A  C0E5  F0DB         	movff	efgtoa@g+3,efgtoa@h+3
  2917  00159E                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2920  00159E  C0EA  F0CA         	movff	efgtoa@u,efgtoa@ou
  2921  0015A2  C0EB  F0CB         	movff	efgtoa@u+1,efgtoa@ou+1
  2922  0015A6  C0EC  F0CC         	movff	efgtoa@u+2,efgtoa@ou+2
  2923  0015AA  C0ED  F0CD         	movff	efgtoa@u+3,efgtoa@ou+3
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2926  0015AE  EF54  F00B         	goto	l6977
  2927  0015B2                     l6969:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2931  0015B2  C0D8  F005         	movff	efgtoa@h,___fldiv@b
  2932  0015B6  C0D9  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2933  0015BA  C0DA  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2934  0015BE  C0DB  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2935  0015C2  C0EA  F009         	movff	efgtoa@u,___fldiv@a
  2936  0015C6  C0EB  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2937  0015CA  C0EC  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2938  0015CE  C0ED  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2939  0015D2  EC3F  F015         	call	___fldiv	;wreg free
  2940  0015D6  C005  F01E         	movff	?___fldiv,floorf@x
  2941  0015DA  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2942  0015DE  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2943  0015E2  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2944  0015E6  EC0C  F017         	call	_floorf	;wreg free
  2945  0015EA  C01E  F0DC         	movff	?_floorf,efgtoa@l
  2946  0015EE  C01F  F0DD         	movff	?_floorf+1,efgtoa@l+1
  2947  0015F2  C020  F0DE         	movff	?_floorf+2,efgtoa@l+2
  2948  0015F6  C021  F0DF         	movff	?_floorf+3,efgtoa@l+3
  2949                           
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2951  0015FA  C0DC  F005         	movff	efgtoa@l,___fltol@f1
  2952  0015FE  C0DD  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2953  001602  C0DE  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2954  001606  C0DF  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2955  00160A  ECBC  F019         	call	___fltol	;wreg free
  2956  00160E  C005  F0CE         	movff	?___fltol,efgtoa@d
  2957  001612  C006  F0CF         	movff	?___fltol+1,efgtoa@d+1
  2958  001616                     
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2960  001616  C0D8  F01E         	movff	efgtoa@h,___flsub@b
  2961  00161A  C0D9  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2962  00161E  C0DA  F020         	movff	efgtoa@h+2,___flsub@b+2
  2963  001622  C0DB  F021         	movff	efgtoa@h+3,___flsub@b+3
  2964  001626  C0EA  F009         	movff	efgtoa@u,___flmul@a
  2965  00162A  C0EB  F00A         	movff	efgtoa@u+1,___flmul@a+1
  2966  00162E  C0EC  F00B         	movff	efgtoa@u+2,___flmul@a+2
  2967  001632  C0ED  F00C         	movff	efgtoa@u+3,___flmul@a+3
  2968  001636  C0DC  F005         	movff	efgtoa@l,___flmul@b
  2969  00163A  C0DD  F006         	movff	efgtoa@l+1,___flmul@b+1
  2970  00163E  C0DE  F007         	movff	efgtoa@l+2,___flmul@b+2
  2971  001642  C0DF  F008         	movff	efgtoa@l+3,___flmul@b+3
  2972  001646  EC2A  F013         	call	___flmul	;wreg free
  2973  00164A  C005  F022         	movff	?___flmul,___flsub@a
  2974  00164E  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2975  001652  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2976  001656  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2977  00165A  EC79  F021         	call	___flsub	;wreg free
  2978  00165E  C01E  F0D8         	movff	?___flsub,efgtoa@h
  2979  001662  C01F  F0D9         	movff	?___flsub+1,efgtoa@h+1
  2980  001666  C020  F0DA         	movff	?___flsub+2,efgtoa@h+2
  2981  00166A  C021  F0DB         	movff	?___flsub+3,efgtoa@h+3
  2982  00166E                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2984  00166E  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  2985  001672  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2986  001676  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2987  00167A  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2988  00167E  0E00               	movlw	0
  2989  001680  6E09               	movwf	___fldiv@a^0,c
  2990  001682  0E00               	movlw	0
  2991  001684  6E0A               	movwf	(___fldiv@a+1)^0,c
  2992  001686  0E20               	movlw	32
  2993  001688  6E0B               	movwf	(___fldiv@a+2)^0,c
  2994  00168A  0E41               	movlw	65
  2995  00168C  6E0C               	movwf	(___fldiv@a+3)^0,c
  2996  00168E  EC3F  F015         	call	___fldiv	;wreg free
  2997  001692  C005  F0EA         	movff	?___fldiv,efgtoa@u
  2998  001696  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  2999  00169A  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  3000  00169E  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  3001  0016A2                     
  3002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3003  0016A2  0100               	movlb	0	; () banked
  3004  0016A4  4BE0               	infsnz	efgtoa@i& (0+255),f,b
  3005  0016A6  2BE1               	incf	(efgtoa@i+1)& (0+255),f,b
  3006  0016A8                     l6977:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3010  0016A8  51C8               	movf	efgtoa@m& (0+255),w,b
  3011  0016AA  5DE0               	subwf	efgtoa@i& (0+255),w,b
  3012  0016AC  51E1               	movf	(efgtoa@i+1)& (0+255),w,b
  3013  0016AE  0A80               	xorlw	128
  3014  0016B0  6E39               	movwf	??_efgtoa^0,c
  3015  0016B2  51C9               	movf	(efgtoa@m+1)& (0+255),w,b
  3016  0016B4  0A80               	xorlw	128
  3017  0016B6  5839               	subwfb	??_efgtoa^0,w,c
  3018  0016B8  A0D8               	btfss	status,0,c
  3019  0016BA  EF61  F00B         	goto	u7691
  3020  0016BE  EF63  F00B         	goto	u7690
  3021  0016C2                     u7691:
  3022  0016C2  EFD9  F00A         	goto	l6969
  3023  0016C6                     u7690:
  3024  0016C6                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3027  0016C6  C0EA  F005         	movff	efgtoa@u,___flmul@b
  3028  0016CA  C0EB  F006         	movff	efgtoa@u+1,___flmul@b+1
  3029  0016CE  C0EC  F007         	movff	efgtoa@u+2,___flmul@b+2
  3030  0016D2  C0ED  F008         	movff	efgtoa@u+3,___flmul@b+3
  3031  0016D6  0E00               	movlw	0
  3032  0016D8  6E09               	movwf	___flmul@a^0,c
  3033  0016DA  0E00               	movlw	0
  3034  0016DC  6E0A               	movwf	(___flmul@a+1)^0,c
  3035  0016DE  0EA0               	movlw	160
  3036  0016E0  6E0B               	movwf	(___flmul@a+2)^0,c
  3037  0016E2  0E40               	movlw	64
  3038  0016E4  6E0C               	movwf	(___flmul@a+3)^0,c
  3039  0016E6  EC2A  F013         	call	___flmul	;wreg free
  3040  0016EA  C005  F0DC         	movff	?___flmul,efgtoa@l
  3041  0016EE  C006  F0DD         	movff	?___flmul+1,efgtoa@l+1
  3042  0016F2  C007  F0DE         	movff	?___flmul+2,efgtoa@l+2
  3043  0016F6  C008  F0DF         	movff	?___flmul+3,efgtoa@l+3
  3044  0016FA                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3046  0016FA  C0D8  F01E         	movff	efgtoa@h,___flge@ff1
  3047  0016FE  C0D9  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3048  001702  C0DA  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3049  001706  C0DB  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3050  00170A  C0DC  F022         	movff	efgtoa@l,___flge@ff2
  3051  00170E  C0DD  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3052  001712  C0DE  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3053  001716  C0DF  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3054  00171A  EC3F  F01A         	call	___flge	;wreg free
  3055  00171E  B0D8               	btfsc	status,0,c
  3056  001720  EF94  F00B         	goto	u7701
  3057  001724  EF96  F00B         	goto	u7700
  3058  001728                     u7701:
  3059  001728  EFA1  F00B         	goto	l6985
  3060  00172C                     u7700:
  3061  00172C                     
  3062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3063  00172C  0E00               	movlw	0
  3064  00172E  0100               	movlb	0	; () banked
  3065  001730  6FDC               	movwf	efgtoa@l& (0+255),b
  3066  001732  0E00               	movlw	0
  3067  001734  6FDD               	movwf	(efgtoa@l+1)& (0+255),b
  3068  001736  0E00               	movlw	0
  3069  001738  6FDE               	movwf	(efgtoa@l+2)& (0+255),b
  3070  00173A  0E00               	movlw	0
  3071  00173C  6FDF               	movwf	(efgtoa@l+3)& (0+255),b
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3074  00173E  EFCA  F00B         	goto	l6991
  3075  001742                     l6985:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3078  001742  C0D8  F005         	movff	efgtoa@h,___fleq@ff1
  3079  001746  C0D9  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3080  00174A  C0DA  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3081  00174E  C0DB  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3082  001752  C0DC  F009         	movff	efgtoa@l,___fleq@ff2
  3083  001756  C0DD  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3084  00175A  C0DE  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3085  00175E  C0DF  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3086  001762  EC8D  F01D         	call	___fleq	;wreg free
  3087  001766  A0D8               	btfss	status,0,c
  3088  001768  EFB8  F00B         	goto	u7711
  3089  00176C  EFBA  F00B         	goto	u7710
  3090  001770                     u7711:
  3091  001770  EFCA  F00B         	goto	l6991
  3092  001774                     u7710:
  3093  001774  0100               	movlb	0	; () banked
  3094  001776  B1CE               	btfsc	efgtoa@d& (0+255),0,b
  3095  001778  EFC0  F00B         	goto	u7721
  3096  00177C  EFC2  F00B         	goto	u7720
  3097  001780                     u7721:
  3098  001780  EFCA  F00B         	goto	l6991
  3099  001784                     u7720:
  3100  001784                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3103  001784  0E00               	movlw	0
  3104  001786  6FDC               	movwf	efgtoa@l& (0+255),b
  3105  001788  0E00               	movlw	0
  3106  00178A  6FDD               	movwf	(efgtoa@l+1)& (0+255),b
  3107  00178C  0E00               	movlw	0
  3108  00178E  6FDE               	movwf	(efgtoa@l+2)& (0+255),b
  3109  001790  0E00               	movlw	0
  3110  001792  6FDF               	movwf	(efgtoa@l+3)& (0+255),b
  3111  001794                     l6991:
  3112                           
  3113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3114  001794  C0E2  F005         	movff	efgtoa@g,___fladd@b
  3115  001798  C0E3  F006         	movff	efgtoa@g+1,___fladd@b+1
  3116  00179C  C0E4  F007         	movff	efgtoa@g+2,___fladd@b+2
  3117  0017A0  C0E5  F008         	movff	efgtoa@g+3,___fladd@b+3
  3118  0017A4  C0DC  F009         	movff	efgtoa@l,___fladd@a
  3119  0017A8  C0DD  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3120  0017AC  C0DE  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3121  0017B0  C0DF  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3122  0017B4  EC7A  F00E         	call	___fladd	;wreg free
  3123  0017B8  C005  F0D8         	movff	?___fladd,efgtoa@h
  3124  0017BC  C006  F0D9         	movff	?___fladd+1,efgtoa@h+1
  3125  0017C0  C007  F0DA         	movff	?___fladd+2,efgtoa@h+2
  3126  0017C4  C008  F0DB         	movff	?___fladd+3,efgtoa@h+3
  3127  0017C8                     
  3128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3129  0017C8  C0D8  F01E         	movff	efgtoa@h,___flge@ff1
  3130  0017CC  C0D9  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3131  0017D0  C0DA  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3132  0017D4  C0DB  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3133  0017D8  0E00               	movlw	0
  3134  0017DA  6E09               	movwf	___flmul@a^0,c
  3135  0017DC  0E00               	movlw	0
  3136  0017DE  6E0A               	movwf	(___flmul@a+1)^0,c
  3137  0017E0  0E20               	movlw	32
  3138  0017E2  6E0B               	movwf	(___flmul@a+2)^0,c
  3139  0017E4  0E41               	movlw	65
  3140  0017E6  6E0C               	movwf	(___flmul@a+3)^0,c
  3141  0017E8  C0CA  F005         	movff	efgtoa@ou,___flmul@b
  3142  0017EC  C0CB  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3143  0017F0  C0CC  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3144  0017F4  C0CD  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3145  0017F8  EC2A  F013         	call	___flmul	;wreg free
  3146  0017FC  C005  F022         	movff	?___flmul,___flge@ff2
  3147  001800  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3148  001804  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3149  001808  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3150  00180C  EC3F  F01A         	call	___flge	;wreg free
  3151  001810  A0D8               	btfss	status,0,c
  3152  001812  EF0D  F00C         	goto	u7731
  3153  001816  EF0F  F00C         	goto	u7730
  3154  00181A                     u7731:
  3155  00181A  EF38  F00C         	goto	l7003
  3156  00181E                     u7730:
  3157  00181E                     
  3158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3159  00181E  0100               	movlb	0	; () banked
  3160  001820  4BE6               	infsnz	efgtoa@e& (0+255),f,b
  3161  001822  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  3162  001824                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3165  001824  C0CA  F005         	movff	efgtoa@ou,___flmul@b
  3166  001828  C0CB  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3167  00182C  C0CC  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3168  001830  C0CD  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3169  001834  0E00               	movlw	0
  3170  001836  6E09               	movwf	___flmul@a^0,c
  3171  001838  0E00               	movlw	0
  3172  00183A  6E0A               	movwf	(___flmul@a+1)^0,c
  3173  00183C  0E20               	movlw	32
  3174  00183E  6E0B               	movwf	(___flmul@a+2)^0,c
  3175  001840  0E41               	movlw	65
  3176  001842  6E0C               	movwf	(___flmul@a+3)^0,c
  3177  001844  EC2A  F013         	call	___flmul	;wreg free
  3178  001848  C005  F0CA         	movff	?___flmul,efgtoa@ou
  3179  00184C  C006  F0CB         	movff	?___flmul+1,efgtoa@ou+1
  3180  001850  C007  F0CC         	movff	?___flmul+2,efgtoa@ou+2
  3181  001854  C008  F0CD         	movff	?___flmul+3,efgtoa@ou+3
  3182  001858                     
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3184  001858  0E66               	movlw	102
  3185  00185A  0100               	movlb	0	; () banked
  3186  00185C  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  3187  00185E  A4D8               	btfss	status,2,c
  3188  001860  EF34  F00C         	goto	u7741
  3189  001864  EF36  F00C         	goto	u7740
  3190  001868                     u7741:
  3191  001868  EF38  F00C         	goto	l7003
  3192  00186C                     u7740:
  3193  00186C                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3196  00186C  4BC8               	infsnz	efgtoa@m& (0+255),f,b
  3197  00186E  2BC9               	incf	(efgtoa@m+1)& (0+255),f,b
  3198  001870                     l7003:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3201  001870  C0CA  F0EA         	movff	efgtoa@ou,efgtoa@u
  3202  001874  C0CB  F0EB         	movff	efgtoa@ou+1,efgtoa@u+1
  3203  001878  C0CC  F0EC         	movff	efgtoa@ou+2,efgtoa@u+2
  3204  00187C  C0CD  F0ED         	movff	efgtoa@ou+3,efgtoa@u+3
  3205  001880                     
  3206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3207  001880  0E65               	movlw	101
  3208  001882  0100               	movlb	0	; () banked
  3209  001884  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  3210  001886  B4D8               	btfsc	status,2,c
  3211  001888  EF48  F00C         	goto	u7751
  3212  00188C  EF4A  F00C         	goto	u7750
  3213  001890                     u7751:
  3214  001890  EF50  F00C         	goto	l7009
  3215  001894                     u7750:
  3216  001894                     
  3217                           ; BSR set to: 0
  3218  001894  C0E6  F0C6         	movff	efgtoa@e,efgtoa@ne
  3219  001898  C0E7  F0C7         	movff	efgtoa@e+1,efgtoa@ne+1
  3220  00189C  EF54  F00C         	goto	l1500
  3221  0018A0                     l7009:
  3222                           
  3223                           ; BSR set to: 0
  3224  0018A0  0E00               	movlw	0
  3225  0018A2  6FC7               	movwf	(efgtoa@ne+1)& (0+255),b
  3226  0018A4  0E00               	movlw	0
  3227  0018A6  6FC6               	movwf	efgtoa@ne& (0+255),b
  3228  0018A8                     l1500:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3232  0018A8  0E00               	movlw	0
  3233  0018AA  6FC5               	movwf	(efgtoa@pp+1)& (0+255),b
  3234  0018AC  0E00               	movlw	0
  3235  0018AE  6FC4               	movwf	efgtoa@pp& (0+255),b
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3238  0018B0  0E00               	movlw	0
  3239  0018B2  6FC3               	movwf	(efgtoa@t+1)& (0+255),b
  3240  0018B4  0E00               	movlw	0
  3241  0018B6  6FC2               	movwf	efgtoa@t& (0+255),b
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3244  0018B8  0E00               	movlw	0
  3245  0018BA  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  3246  0018BC  0E00               	movlw	0
  3247  0018BE  6FE0               	movwf	efgtoa@i& (0+255),b
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3250  0018C0  EF4F  F00D         	goto	l7059
  3251  0018C4                     l7011:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3255  0018C4  C0D8  F005         	movff	efgtoa@h,___fldiv@b
  3256  0018C8  C0D9  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3257  0018CC  C0DA  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3258  0018D0  C0DB  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3259  0018D4  C0EA  F009         	movff	efgtoa@u,___fldiv@a
  3260  0018D8  C0EB  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3261  0018DC  C0EC  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3262  0018E0  C0ED  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3263  0018E4  EC3F  F015         	call	___fldiv	;wreg free
  3264  0018E8  C005  F01E         	movff	?___fldiv,floorf@x
  3265  0018EC  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3266  0018F0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3267  0018F4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3268  0018F8  EC0C  F017         	call	_floorf	;wreg free
  3269  0018FC  C01E  F0DC         	movff	?_floorf,efgtoa@l
  3270  001900  C01F  F0DD         	movff	?_floorf+1,efgtoa@l+1
  3271  001904  C020  F0DE         	movff	?_floorf+2,efgtoa@l+2
  3272  001908  C021  F0DF         	movff	?_floorf+3,efgtoa@l+3
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3275  00190C  C0DC  F005         	movff	efgtoa@l,___fltol@f1
  3276  001910  C0DD  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3277  001914  C0DE  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3278  001918  C0DF  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3279  00191C  ECBC  F019         	call	___fltol	;wreg free
  3280  001920  C005  F0CE         	movff	?___fltol,efgtoa@d
  3281  001924  C006  F0CF         	movff	?___fltol+1,efgtoa@d+1
  3282  001928                     
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3284  001928  0100               	movlb	0	; () banked
  3285  00192A  B9B1               	btfsc	_flags& (0+255),4,b
  3286  00192C  EF9A  F00C         	goto	u7761
  3287  001930  EF9C  F00C         	goto	u7760
  3288  001934                     u7761:
  3289  001934  EFB9  F00C         	goto	l7023
  3290  001938                     u7760:
  3291  001938                     
  3292                           ; BSR set to: 0
  3293  001938  51CE               	movf	efgtoa@d& (0+255),w,b
  3294  00193A  11CF               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3295  00193C  A4D8               	btfss	status,2,c
  3296  00193E  EFA3  F00C         	goto	u7771
  3297  001942  EFA5  F00C         	goto	u7770
  3298  001946                     u7771:
  3299  001946  EFB9  F00C         	goto	l7023
  3300  00194A                     u7770:
  3301  00194A                     
  3302                           ; BSR set to: 0
  3303  00194A  0E67               	movlw	103
  3304  00194C  19D7               	xorwf	efgtoa@mode& (0+255),w,b
  3305  00194E  A4D8               	btfss	status,2,c
  3306  001950  EFAC  F00C         	goto	u7781
  3307  001954  EFAE  F00C         	goto	u7780
  3308  001958                     u7781:
  3309  001958  EFB9  F00C         	goto	l7023
  3310  00195C                     u7780:
  3311  00195C                     
  3312                           ; BSR set to: 0
  3313  00195C  BFC7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3314  00195E  EFB5  F00C         	goto	u7790
  3315  001962  EFB3  F00C         	goto	u7791
  3316  001966                     u7791:
  3317  001966  EFB9  F00C         	goto	l7023
  3318  00196A                     u7790:
  3319  00196A                     
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3322  00196A  4BC2               	infsnz	efgtoa@t& (0+255),f,b
  3323  00196C  2BC3               	incf	(efgtoa@t+1)& (0+255),f,b
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3326  00196E  EF03  F00D         	goto	l7051
  3327  001972                     l7023:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3331  001972  51C4               	movf	efgtoa@pp& (0+255),w,b
  3332  001974  11C5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3333  001976  A4D8               	btfss	status,2,c
  3334  001978  EFC0  F00C         	goto	u7801
  3335  00197C  EFC2  F00C         	goto	u7800
  3336  001980                     u7801:
  3337  001980  EFEC  F00C         	goto	l7043
  3338  001984                     u7800:
  3339  001984                     
  3340                           ; BSR set to: 0
  3341  001984  BFC7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3342  001986  EFC9  F00C         	goto	u7810
  3343  00198A  EFC7  F00C         	goto	u7811
  3344  00198E                     u7811:
  3345  00198E  EFEC  F00C         	goto	l7043
  3346  001992                     u7810:
  3347  001992                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3350  001992  0E00               	movlw	low _dbuf
  3351  001994  25E8               	addwf	efgtoa@n& (0+255),w,b
  3352  001996  6ED9               	movwf	fsr2l,c
  3353  001998  0E01               	movlw	high _dbuf
  3354  00199A  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3355  00199C  6EDA               	movwf	fsr2h,c
  3356  00199E  0E2E               	movlw	46
  3357  0019A0  6EDF               	movwf	indf2,c
  3358  0019A2                     
  3359                           ; BSR set to: 0
  3360  0019A2  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3361  0019A4  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3362  0019A6                     
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3365  0019A6  07D4               	decf	efgtoa@w& (0+255),f,b
  3366  0019A8  A0D8               	btfss	status,0,c
  3367  0019AA  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3368  0019AC                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3371  0019AC  0E00               	movlw	0
  3372  0019AE  6FC5               	movwf	(efgtoa@pp+1)& (0+255),b
  3373  0019B0  0E01               	movlw	1
  3374  0019B2  6FC4               	movwf	efgtoa@pp& (0+255),b
  3375  0019B4  EFEC  F00C         	goto	l7043
  3376  0019B8                     l7035:
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3380  0019B8  0E00               	movlw	low _dbuf
  3381  0019BA  25E8               	addwf	efgtoa@n& (0+255),w,b
  3382  0019BC  6ED9               	movwf	fsr2l,c
  3383  0019BE  0E01               	movlw	high _dbuf
  3384  0019C0  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3385  0019C2  6EDA               	movwf	fsr2h,c
  3386  0019C4  0E30               	movlw	48
  3387  0019C6  6EDF               	movwf	indf2,c
  3388  0019C8                     
  3389                           ; BSR set to: 0
  3390  0019C8  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3391  0019CA  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3392  0019CC                     
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3395  0019CC  07D4               	decf	efgtoa@w& (0+255),f,b
  3396  0019CE  A0D8               	btfss	status,0,c
  3397  0019D0  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3398  0019D2                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3401  0019D2  07C2               	decf	efgtoa@t& (0+255),f,b
  3402  0019D4  A0D8               	btfss	status,0,c
  3403  0019D6  07C3               	decf	(efgtoa@t+1)& (0+255),f,b
  3404  0019D8                     l7043:
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3408  0019D8  51C2               	movf	efgtoa@t& (0+255),w,b
  3409  0019DA  11C3               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3410  0019DC  A4D8               	btfss	status,2,c
  3411  0019DE  EFF3  F00C         	goto	u7821
  3412  0019E2  EFF5  F00C         	goto	u7820
  3413  0019E6                     u7821:
  3414  0019E6  EFDC  F00C         	goto	l7035
  3415  0019EA                     u7820:
  3416  0019EA                     
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3419  0019EA  0E00               	movlw	low _dbuf
  3420  0019EC  25E8               	addwf	efgtoa@n& (0+255),w,b
  3421  0019EE  6ED9               	movwf	fsr2l,c
  3422  0019F0  0E01               	movlw	high _dbuf
  3423  0019F2  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3424  0019F4  6EDA               	movwf	fsr2h,c
  3425  0019F6  51CE               	movf	efgtoa@d& (0+255),w,b
  3426  0019F8  0F30               	addlw	48
  3427  0019FA  6EDF               	movwf	indf2,c
  3428  0019FC                     
  3429                           ; BSR set to: 0
  3430  0019FC  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3431  0019FE  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3432  001A00                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3435  001A00  07D4               	decf	efgtoa@w& (0+255),f,b
  3436  001A02  A0D8               	btfss	status,0,c
  3437  001A04  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3438  001A06                     l7051:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3442  001A06  C0D8  F01E         	movff	efgtoa@h,___flsub@b
  3443  001A0A  C0D9  F01F         	movff	efgtoa@h+1,___flsub@b+1
  3444  001A0E  C0DA  F020         	movff	efgtoa@h+2,___flsub@b+2
  3445  001A12  C0DB  F021         	movff	efgtoa@h+3,___flsub@b+3
  3446  001A16  C0EA  F009         	movff	efgtoa@u,___flmul@a
  3447  001A1A  C0EB  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3448  001A1E  C0EC  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3449  001A22  C0ED  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3450  001A26  C0DC  F005         	movff	efgtoa@l,___flmul@b
  3451  001A2A  C0DD  F006         	movff	efgtoa@l+1,___flmul@b+1
  3452  001A2E  C0DE  F007         	movff	efgtoa@l+2,___flmul@b+2
  3453  001A32  C0DF  F008         	movff	efgtoa@l+3,___flmul@b+3
  3454  001A36  EC2A  F013         	call	___flmul	;wreg free
  3455  001A3A  C005  F022         	movff	?___flmul,___flsub@a
  3456  001A3E  C006  F023         	movff	?___flmul+1,___flsub@a+1
  3457  001A42  C007  F024         	movff	?___flmul+2,___flsub@a+2
  3458  001A46  C008  F025         	movff	?___flmul+3,___flsub@a+3
  3459  001A4A  EC79  F021         	call	___flsub	;wreg free
  3460  001A4E  C01E  F0D8         	movff	?___flsub,efgtoa@h
  3461  001A52  C01F  F0D9         	movff	?___flsub+1,efgtoa@h+1
  3462  001A56  C020  F0DA         	movff	?___flsub+2,efgtoa@h+2
  3463  001A5A  C021  F0DB         	movff	?___flsub+3,efgtoa@h+3
  3464  001A5E                     
  3465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3466  001A5E  C0EA  F005         	movff	efgtoa@u,___fldiv@b
  3467  001A62  C0EB  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3468  001A66  C0EC  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3469  001A6A  C0ED  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3470  001A6E  0E00               	movlw	0
  3471  001A70  6E09               	movwf	___fldiv@a^0,c
  3472  001A72  0E00               	movlw	0
  3473  001A74  6E0A               	movwf	(___fldiv@a+1)^0,c
  3474  001A76  0E20               	movlw	32
  3475  001A78  6E0B               	movwf	(___fldiv@a+2)^0,c
  3476  001A7A  0E41               	movlw	65
  3477  001A7C  6E0C               	movwf	(___fldiv@a+3)^0,c
  3478  001A7E  EC3F  F015         	call	___fldiv	;wreg free
  3479  001A82  C005  F0EA         	movff	?___fldiv,efgtoa@u
  3480  001A86  C006  F0EB         	movff	?___fldiv+1,efgtoa@u+1
  3481  001A8A  C007  F0EC         	movff	?___fldiv+2,efgtoa@u+2
  3482  001A8E  C008  F0ED         	movff	?___fldiv+3,efgtoa@u+3
  3483  001A92                     
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3485  001A92  0100               	movlb	0	; () banked
  3486  001A94  07C6               	decf	efgtoa@ne& (0+255),f,b
  3487  001A96  A0D8               	btfss	status,0,c
  3488  001A98  07C7               	decf	(efgtoa@ne+1)& (0+255),f,b
  3489  001A9A                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3492  001A9A  4BE0               	infsnz	efgtoa@i& (0+255),f,b
  3493  001A9C  2BE1               	incf	(efgtoa@i+1)& (0+255),f,b
  3494  001A9E                     l7059:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3498  001A9E  51C8               	movf	efgtoa@m& (0+255),w,b
  3499  001AA0  5DE0               	subwf	efgtoa@i& (0+255),w,b
  3500  001AA2  51E1               	movf	(efgtoa@i+1)& (0+255),w,b
  3501  001AA4  0A80               	xorlw	128
  3502  001AA6  6E39               	movwf	??_efgtoa^0,c
  3503  001AA8  51C9               	movf	(efgtoa@m+1)& (0+255),w,b
  3504  001AAA  0A80               	xorlw	128
  3505  001AAC  5839               	subwfb	??_efgtoa^0,w,c
  3506  001AAE  B0D8               	btfsc	status,0,c
  3507  001AB0  EF5C  F00D         	goto	u7831
  3508  001AB4  EF5E  F00D         	goto	u7830
  3509  001AB8                     u7831:
  3510  001AB8  EF6C  F00D         	goto	l7063
  3511  001ABC                     u7830:
  3512  001ABC                     
  3513                           ; BSR set to: 0
  3514  001ABC  BFE9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3515  001ABE  EF6A  F00D         	goto	u7841
  3516  001AC2  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  3517  001AC4  E109               	bnz	u7840
  3518  001AC6  0E4B               	movlw	75
  3519  001AC8  5DE8               	subwf	efgtoa@n& (0+255),w,b
  3520  001ACA  A0D8               	btfss	status,0,c
  3521  001ACC  EF6A  F00D         	goto	u7841
  3522  001AD0  EF6C  F00D         	goto	u7840
  3523  001AD4                     u7841:
  3524  001AD4  EF62  F00C         	goto	l7011
  3525  001AD8                     u7840:
  3526  001AD8                     l7063:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3530  001AD8  51C4               	movf	efgtoa@pp& (0+255),w,b
  3531  001ADA  11C5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3532  001ADC  A4D8               	btfss	status,2,c
  3533  001ADE  EF73  F00D         	goto	u7851
  3534  001AE2  EF75  F00D         	goto	u7850
  3535  001AE6                     u7851:
  3536  001AE6  EF86  F00D         	goto	l7071
  3537  001AEA                     u7850:
  3538  001AEA                     
  3539                           ; BSR set to: 0
  3540  001AEA  A9B1               	btfss	_flags& (0+255),4,b
  3541  001AEC  EF7A  F00D         	goto	u7861
  3542  001AF0  EF7C  F00D         	goto	u7860
  3543  001AF4                     u7861:
  3544  001AF4  EF86  F00D         	goto	l7071
  3545  001AF8                     u7860:
  3546  001AF8                     
  3547                           ; BSR set to: 0
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3549  001AF8  0E00               	movlw	low _dbuf
  3550  001AFA  25E8               	addwf	efgtoa@n& (0+255),w,b
  3551  001AFC  6ED9               	movwf	fsr2l,c
  3552  001AFE  0E01               	movlw	high _dbuf
  3553  001B00  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3554  001B02  6EDA               	movwf	fsr2h,c
  3555  001B04  0E2E               	movlw	46
  3556  001B06  6EDF               	movwf	indf2,c
  3557  001B08                     
  3558                           ; BSR set to: 0
  3559  001B08  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3560  001B0A  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3561  001B0C                     l7071:
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3565  001B0C  0E00               	movlw	low _dbuf
  3566  001B0E  25E8               	addwf	efgtoa@n& (0+255),w,b
  3567  001B10  6ED9               	movwf	fsr2l,c
  3568  001B12  0E01               	movlw	high _dbuf
  3569  001B14  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3570  001B16  6EDA               	movwf	fsr2h,c
  3571  001B18  0E00               	movlw	0
  3572  001B1A  6EDF               	movwf	indf2,c
  3573  001B1C                     
  3574                           ; BSR set to: 0
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3576  001B1C  0E65               	movlw	101
  3577  001B1E  19D6               	xorwf	efgtoa@nmode& (0+255),w,b
  3578  001B20  A4D8               	btfss	status,2,c
  3579  001B22  EF95  F00D         	goto	u7871
  3580  001B26  EF97  F00D         	goto	u7870
  3581  001B2A                     u7871:
  3582  001B2A  EF67  F00E         	goto	l7133
  3583  001B2E                     u7870:
  3584  001B2E                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3587  001B2E  0E00               	movlw	0
  3588  001B30  6FE1               	movwf	(efgtoa@i+1)& (0+255),b
  3589  001B32  0E4F               	movlw	79
  3590  001B34  6FE0               	movwf	efgtoa@i& (0+255),b
  3591  001B36                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3594  001B36  0E00               	movlw	low _dbuf
  3595  001B38  25E0               	addwf	efgtoa@i& (0+255),w,b
  3596  001B3A  6ED9               	movwf	fsr2l,c
  3597  001B3C  0E01               	movlw	high _dbuf
  3598  001B3E  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3599  001B40  6EDA               	movwf	fsr2h,c
  3600  001B42  0E00               	movlw	0
  3601  001B44  6EDF               	movwf	indf2,c
  3602  001B46                     
  3603                           ; BSR set to: 0
  3604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3605  001B46  0E00               	movlw	0
  3606  001B48  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  3607  001B4A  0E00               	movlw	0
  3608  001B4C  6FD0               	movwf	efgtoa@sign& (0+255),b
  3609  001B4E                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3612  001B4E  BFE7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3613  001B50  EFAE  F00D         	goto	u7880
  3614  001B54  EFAC  F00D         	goto	u7881
  3615  001B58                     u7881:
  3616  001B58  EFB6  F00D         	goto	l7087
  3617  001B5C                     u7880:
  3618  001B5C                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3621  001B5C  0E00               	movlw	0
  3622  001B5E  6FD1               	movwf	(efgtoa@sign+1)& (0+255),b
  3623  001B60  0E01               	movlw	1
  3624  001B62  6FD0               	movwf	efgtoa@sign& (0+255),b
  3625  001B64                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3628  001B64  6DE6               	negf	efgtoa@e& (0+255),b
  3629  001B66  1FE7               	comf	(efgtoa@e+1)& (0+255),f,b
  3630  001B68  B0D8               	btfsc	status,0,c
  3631  001B6A  2BE7               	incf	(efgtoa@e+1)& (0+255),f,b
  3632  001B6C                     l7087:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3636  001B6C  0E00               	movlw	0
  3637  001B6E  6FD3               	movwf	(efgtoa@p+1)& (0+255),b
  3638  001B70  0E02               	movlw	2
  3639  001B72  6FD2               	movwf	efgtoa@p& (0+255),b
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3642  001B74  EFE7  F00D         	goto	l7099
  3643  001B78                     l7089:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3647  001B78  07E0               	decf	efgtoa@i& (0+255),f,b
  3648  001B7A  A0D8               	btfss	status,0,c
  3649  001B7C  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  3650  001B7E                     
  3651                           ; BSR set to: 0
  3652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3653  001B7E  0E00               	movlw	low _dbuf
  3654  001B80  25E0               	addwf	efgtoa@i& (0+255),w,b
  3655  001B82  6ED9               	movwf	fsr2l,c
  3656  001B84  0E01               	movlw	high _dbuf
  3657  001B86  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3658  001B88  6EDA               	movwf	fsr2h,c
  3659  001B8A  C0E6  F005         	movff	efgtoa@e,___awmod@dividend
  3660  001B8E  C0E7  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  3661  001B92  0E00               	movlw	0
  3662  001B94  6E08               	movwf	(___awmod@divisor+1)^0,c
  3663  001B96  0E0A               	movlw	10
  3664  001B98  6E07               	movwf	___awmod@divisor^0,c
  3665  001B9A  EC35  F01D         	call	___awmod	;wreg free
  3666  001B9E  5005               	movf	?___awmod^0,w,c
  3667  001BA0  0F30               	addlw	48
  3668  001BA2  6EDF               	movwf	indf2,c
  3669  001BA4                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3671  001BA4  C0E6  F005         	movff	efgtoa@e,___awdiv@dividend
  3672  001BA8  C0E7  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  3673  001BAC  0E00               	movlw	0
  3674  001BAE  6E08               	movwf	(___awdiv@divisor+1)^0,c
  3675  001BB0  0E0A               	movlw	10
  3676  001BB2  6E07               	movwf	___awdiv@divisor^0,c
  3677  001BB4  EC11  F01C         	call	___awdiv	;wreg free
  3678  001BB8  C005  F0E6         	movff	?___awdiv,efgtoa@e
  3679  001BBC  C006  F0E7         	movff	?___awdiv+1,efgtoa@e+1
  3680  001BC0                     
  3681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3682  001BC0  0100               	movlb	0	; () banked
  3683  001BC2  07D2               	decf	efgtoa@p& (0+255),f,b
  3684  001BC4  A0D8               	btfss	status,0,c
  3685  001BC6  07D3               	decf	(efgtoa@p+1)& (0+255),f,b
  3686  001BC8                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3689  001BC8  07D4               	decf	efgtoa@w& (0+255),f,b
  3690  001BCA  A0D8               	btfss	status,0,c
  3691  001BCC  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3692  001BCE                     l7099:
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3696  001BCE  51E6               	movf	efgtoa@e& (0+255),w,b
  3697  001BD0  11E7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3698  001BD2  A4D8               	btfss	status,2,c
  3699  001BD4  EFEE  F00D         	goto	u7891
  3700  001BD8  EFF0  F00D         	goto	u7890
  3701  001BDC                     u7891:
  3702  001BDC  EFBC  F00D         	goto	l7089
  3703  001BE0                     u7890:
  3704  001BE0                     
  3705                           ; BSR set to: 0
  3706  001BE0  BFD3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3707  001BE2  EFFD  F00D         	goto	u7900
  3708  001BE6  51D3               	movf	(efgtoa@p+1)& (0+255),w,b
  3709  001BE8  E106               	bnz	u7901
  3710  001BEA  05D2               	decf	efgtoa@p& (0+255),w,b
  3711  001BEC  B0D8               	btfsc	status,0,c
  3712  001BEE  EFFB  F00D         	goto	u7901
  3713  001BF2  EFFD  F00D         	goto	u7900
  3714  001BF6                     u7901:
  3715  001BF6  EFBC  F00D         	goto	l7089
  3716  001BFA                     u7900:
  3717  001BFA                     
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  3720  001BFA  07E0               	decf	efgtoa@i& (0+255),f,b
  3721  001BFC  A0D8               	btfss	status,0,c
  3722  001BFE  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  3723  001C00                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3726  001C00  51D0               	movf	efgtoa@sign& (0+255),w,b
  3727  001C02  11D1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3728  001C04  A4D8               	btfss	status,2,c
  3729  001C06  EF07  F00E         	goto	u7911
  3730  001C0A  EF09  F00E         	goto	u7910
  3731  001C0E                     u7911:
  3732  001C0E  EF0F  F00E         	goto	l7109
  3733  001C12                     u7910:
  3734  001C12                     
  3735                           ; BSR set to: 0
  3736  001C12  0E00               	movlw	0
  3737  001C14  6FBD               	movwf	(_efgtoa$2101+1)& (0+255),b
  3738  001C16  0E2B               	movlw	43
  3739  001C18  6FBC               	movwf	_efgtoa$2101& (0+255),b
  3740  001C1A  EF13  F00E         	goto	l7111
  3741  001C1E                     l7109:
  3742                           
  3743                           ; BSR set to: 0
  3744  001C1E  0E00               	movlw	0
  3745  001C20  6FBD               	movwf	(_efgtoa$2101+1)& (0+255),b
  3746  001C22  0E2D               	movlw	45
  3747  001C24  6FBC               	movwf	_efgtoa$2101& (0+255),b
  3748  001C26                     l7111:
  3749                           
  3750                           ; BSR set to: 0
  3751  001C26  0E00               	movlw	low _dbuf
  3752  001C28  25E0               	addwf	efgtoa@i& (0+255),w,b
  3753  001C2A  6ED9               	movwf	fsr2l,c
  3754  001C2C  0E01               	movlw	high _dbuf
  3755  001C2E  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3756  001C30  6EDA               	movwf	fsr2h,c
  3757  001C32  C0BC  FFDF         	movff	_efgtoa$2101,indf2
  3758  001C36                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  3761  001C36  07D4               	decf	efgtoa@w& (0+255),f,b
  3762  001C38  A0D8               	btfss	status,0,c
  3763  001C3A  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3764  001C3C                     
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3767  001C3C  07E0               	decf	efgtoa@i& (0+255),f,b
  3768  001C3E  A0D8               	btfss	status,0,c
  3769  001C40  07E1               	decf	(efgtoa@i+1)& (0+255),f,b
  3770  001C42                     
  3771                           ; BSR set to: 0
  3772  001C42  0EBF               	movlw	191
  3773  001C44  6E39               	movwf	??_efgtoa^0,c
  3774  001C46  0EFF               	movlw	255
  3775  001C48  6E3A               	movwf	(??_efgtoa+1)^0,c
  3776  001C4A  5038               	movf	efgtoa@c^0,w,c
  3777  001C4C  6E3B               	movwf	(??_efgtoa+2)^0,c
  3778  001C4E  6A3C               	clrf	(??_efgtoa+3)^0,c
  3779  001C50  5039               	movf	??_efgtoa^0,w,c
  3780  001C52  263B               	addwf	(??_efgtoa+2)^0,f,c
  3781  001C54  503A               	movf	(??_efgtoa+1)^0,w,c
  3782  001C56  223C               	addwfc	(??_efgtoa+3)^0,f,c
  3783  001C58  503C               	movf	(??_efgtoa+3)^0,w,c
  3784  001C5A  E10A               	bnz	u7920
  3785  001C5C  0E1A               	movlw	26
  3786  001C5E  5C3B               	subwf	(??_efgtoa+2)^0,w,c
  3787  001C60  A0D8               	btfss	status,0,c
  3788  001C62  EF35  F00E         	goto	u7921
  3789  001C66  EF38  F00E         	goto	u7920
  3790  001C6A                     u7921:
  3791  001C6A  0E01               	movlw	1
  3792  001C6C  EF39  F00E         	goto	u7930
  3793  001C70                     u7920:
  3794  001C70  0E00               	movlw	0
  3795  001C72                     u7930:
  3796  001C72  6FC0               	movwf	_efgtoa$2103& (0+255),b
  3797  001C74  6BC1               	clrf	(_efgtoa$2103+1)& (0+255),b
  3798  001C76                     
  3799                           ; BSR set to: 0
  3800  001C76  51C0               	movf	_efgtoa$2103& (0+255),w,b
  3801  001C78  11C1               	iorwf	(_efgtoa$2103+1)& (0+255),w,b
  3802  001C7A  A4D8               	btfss	status,2,c
  3803  001C7C  EF42  F00E         	goto	u7941
  3804  001C80  EF44  F00E         	goto	u7940
  3805  001C84                     u7941:
  3806  001C84  EF4A  F00E         	goto	l7125
  3807  001C88                     u7940:
  3808  001C88                     
  3809                           ; BSR set to: 0
  3810  001C88  0E00               	movlw	0
  3811  001C8A  6FBF               	movwf	(_efgtoa$2102+1)& (0+255),b
  3812  001C8C  0E65               	movlw	101
  3813  001C8E  6FBE               	movwf	_efgtoa$2102& (0+255),b
  3814  001C90  EF4E  F00E         	goto	l7127
  3815  001C94                     l7125:
  3816                           
  3817                           ; BSR set to: 0
  3818  001C94  0E00               	movlw	0
  3819  001C96  6FBF               	movwf	(_efgtoa$2102+1)& (0+255),b
  3820  001C98  0E45               	movlw	69
  3821  001C9A  6FBE               	movwf	_efgtoa$2102& (0+255),b
  3822  001C9C                     l7127:
  3823                           
  3824                           ; BSR set to: 0
  3825  001C9C  0E00               	movlw	low _dbuf
  3826  001C9E  25E0               	addwf	efgtoa@i& (0+255),w,b
  3827  001CA0  6ED9               	movwf	fsr2l,c
  3828  001CA2  0E01               	movlw	high _dbuf
  3829  001CA4  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3830  001CA6  6EDA               	movwf	fsr2h,c
  3831  001CA8  C0BE  FFDF         	movff	_efgtoa$2102,indf2
  3832  001CAC                     
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  3835  001CAC  07D4               	decf	efgtoa@w& (0+255),f,b
  3836  001CAE  A0D8               	btfss	status,0,c
  3837  001CB0  07D5               	decf	(efgtoa@w+1)& (0+255),f,b
  3838  001CB2                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3841  001CB2  0E00               	movlw	low _dbuf
  3842  001CB4  25E8               	addwf	efgtoa@n& (0+255),w,b
  3843  001CB6  6E05               	movwf	strcpy@dest^0,c
  3844  001CB8  0E01               	movlw	high _dbuf
  3845  001CBA  21E9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3846  001CBC  6E06               	movwf	(strcpy@dest+1)^0,c
  3847  001CBE  0E00               	movlw	low _dbuf
  3848  001CC0  25E0               	addwf	efgtoa@i& (0+255),w,b
  3849  001CC2  6E07               	movwf	strcpy@src^0,c
  3850  001CC4  0E01               	movlw	high _dbuf
  3851  001CC6  21E1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3852  001CC8  6E08               	movwf	(strcpy@src+1)^0,c
  3853  001CCA  ECF5  F020         	call	_strcpy	;wreg free
  3854  001CCE                     l7133:
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  3857  001CCE  C032  F017         	movff	efgtoa@fp,pad@fp
  3858  001CD2  C033  F018         	movff	efgtoa@fp+1,pad@fp+1
  3859  001CD6  0E00               	movlw	low _dbuf
  3860  001CD8  6E19               	movwf	pad@buf^0,c
  3861  001CDA  0E01               	movlw	high _dbuf
  3862  001CDC  6E1A               	movwf	(pad@buf+1)^0,c
  3863  001CDE  C0D4  F01B         	movff	efgtoa@w,pad@p
  3864  001CE2  C0D5  F01C         	movff	efgtoa@w+1,pad@p+1
  3865  001CE6  ECAE  F01B         	call	_pad	;wreg free
  3866  001CEA  C017  F032         	movff	?_pad,?_efgtoa
  3867  001CEE  C018  F033         	movff	?_pad+1,?_efgtoa+1
  3868  001CF2                     l1454:
  3869  001CF2  0012               	return		;funcret
  3870  001CF4                     __end_of_efgtoa:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function _tolower *****************
  3874 ;; Defined at:
  3875 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  c               2   10[COMRAM] int 
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  2   10[COMRAM] int 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2, status,0
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;Total ram usage:        8 bytes
  3894 ;; Hardware stack levels used: 1
  3895 ;; Hardware stack levels required when called: 5
  3896 ;; This function calls:
  3897 ;;		_isupper
  3898 ;; This function is called by:
  3899 ;;		_efgtoa
  3900 ;;		_vfpfcnvrt
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text6
  3905  00418A                     __ptext6:
  3906                           	callstack 0
  3907  00418A                     _tolower:
  3908                           	callstack 22
  3909  00418A  0EBF               	movlw	191
  3910  00418C  6E0D               	movwf	??_tolower^0,c
  3911  00418E  0EFF               	movlw	255
  3912  004190  6E0E               	movwf	(??_tolower+1)^0,c
  3913  004192  C00B  F00F         	movff	tolower@c,??_tolower+2
  3914  004196  C00C  F010         	movff	tolower@c+1,??_tolower+3
  3915  00419A  500D               	movf	??_tolower^0,w,c
  3916  00419C  260F               	addwf	(??_tolower+2)^0,f,c
  3917  00419E  500E               	movf	(??_tolower+1)^0,w,c
  3918  0041A0  2210               	addwfc	(??_tolower+3)^0,f,c
  3919  0041A2  5010               	movf	(??_tolower+3)^0,w,c
  3920  0041A4  E10A               	bnz	u7240
  3921  0041A6  0E1A               	movlw	26
  3922  0041A8  5C0F               	subwf	(??_tolower+2)^0,w,c
  3923  0041AA  A0D8               	btfss	status,0,c
  3924  0041AC  EFDA  F020         	goto	u7241
  3925  0041B0  EFDD  F020         	goto	u7240
  3926  0041B4                     u7241:
  3927  0041B4  0E01               	movlw	1
  3928  0041B6  EFDE  F020         	goto	u7250
  3929  0041BA                     u7240:
  3930  0041BA  0E00               	movlw	0
  3931  0041BC                     u7250:
  3932  0041BC  6E11               	movwf	_tolower$2244^0,c
  3933  0041BE  6A12               	clrf	(_tolower$2244+1)^0,c
  3934  0041C0  5011               	movf	_tolower$2244^0,w,c
  3935  0041C2  1012               	iorwf	(_tolower$2244+1)^0,w,c
  3936  0041C4  B4D8               	btfsc	status,2,c
  3937  0041C6  EFE7  F020         	goto	u7261
  3938  0041CA  EFE9  F020         	goto	u7260
  3939  0041CE                     u7261:
  3940  0041CE  EFF0  F020         	goto	l1681
  3941  0041D2                     u7260:
  3942  0041D2  0E20               	movlw	32
  3943  0041D4  100B               	iorwf	tolower@c^0,w,c
  3944  0041D6  6E0B               	movwf	?_tolower^0,c
  3945  0041D8  500C               	movf	(tolower@c+1)^0,w,c
  3946  0041DA  6E0C               	movwf	(?_tolower+1)^0,c
  3947  0041DC  EFF4  F020         	goto	l1686
  3948  0041E0                     l1681:
  3949  0041E0  C00B  F00B         	movff	tolower@c,?_tolower
  3950  0041E4  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  3951  0041E8                     l1686:
  3952  0041E8  0012               	return		;funcret
  3953  0041EA                     __end_of_tolower:
  3954                           	callstack 0
  3955                           
  3956 ;; *************** function _isupper *****************
  3957 ;; Defined at:
  3958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  c               2    4[COMRAM] int 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    4[COMRAM] int 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;Total ram usage:        6 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; Hardware stack levels required when called: 4
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_efgtoa
  3983 ;;		_vfpfcnvrt
  3984 ;;		_tolower
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text7
  3989  004488                     __ptext7:
  3990                           	callstack 0
  3991  004488                     _isupper:
  3992                           	callstack 22
  3993  004488  0EBF               	movlw	191
  3994  00448A  6E07               	movwf	??_isupper^0,c
  3995  00448C  0EFF               	movlw	255
  3996  00448E  6E08               	movwf	(??_isupper+1)^0,c
  3997  004490  C005  F009         	movff	isupper@c,??_isupper+2
  3998  004494  C006  F00A         	movff	isupper@c+1,??_isupper+3
  3999  004498  5007               	movf	??_isupper^0,w,c
  4000  00449A  2609               	addwf	(??_isupper+2)^0,f,c
  4001  00449C  5008               	movf	(??_isupper+1)^0,w,c
  4002  00449E  220A               	addwfc	(??_isupper+3)^0,f,c
  4003  0044A0  500A               	movf	(??_isupper+3)^0,w,c
  4004  0044A2  E10A               	bnz	u6390
  4005  0044A4  0E1A               	movlw	26
  4006  0044A6  5C09               	subwf	(??_isupper+2)^0,w,c
  4007  0044A8  A0D8               	btfss	status,0,c
  4008  0044AA  EF59  F022         	goto	u6391
  4009  0044AE  EF5C  F022         	goto	u6390
  4010  0044B2                     u6391:
  4011  0044B2  0E01               	movlw	1
  4012  0044B4  EF5D  F022         	goto	u6400
  4013  0044B8                     u6390:
  4014  0044B8  0E00               	movlw	0
  4015  0044BA                     u6400:
  4016  0044BA  6E05               	movwf	?_isupper^0,c
  4017  0044BC  6A06               	clrf	(?_isupper+1)^0,c
  4018  0044BE  0012               	return		;funcret
  4019  0044C0                     __end_of_isupper:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _strcpy *****************
  4023 ;; Defined at:
  4024 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4027 ;;		 -> dbuf(80), 
  4028 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4029 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4030 ;;		 -> dbuf(80), 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  d               2   12[COMRAM] PTR unsigned char 
  4033 ;;		 -> dbuf(80), 
  4034 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4035 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  4036 ;;		 -> dbuf(80), 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    4[COMRAM] PTR unsigned char 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;Total ram usage:       10 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 4
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_efgtoa
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text8
  4061  0041EA                     __ptext8:
  4062                           	callstack 0
  4063  0041EA                     _strcpy:
  4064                           	callstack 22
  4065  0041EA  C007  F00B         	movff	strcpy@src,strcpy@s
  4066  0041EE  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4067  0041F2  C005  F00D         	movff	strcpy@dest,strcpy@d
  4068  0041F6  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4069  0041FA                     l6773:
  4070  0041FA  500B               	movf	strcpy@s^0,w,c
  4071  0041FC  6E09               	movwf	??_strcpy^0,c
  4072  0041FE  500C               	movf	(strcpy@s+1)^0,w,c
  4073  004200  6E0A               	movwf	(??_strcpy+1)^0,c
  4074  004202  4A0B               	infsnz	strcpy@s^0,f,c
  4075  004204  2A0C               	incf	(strcpy@s+1)^0,f,c
  4076  004206  C009  FFF6         	movff	??_strcpy,tblptrl
  4077  00420A  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4078  00420E  0E00               	movlw	low (__smallconst shr (0+16))
  4079  004210  6EF8               	movwf	tblptru,c
  4080  004212  C00D  FFD9         	movff	strcpy@d,fsr2l
  4081  004216  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4082  00421A  4A0D               	infsnz	strcpy@d^0,f,c
  4083  00421C  2A0E               	incf	(strcpy@d+1)^0,f,c
  4084  00421E  0E0F               	movlw	(high __ramtop+-1)
  4085  004220  64F7               	cpfsgt	tblptrh,c
  4086  004222  D003               	bra	u7227
  4087  004224  0008               	tblrd		*
  4088  004226  50F5               	movf	tablat,w,c
  4089  004228  D005               	bra	u7220
  4090  00422A                     u7227:
  4091  00422A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4092  00422E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4093  004232  50EF               	movf	indf0,w,c
  4094  004234                     u7220:
  4095  004234  6EDF               	movwf	indf2,c
  4096  004236  50DF               	movf	indf2,w,c
  4097  004238  A4D8               	btfss	status,2,c
  4098  00423A  EF21  F021         	goto	u7231
  4099  00423E  EF23  F021         	goto	u7230
  4100  004242                     u7231:
  4101  004242  EFFD  F020         	goto	l6773
  4102  004246                     u7230:
  4103  004246  0012               	return		;funcret
  4104  004248                     __end_of_strcpy:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _pad *****************
  4108 ;; Defined at:
  4109 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4112 ;;		 -> NULL(0), 
  4113 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4114 ;;		 -> dbuf(80), 
  4115 ;;  p               2   26[COMRAM] int 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  w               2   31[COMRAM] int 
  4118 ;;  i               2   29[COMRAM] int 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2   22[COMRAM] int 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:       11 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 8
  4135 ;; This function calls:
  4136 ;;		_fputc
  4137 ;;		_fputs
  4138 ;;		_strlen
  4139 ;; This function is called by:
  4140 ;;		_efgtoa
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text9
  4145  00375C                     __ptext9:
  4146                           	callstack 0
  4147  00375C                     _pad:
  4148                           	callstack 18
  4149  00375C                     
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4151  00375C  0100               	movlb	0	; () banked
  4152  00375E  A1B1               	btfss	_flags& (0+255),0,b
  4153  003760  EFB4  F01B         	goto	u7111
  4154  003764  EFB6  F01B         	goto	u7110
  4155  003768                     u7111:
  4156  003768  EFC0  F01B         	goto	l6731
  4157  00376C                     u7110:
  4158  00376C                     
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4161  00376C  C019  F010         	movff	pad@buf,fputs@s
  4162  003770  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4163  003774  C017  F012         	movff	pad@fp,fputs@fp
  4164  003778  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4165  00377C  ECBF  F021         	call	_fputs	;wreg free
  4166  003780                     l6731:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4169  003780  BE1C               	btfsc	(pad@p+1)^0,7,c
  4170  003782  EFC5  F01B         	goto	u7121
  4171  003786  EFC7  F01B         	goto	u7120
  4172  00378A                     u7121:
  4173  00378A  EFCD  F01B         	goto	l6735
  4174  00378E                     u7120:
  4175  00378E  C01B  F020         	movff	pad@p,pad@w
  4176  003792  C01C  F021         	movff	pad@p+1,pad@w+1
  4177  003796  EFD1  F01B         	goto	l1431
  4178  00379A                     l6735:
  4179  00379A  0E00               	movlw	0
  4180  00379C  6E21               	movwf	(pad@w+1)^0,c
  4181  00379E  0E00               	movlw	0
  4182  0037A0  6E20               	movwf	pad@w^0,c
  4183  0037A2                     l1431:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4186  0037A2  0E00               	movlw	0
  4187  0037A4  6E1F               	movwf	(pad@i+1)^0,c
  4188  0037A6  0E00               	movlw	0
  4189  0037A8  6E1E               	movwf	pad@i^0,c
  4190                           
  4191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4192  0037AA  EFE3  F01B         	goto	l6741
  4193  0037AE                     l6737:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4196  0037AE  0E00               	movlw	0
  4197  0037B0  6E08               	movwf	(fputc@c+1)^0,c
  4198  0037B2  0E20               	movlw	32
  4199  0037B4  6E07               	movwf	fputc@c^0,c
  4200  0037B6  C017  F009         	movff	pad@fp,fputc@fp
  4201  0037BA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4202  0037BE  EC35  F01E         	call	_fputc	;wreg free
  4203  0037C2                     
  4204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4205  0037C2  4A1E               	infsnz	pad@i^0,f,c
  4206  0037C4  2A1F               	incf	(pad@i+1)^0,f,c
  4207  0037C6                     l6741:
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4210  0037C6  5020               	movf	pad@w^0,w,c
  4211  0037C8  5C1E               	subwf	pad@i^0,w,c
  4212  0037CA  501F               	movf	(pad@i+1)^0,w,c
  4213  0037CC  0A80               	xorlw	128
  4214  0037CE  6E1D               	movwf	??_pad^0,c
  4215  0037D0  5021               	movf	(pad@w+1)^0,w,c
  4216  0037D2  0A80               	xorlw	128
  4217  0037D4  581D               	subwfb	??_pad^0,w,c
  4218  0037D6  A0D8               	btfss	status,0,c
  4219  0037D8  EFF0  F01B         	goto	u7131
  4220  0037DC  EFF2  F01B         	goto	u7130
  4221  0037E0                     u7131:
  4222  0037E0  EFD7  F01B         	goto	l6737
  4223  0037E4                     u7130:
  4224  0037E4                     
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4226  0037E4  0100               	movlb	0	; () banked
  4227  0037E6  B1B1               	btfsc	_flags& (0+255),0,b
  4228  0037E8  EFF8  F01B         	goto	u7141
  4229  0037EC  EFFA  F01B         	goto	u7140
  4230  0037F0                     u7141:
  4231  0037F0  EF04  F01C         	goto	l6745
  4232  0037F4                     u7140:
  4233  0037F4                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4236  0037F4  C019  F010         	movff	pad@buf,fputs@s
  4237  0037F8  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4238  0037FC  C017  F012         	movff	pad@fp,fputs@fp
  4239  003800  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4240  003804  ECBF  F021         	call	_fputs	;wreg free
  4241  003808                     l6745:
  4242                           
  4243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4244  003808  C019  F005         	movff	pad@buf,strlen@s
  4245  00380C  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4246  003810  EC98  F022         	call	_strlen	;wreg free
  4247  003814  5020               	movf	pad@w^0,w,c
  4248  003816  2405               	addwf	?_strlen^0,w,c
  4249  003818  6E17               	movwf	?_pad^0,c
  4250  00381A  5021               	movf	(pad@w+1)^0,w,c
  4251  00381C  2006               	addwfc	(?_strlen+1)^0,w,c
  4252  00381E  6E18               	movwf	(?_pad+1)^0,c
  4253  003820  0012               	return		;funcret
  4254  003822                     __end_of_pad:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _strlen *****************
  4258 ;; Defined at:
  4259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4262 ;;		 -> dbuf(80), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4265 ;;		 -> dbuf(80), 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2    4[COMRAM] unsigned int 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;Total ram usage:        4 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 4
  4282 ;; This function calls:
  4283 ;;		Nothing
  4284 ;; This function is called by:
  4285 ;;		_pad
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text10
  4290  004530                     __ptext10:
  4291                           	callstack 0
  4292  004530                     _strlen:
  4293                           	callstack 21
  4294  004530  C005  F007         	movff	strlen@s,strlen@a
  4295  004534  C006  F008         	movff	strlen@s+1,strlen@a+1
  4296  004538  EFA0  F022         	goto	l6267
  4297  00453C                     l6265:
  4298  00453C  4A05               	infsnz	strlen@s^0,f,c
  4299  00453E  2A06               	incf	(strlen@s+1)^0,f,c
  4300  004540                     l6267:
  4301  004540  C005  FFD9         	movff	strlen@s,fsr2l
  4302  004544  C006  FFDA         	movff	strlen@s+1,fsr2h
  4303  004548  50DF               	movf	indf2,w,c
  4304  00454A  A4D8               	btfss	status,2,c
  4305  00454C  EFAA  F022         	goto	u6381
  4306  004550  EFAC  F022         	goto	u6380
  4307  004554                     u6381:
  4308  004554  EF9E  F022         	goto	l6265
  4309  004558                     u6380:
  4310  004558  5007               	movf	strlen@a^0,w,c
  4311  00455A  5C05               	subwf	strlen@s^0,w,c
  4312  00455C  6E05               	movwf	?_strlen^0,c
  4313  00455E  5008               	movf	(strlen@a+1)^0,w,c
  4314  004560  5806               	subwfb	(strlen@s+1)^0,w,c
  4315  004562  6E06               	movwf	(?_strlen+1)^0,c
  4316  004564  0012               	return		;funcret
  4317  004566                     __end_of_strlen:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _fputs *****************
  4321 ;; Defined at:
  4322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4325 ;;		 -> dbuf(80), 
  4326 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4327 ;;		 -> NULL(0), 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  i               2   20[COMRAM] int 
  4330 ;;  c               1   19[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  2   15[COMRAM] int 
  4333 ;; Registers used:
  4334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;Total ram usage:        7 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 7
  4347 ;; This function calls:
  4348 ;;		_fputc
  4349 ;; This function is called by:
  4350 ;;		_pad
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text11
  4355  00437E                     __ptext11:
  4356                           	callstack 0
  4357  00437E                     _fputs:
  4358                           	callstack 18
  4359  00437E  0E00               	movlw	0
  4360  004380  6E16               	movwf	(fputs@i+1)^0,c
  4361  004382  0E00               	movlw	0
  4362  004384  6E15               	movwf	fputs@i^0,c
  4363  004386  EFD0  F021         	goto	l6261
  4364  00438A                     l6257:
  4365  00438A  C014  F007         	movff	fputs@c,fputc@c
  4366  00438E  6A08               	clrf	(fputc@c+1)^0,c
  4367  004390  C012  F009         	movff	fputs@fp,fputc@fp
  4368  004394  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4369  004398  EC35  F01E         	call	_fputc	;wreg free
  4370  00439C  4A15               	infsnz	fputs@i^0,f,c
  4371  00439E  2A16               	incf	(fputs@i+1)^0,f,c
  4372  0043A0                     l6261:
  4373  0043A0  5015               	movf	fputs@i^0,w,c
  4374  0043A2  2410               	addwf	fputs@s^0,w,c
  4375  0043A4  6ED9               	movwf	fsr2l,c
  4376  0043A6  5016               	movf	(fputs@i+1)^0,w,c
  4377  0043A8  2011               	addwfc	(fputs@s+1)^0,w,c
  4378  0043AA  6EDA               	movwf	fsr2h,c
  4379  0043AC  50DF               	movf	indf2,w,c
  4380  0043AE  6E14               	movwf	fputs@c^0,c
  4381  0043B0  5014               	movf	fputs@c^0,w,c
  4382  0043B2  A4D8               	btfss	status,2,c
  4383  0043B4  EFDE  F021         	goto	u6371
  4384  0043B8  EFE0  F021         	goto	u6370
  4385  0043BC                     u6371:
  4386  0043BC  EFC5  F021         	goto	l6257
  4387  0043C0                     u6370:
  4388  0043C0  0012               	return		;funcret
  4389  0043C2                     __end_of_fputs:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _fputc *****************
  4393 ;; Defined at:
  4394 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  c               2    6[COMRAM] int 
  4397 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4398 ;;		 -> NULL(0), 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2    6[COMRAM] int 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;Total ram usage:        9 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 6
  4417 ;; This function calls:
  4418 ;;		_putch
  4419 ;; This function is called by:
  4420 ;;		_pad
  4421 ;;		_vfpfcnvrt
  4422 ;;		_fputs
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text12
  4427  003C6A                     __ptext12:
  4428                           	callstack 0
  4429  003C6A                     _fputc:
  4430                           	callstack 21
  4431  003C6A  5009               	movf	fputc@fp^0,w,c
  4432  003C6C  100A               	iorwf	(fputc@fp+1)^0,w,c
  4433  003C6E  B4D8               	btfsc	status,2,c
  4434  003C70  EF3C  F01E         	goto	u5941
  4435  003C74  EF3E  F01E         	goto	u5940
  4436  003C78                     u5941:
  4437  003C78  EF47  F01E         	goto	l6043
  4438  003C7C                     u5940:
  4439  003C7C  5009               	movf	fputc@fp^0,w,c
  4440  003C7E  100A               	iorwf	(fputc@fp+1)^0,w,c
  4441  003C80  A4D8               	btfss	status,2,c
  4442  003C82  EF45  F01E         	goto	u5951
  4443  003C86  EF47  F01E         	goto	u5950
  4444  003C8A                     u5951:
  4445  003C8A  EF4C  F01E         	goto	l6045
  4446  003C8E                     u5950:
  4447  003C8E                     l6043:
  4448  003C8E  5007               	movf	fputc@c^0,w,c
  4449  003C90  EC30  F024         	call	_putch
  4450  003C94  EF7F  F01E         	goto	l1647
  4451  003C98                     l6045:
  4452  003C98  EE20 F004          	lfsr	2,4
  4453  003C9C  5009               	movf	fputc@fp^0,w,c
  4454  003C9E  26D9               	addwf	fsr2l,f,c
  4455  003CA0  500A               	movf	(fputc@fp+1)^0,w,c
  4456  003CA2  22DA               	addwfc	fsr2h,f,c
  4457  003CA4  50DE               	movf	postinc2,w,c
  4458  003CA6  10DE               	iorwf	postinc2,w,c
  4459  003CA8  B4D8               	btfsc	status,2,c
  4460  003CAA  EF59  F01E         	goto	u5961
  4461  003CAE  EF5B  F01E         	goto	u5960
  4462  003CB2                     u5961:
  4463  003CB2  EF76  F01E         	goto	l6049
  4464  003CB6                     u5960:
  4465  003CB6  EE20 F004          	lfsr	2,4
  4466  003CBA  5009               	movf	fputc@fp^0,w,c
  4467  003CBC  26D9               	addwf	fsr2l,f,c
  4468  003CBE  500A               	movf	(fputc@fp+1)^0,w,c
  4469  003CC0  22DA               	addwfc	fsr2h,f,c
  4470  003CC2  EE10 F002          	lfsr	1,2
  4471  003CC6  5009               	movf	fputc@fp^0,w,c
  4472  003CC8  26E1               	addwf	fsr1l,f,c
  4473  003CCA  500A               	movf	(fputc@fp+1)^0,w,c
  4474  003CCC  22E2               	addwfc	fsr1h,f,c
  4475  003CCE  50DE               	movf	postinc2,w,c
  4476  003CD0  5CE6               	subwf	postinc1,w,c
  4477  003CD2  50E6               	movf	postinc1,w,c
  4478  003CD4  0A80               	xorlw	128
  4479  003CD6  6E0F               	movwf	(??_fputc+4)^0,c
  4480  003CD8  50DE               	movf	postinc2,w,c
  4481  003CDA  0A80               	xorlw	128
  4482  003CDC  580F               	subwfb	(??_fputc+4)^0,w,c
  4483  003CDE  B0D8               	btfsc	status,0,c
  4484  003CE0  EF74  F01E         	goto	u5971
  4485  003CE4  EF76  F01E         	goto	u5970
  4486  003CE8                     u5971:
  4487  003CE8  EF7F  F01E         	goto	l1647
  4488  003CEC                     u5970:
  4489  003CEC                     l6049:
  4490  003CEC  EE20 F002          	lfsr	2,2
  4491  003CF0  5009               	movf	fputc@fp^0,w,c
  4492  003CF2  26D9               	addwf	fsr2l,f,c
  4493  003CF4  500A               	movf	(fputc@fp+1)^0,w,c
  4494  003CF6  22DA               	addwfc	fsr2h,f,c
  4495  003CF8  2ADE               	incf	postinc2,f,c
  4496  003CFA  0E00               	movlw	0
  4497  003CFC  22DD               	addwfc	postdec2,f,c
  4498  003CFE                     l1647:
  4499  003CFE  0012               	return		;funcret
  4500  003D00                     __end_of_fputc:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _putch *****************
  4504 ;; Defined at:
  4505 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  txData          1    wreg     unsigned char 
  4508 ;; Auto vars:     Size  Location     Type
  4509 ;;  txData          1    5[COMRAM] unsigned char 
  4510 ;; Return value:  Size  Location     Type
  4511 ;;                  1    wreg      void 
  4512 ;; Registers used:
  4513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4514 ;; Tracked objects:
  4515 ;;		On entry : 0/0
  4516 ;;		On exit  : 0/0
  4517 ;;		Unchanged: 0/0
  4518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;Total ram usage:        1 bytes
  4524 ;; Hardware stack levels used: 1
  4525 ;; Hardware stack levels required when called: 5
  4526 ;; This function calls:
  4527 ;;		_EUSART_Write
  4528 ;; This function is called by:
  4529 ;;		_fputc
  4530 ;; This function uses a non-reentrant model
  4531 ;;
  4532                           
  4533                           	psect	text13
  4534  004860                     __ptext13:
  4535                           	callstack 0
  4536  004860                     _putch:
  4537                           	callstack 21
  4538                           
  4539                           ;incstack = 0
  4540                           ;putch@txData stored from wreg
  4541  004860  6E06               	movwf	putch@txData^0,c
  4542  004862                     
  4543                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4544  004862  5006               	movf	putch@txData^0,w,c
  4545  004864  EC24  F021         	call	_EUSART_Write
  4546  004868  0012               	return		;funcret
  4547  00486A                     __end_of_putch:
  4548                           	callstack 0
  4549                           
  4550 ;; *************** function _EUSART_Write *****************
  4551 ;; Defined at:
  4552 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  txData          1    wreg     unsigned char 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  txData          1    4[COMRAM] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;Total ram usage:        1 bytes
  4571 ;; Hardware stack levels used: 1
  4572 ;; Hardware stack levels required when called: 4
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_putch
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text14
  4581  004248                     __ptext14:
  4582                           	callstack 0
  4583  004248                     _EUSART_Write:
  4584                           	callstack 21
  4585                           
  4586                           ;incstack = 0
  4587                           ;EUSART_Write@txData stored from wreg
  4588  004248  6E05               	movwf	EUSART_Write@txData^0,c
  4589  00424A                     l6021:
  4590                           
  4591                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4592  00424A  0100               	movlb	0	; () banked
  4593  00424C  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4594  00424E  B4D8               	btfsc	status,2,c
  4595  004250  EF2C  F021         	goto	u5911
  4596  004254  EF2E  F021         	goto	u5910
  4597  004258                     u5911:
  4598  004258  EF25  F021         	goto	l6021
  4599  00425C                     u5910:
  4600  00425C                     
  4601                           ; BSR set to: 0
  4602                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4603  00425C  B89D               	btfsc	157,4,c	;volatile
  4604  00425E  EF33  F021         	goto	u5921
  4605  004262  EF35  F021         	goto	u5920
  4606  004266                     u5921:
  4607  004266  EF39  F021         	goto	l595
  4608  00426A                     u5920:
  4609  00426A                     
  4610                           ; BSR set to: 0
  4611                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4612  00426A  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4613                           
  4614                           ;mcc_generated_files/eusart.c: 182:     }
  4615  00426E  EF4E  F021         	goto	l6035
  4616  004272                     l595:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  4620  004272  989D               	bcf	157,4,c	;volatile
  4621  004274                     
  4622                           ; BSR set to: 0
  4623                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4624  004274  0E94               	movlw	low _eusartTxBuffer
  4625  004276  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  4626  004278  6ED9               	movwf	fsr2l,c
  4627  00427A  6ADA               	clrf	fsr2h,c
  4628  00427C  0E00               	movlw	high _eusartTxBuffer
  4629  00427E  22DA               	addwfc	fsr2h,f,c
  4630  004280  C005  FFDF         	movff	EUSART_Write@txData,indf2
  4631  004284                     
  4632                           ; BSR set to: 0
  4633  004284  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  4634  004286                     
  4635                           ; BSR set to: 0
  4636                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4637  004286  0E07               	movlw	7
  4638  004288  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  4639  00428A  EF49  F021         	goto	u5931
  4640  00428E  EF4B  F021         	goto	u5930
  4641  004292                     u5931:
  4642  004292  EF4D  F021         	goto	l6033
  4643  004296                     u5930:
  4644  004296                     
  4645                           ; BSR set to: 0
  4646                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4647  004296  0E00               	movlw	0
  4648  004298  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  4649  00429A                     l6033:
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4653  00429A  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  4654  00429C                     l6035:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  4658  00429C  889D               	bsf	157,4,c	;volatile
  4659  00429E                     
  4660                           ; BSR set to: 0
  4661  00429E  0012               	return		;funcret
  4662  0042A0                     __end_of_EUSART_Write:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _floorf *****************
  4666 ;; Defined at:
  4667 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  x               4   29[COMRAM] float 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  u               4   45[COMRAM] struct .
  4672 ;;  m               4   39[COMRAM] unsigned long 
  4673 ;;  e               2   43[COMRAM] int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  4   29[COMRAM] float 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;Total ram usage:       20 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 4
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_efgtoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text15
  4698  002E18                     __ptext15:
  4699                           	callstack 0
  4700  002E18                     _floorf:
  4701                           	callstack 22
  4702  002E18  C09C  F02E         	movff	floorf@F527,floorf@u
  4703  002E1C  C09D  F02F         	movff	floorf@F527+1,floorf@u+1
  4704  002E20  C09E  F030         	movff	floorf@F527+2,floorf@u+2
  4705  002E24  C09F  F031         	movff	floorf@F527+3,floorf@u+3
  4706  002E28  C01E  F02E         	movff	floorf@x,floorf@u
  4707  002E2C  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4708  002E30  C020  F030         	movff	floorf@x+2,floorf@u+2
  4709  002E34  C021  F031         	movff	floorf@x+3,floorf@u+3
  4710  002E38  0E81               	movlw	129
  4711  002E3A  6E22               	movwf	??_floorf^0,c
  4712  002E3C  0EFF               	movlw	255
  4713  002E3E  6E23               	movwf	(??_floorf+1)^0,c
  4714  002E40  C02E  F024         	movff	floorf@u,??_floorf+2
  4715  002E44  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4716  002E48  C030  F026         	movff	floorf@u+2,??_floorf+4
  4717  002E4C  C031  F027         	movff	floorf@u+3,??_floorf+5
  4718  002E50  0E18               	movlw	24
  4719  002E52  EF30  F017         	goto	u7270
  4720  002E56                     u7275:
  4721  002E56  90D8               	bcf	status,0,c
  4722  002E58  3227               	rrcf	(??_floorf+5)^0,f,c
  4723  002E5A  3226               	rrcf	(??_floorf+4)^0,f,c
  4724  002E5C  3225               	rrcf	(??_floorf+3)^0,f,c
  4725  002E5E  3224               	rrcf	(??_floorf+2)^0,f,c
  4726  002E60                     u7270:
  4727  002E60  2EE8               	decfsz	wreg,f,c
  4728  002E62  EF2B  F017         	goto	u7275
  4729  002E66  5024               	movf	(??_floorf+2)^0,w,c
  4730  002E68  2422               	addwf	??_floorf^0,w,c
  4731  002E6A  6E2C               	movwf	floorf@e^0,c
  4732  002E6C  0E00               	movlw	0
  4733  002E6E  2023               	addwfc	(??_floorf+1)^0,w,c
  4734  002E70  6E2D               	movwf	(floorf@e+1)^0,c
  4735  002E72  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4736  002E74  EF45  F017         	goto	u7281
  4737  002E78  502D               	movf	(floorf@e+1)^0,w,c
  4738  002E7A  E109               	bnz	u7280
  4739  002E7C  0E17               	movlw	23
  4740  002E7E  5C2C               	subwf	floorf@e^0,w,c
  4741  002E80  A0D8               	btfss	status,0,c
  4742  002E82  EF45  F017         	goto	u7281
  4743  002E86  EF47  F017         	goto	u7280
  4744  002E8A                     u7281:
  4745  002E8A  EF51  F017         	goto	l6791
  4746  002E8E                     u7280:
  4747  002E8E                     l6789:
  4748  002E8E  C01E  F01E         	movff	floorf@x,?_floorf
  4749  002E92  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4750  002E96  C020  F020         	movff	floorf@x+2,?_floorf+2
  4751  002E9A  C021  F021         	movff	floorf@x+3,?_floorf+3
  4752  002E9E  EF14  F018         	goto	l1608
  4753  002EA2                     l6791:
  4754  002EA2  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4755  002EA4  EF56  F017         	goto	u7291
  4756  002EA8  EF58  F017         	goto	u7290
  4757  002EAC                     u7291:
  4758  002EAC  EFC8  F017         	goto	l6801
  4759  002EB0                     u7290:
  4760  002EB0  C02C  F022         	movff	floorf@e,??_floorf
  4761  002EB4  0EFF               	movlw	255
  4762  002EB6  6E23               	movwf	(??_floorf+1)^0,c
  4763  002EB8  0EFF               	movlw	255
  4764  002EBA  6E24               	movwf	(??_floorf+2)^0,c
  4765  002EBC  0E7F               	movlw	127
  4766  002EBE  6E25               	movwf	(??_floorf+3)^0,c
  4767  002EC0  0E00               	movlw	0
  4768  002EC2  6E26               	movwf	(??_floorf+4)^0,c
  4769  002EC4                     u7305:
  4770  002EC4  6622               	tstfsz	??_floorf^0,c
  4771  002EC6  EF67  F017         	goto	u7306
  4772  002ECA  EF6F  F017         	goto	u7307
  4773  002ECE                     u7306:
  4774  002ECE  3426               	rlcf	(??_floorf+4)^0,w,c
  4775  002ED0  3226               	rrcf	(??_floorf+4)^0,f,c
  4776  002ED2  3225               	rrcf	(??_floorf+3)^0,f,c
  4777  002ED4  3224               	rrcf	(??_floorf+2)^0,f,c
  4778  002ED6  3223               	rrcf	(??_floorf+1)^0,f,c
  4779  002ED8  2E22               	decfsz	??_floorf^0,f,c
  4780  002EDA  EF62  F017         	goto	u7305
  4781  002EDE                     u7307:
  4782  002EDE  C023  F028         	movff	??_floorf+1,floorf@m
  4783  002EE2  C024  F029         	movff	??_floorf+2,floorf@m+1
  4784  002EE6  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4785  002EEA  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4786  002EEE  5028               	movf	floorf@m^0,w,c
  4787  002EF0  142E               	andwf	floorf@u^0,w,c
  4788  002EF2  6E22               	movwf	??_floorf^0,c
  4789  002EF4  5029               	movf	(floorf@m+1)^0,w,c
  4790  002EF6  142F               	andwf	(floorf@u+1)^0,w,c
  4791  002EF8  6E23               	movwf	(??_floorf+1)^0,c
  4792  002EFA  502A               	movf	(floorf@m+2)^0,w,c
  4793  002EFC  1430               	andwf	(floorf@u+2)^0,w,c
  4794  002EFE  6E24               	movwf	(??_floorf+2)^0,c
  4795  002F00  502B               	movf	(floorf@m+3)^0,w,c
  4796  002F02  1431               	andwf	(floorf@u+3)^0,w,c
  4797  002F04  6E25               	movwf	(??_floorf+3)^0,c
  4798  002F06  5022               	movf	??_floorf^0,w,c
  4799  002F08  1023               	iorwf	(??_floorf+1)^0,w,c
  4800  002F0A  1024               	iorwf	(??_floorf+2)^0,w,c
  4801  002F0C  1025               	iorwf	(??_floorf+3)^0,w,c
  4802  002F0E  A4D8               	btfss	status,2,c
  4803  002F10  EF8C  F017         	goto	u7311
  4804  002F14  EF8E  F017         	goto	u7310
  4805  002F18                     u7311:
  4806  002F18  EF90  F017         	goto	l6797
  4807  002F1C                     u7310:
  4808  002F1C  EF47  F017         	goto	l6789
  4809  002F20                     l6797:
  4810  002F20  C02E  F022         	movff	floorf@u,??_floorf
  4811  002F24  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4812  002F28  C030  F024         	movff	floorf@u+2,??_floorf+2
  4813  002F2C  C031  F025         	movff	floorf@u+3,??_floorf+3
  4814  002F30  0E20               	movlw	32
  4815  002F32  EFA0  F017         	goto	u7320
  4816  002F36                     u7325:
  4817  002F36  90D8               	bcf	status,0,c
  4818  002F38  3225               	rrcf	(??_floorf+3)^0,f,c
  4819  002F3A  3224               	rrcf	(??_floorf+2)^0,f,c
  4820  002F3C  3223               	rrcf	(??_floorf+1)^0,f,c
  4821  002F3E  3222               	rrcf	??_floorf^0,f,c
  4822  002F40                     u7320:
  4823  002F40  2EE8               	decfsz	wreg,f,c
  4824  002F42  EF9B  F017         	goto	u7325
  4825  002F46  5022               	movf	??_floorf^0,w,c
  4826  002F48  1023               	iorwf	(??_floorf+1)^0,w,c
  4827  002F4A  1024               	iorwf	(??_floorf+2)^0,w,c
  4828  002F4C  1025               	iorwf	(??_floorf+3)^0,w,c
  4829  002F4E  B4D8               	btfsc	status,2,c
  4830  002F50  EFAC  F017         	goto	u7331
  4831  002F54  EFAE  F017         	goto	u7330
  4832  002F58                     u7331:
  4833  002F58  EFB6  F017         	goto	l1611
  4834  002F5C                     u7330:
  4835  002F5C  5028               	movf	floorf@m^0,w,c
  4836  002F5E  262E               	addwf	floorf@u^0,f,c
  4837  002F60  5029               	movf	(floorf@m+1)^0,w,c
  4838  002F62  222F               	addwfc	(floorf@u+1)^0,f,c
  4839  002F64  502A               	movf	(floorf@m+2)^0,w,c
  4840  002F66  2230               	addwfc	(floorf@u+2)^0,f,c
  4841  002F68  502B               	movf	(floorf@m+3)^0,w,c
  4842  002F6A  2231               	addwfc	(floorf@u+3)^0,f,c
  4843  002F6C                     l1611:
  4844  002F6C  1C28               	comf	floorf@m^0,w,c
  4845  002F6E  6E22               	movwf	??_floorf^0,c
  4846  002F70  1C29               	comf	(floorf@m+1)^0,w,c
  4847  002F72  6E23               	movwf	(??_floorf+1)^0,c
  4848  002F74  1C2A               	comf	(floorf@m+2)^0,w,c
  4849  002F76  6E24               	movwf	(??_floorf+2)^0,c
  4850  002F78  1C2B               	comf	(floorf@m+3)^0,w,c
  4851  002F7A  6E25               	movwf	(??_floorf+3)^0,c
  4852  002F7C  5022               	movf	??_floorf^0,w,c
  4853  002F7E  162E               	andwf	floorf@u^0,f,c
  4854  002F80  5023               	movf	(??_floorf+1)^0,w,c
  4855  002F82  162F               	andwf	(floorf@u+1)^0,f,c
  4856  002F84  5024               	movf	(??_floorf+2)^0,w,c
  4857  002F86  1630               	andwf	(floorf@u+2)^0,f,c
  4858  002F88  5025               	movf	(??_floorf+3)^0,w,c
  4859  002F8A  1631               	andwf	(floorf@u+3)^0,f,c
  4860  002F8C  EF0C  F018         	goto	l6809
  4861  002F90                     l6801:
  4862  002F90  C02E  F022         	movff	floorf@u,??_floorf
  4863  002F94  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4864  002F98  C030  F024         	movff	floorf@u+2,??_floorf+2
  4865  002F9C  C031  F025         	movff	floorf@u+3,??_floorf+3
  4866  002FA0  0E20               	movlw	32
  4867  002FA2  EFD8  F017         	goto	u7340
  4868  002FA6                     u7345:
  4869  002FA6  90D8               	bcf	status,0,c
  4870  002FA8  3225               	rrcf	(??_floorf+3)^0,f,c
  4871  002FAA  3224               	rrcf	(??_floorf+2)^0,f,c
  4872  002FAC  3223               	rrcf	(??_floorf+1)^0,f,c
  4873  002FAE  3222               	rrcf	??_floorf^0,f,c
  4874  002FB0                     u7340:
  4875  002FB0  2EE8               	decfsz	wreg,f,c
  4876  002FB2  EFD3  F017         	goto	u7345
  4877  002FB6  5022               	movf	??_floorf^0,w,c
  4878  002FB8  1023               	iorwf	(??_floorf+1)^0,w,c
  4879  002FBA  1024               	iorwf	(??_floorf+2)^0,w,c
  4880  002FBC  1025               	iorwf	(??_floorf+3)^0,w,c
  4881  002FBE  A4D8               	btfss	status,2,c
  4882  002FC0  EFE4  F017         	goto	u7351
  4883  002FC4  EFE6  F017         	goto	u7350
  4884  002FC8                     u7351:
  4885  002FC8  EFF0  F017         	goto	l6805
  4886  002FCC                     u7350:
  4887  002FCC  0E00               	movlw	0
  4888  002FCE  6E2E               	movwf	floorf@u^0,c
  4889  002FD0  0E00               	movlw	0
  4890  002FD2  6E2F               	movwf	(floorf@u+1)^0,c
  4891  002FD4  0E00               	movlw	0
  4892  002FD6  6E30               	movwf	(floorf@u+2)^0,c
  4893  002FD8  0E00               	movlw	0
  4894  002FDA  6E31               	movwf	(floorf@u+3)^0,c
  4895  002FDC  EF0C  F018         	goto	l6809
  4896  002FE0                     l6805:
  4897  002FE0  90D8               	bcf	status,0,c
  4898  002FE2  342E               	rlcf	floorf@u^0,w,c
  4899  002FE4  6E22               	movwf	??_floorf^0,c
  4900  002FE6  342F               	rlcf	(floorf@u+1)^0,w,c
  4901  002FE8  6E23               	movwf	(??_floorf+1)^0,c
  4902  002FEA  3430               	rlcf	(floorf@u+2)^0,w,c
  4903  002FEC  6E24               	movwf	(??_floorf+2)^0,c
  4904  002FEE  3431               	rlcf	(floorf@u+3)^0,w,c
  4905  002FF0  6E25               	movwf	(??_floorf+3)^0,c
  4906  002FF2  5022               	movf	??_floorf^0,w,c
  4907  002FF4  1023               	iorwf	(??_floorf+1)^0,w,c
  4908  002FF6  1024               	iorwf	(??_floorf+2)^0,w,c
  4909  002FF8  1025               	iorwf	(??_floorf+3)^0,w,c
  4910  002FFA  B4D8               	btfsc	status,2,c
  4911  002FFC  EF02  F018         	goto	u7361
  4912  003000  EF04  F018         	goto	u7360
  4913  003004                     u7361:
  4914  003004  EF0C  F018         	goto	l6809
  4915  003008                     u7360:
  4916  003008  0E00               	movlw	0
  4917  00300A  6E2E               	movwf	floorf@u^0,c
  4918  00300C  0E00               	movlw	0
  4919  00300E  6E2F               	movwf	(floorf@u+1)^0,c
  4920  003010  0E80               	movlw	128
  4921  003012  6E30               	movwf	(floorf@u+2)^0,c
  4922  003014  0EBF               	movlw	191
  4923  003016  6E31               	movwf	(floorf@u+3)^0,c
  4924  003018                     l6809:
  4925  003018  C02E  F01E         	movff	floorf@u,?_floorf
  4926  00301C  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4927  003020  C030  F020         	movff	floorf@u+2,?_floorf+2
  4928  003024  C031  F021         	movff	floorf@u+3,?_floorf+3
  4929  003028                     l1608:
  4930  003028  0012               	return		;funcret
  4931  00302A                     __end_of_floorf:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function ___fpclassifyf *****************
  4935 ;; Defined at:
  4936 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  x               4    4[COMRAM] float 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  u               4   14[COMRAM] struct .
  4941 ;;  e               2   12[COMRAM] int 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  2    4[COMRAM] int 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;Total ram usage:       14 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 4
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_efgtoa
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text16
  4966  003582                     __ptext16:
  4967                           	callstack 0
  4968  003582                     ___fpclassifyf:
  4969                           	callstack 22
  4970  003582  C0A0  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4971  003586  C0A1  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4972  00358A  C0A2  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4973  00358E  C0A3  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4974  003592  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4975  003596  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4976  00359A  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4977  00359E  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4978  0035A2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4979  0035A6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4980  0035AA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4981  0035AE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4982  0035B2  0E18               	movlw	24
  4983  0035B4  EFE1  F01A         	goto	u7150
  4984  0035B8                     u7155:
  4985  0035B8  90D8               	bcf	status,0,c
  4986  0035BA  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4987  0035BC  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4988  0035BE  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4989  0035C0  3209               	rrcf	??___fpclassifyf^0,f,c
  4990  0035C2                     u7150:
  4991  0035C2  2EE8               	decfsz	wreg,f,c
  4992  0035C4  EFDC  F01A         	goto	u7155
  4993  0035C8  5009               	movf	??___fpclassifyf^0,w,c
  4994  0035CA  6E0D               	movwf	___fpclassifyf@e^0,c
  4995  0035CC  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4996  0035CE  500D               	movf	___fpclassifyf@e^0,w,c
  4997  0035D0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4998  0035D2  A4D8               	btfss	status,2,c
  4999  0035D4  EFEE  F01A         	goto	u7161
  5000  0035D8  EFF0  F01A         	goto	u7160
  5001  0035DC                     u7161:
  5002  0035DC  EF10  F01B         	goto	l6761
  5003  0035E0                     u7160:
  5004  0035E0  90D8               	bcf	status,0,c
  5005  0035E2  340F               	rlcf	___fpclassifyf@u^0,w,c
  5006  0035E4  6E09               	movwf	??___fpclassifyf^0,c
  5007  0035E6  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5008  0035E8  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5009  0035EA  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5010  0035EC  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5011  0035EE  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5012  0035F0  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5013  0035F2  5009               	movf	??___fpclassifyf^0,w,c
  5014  0035F4  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5015  0035F6  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5016  0035F8  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5017  0035FA  A4D8               	btfss	status,2,c
  5018  0035FC  EF02  F01B         	goto	u7171
  5019  003600  EF04  F01B         	goto	u7170
  5020  003604                     u7171:
  5021  003604  EF0A  F01B         	goto	l6757
  5022  003608                     u7170:
  5023  003608  0E00               	movlw	0
  5024  00360A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5025  00360C  0E02               	movlw	2
  5026  00360E  6E05               	movwf	?___fpclassifyf^0,c
  5027  003610  EF3F  F01B         	goto	l1570
  5028  003614                     l6757:
  5029  003614  0E00               	movlw	0
  5030  003616  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5031  003618  0E03               	movlw	3
  5032  00361A  6E05               	movwf	?___fpclassifyf^0,c
  5033  00361C  EF3F  F01B         	goto	l1570
  5034  003620                     l6761:
  5035  003620  280D               	incf	___fpclassifyf@e^0,w,c
  5036  003622  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5037  003624  A4D8               	btfss	status,2,c
  5038  003626  EF17  F01B         	goto	u7181
  5039  00362A  EF19  F01B         	goto	u7180
  5040  00362E                     u7181:
  5041  00362E  EF3B  F01B         	goto	l6767
  5042  003632                     u7180:
  5043  003632  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5044  003636  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5045  00363A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5046  00363E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5047  003642  0E09               	movlw	9
  5048  003644                     u7195:
  5049  003644  90D8               	bcf	status,0,c
  5050  003646  3609               	rlcf	??___fpclassifyf^0,f,c
  5051  003648  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5052  00364A  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5053  00364C  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5054  00364E  2EE8               	decfsz	wreg,f,c
  5055  003650  EF22  F01B         	goto	u7195
  5056  003654  5009               	movf	??___fpclassifyf^0,w,c
  5057  003656  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5058  003658  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5059  00365A  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5060  00365C  B4D8               	btfsc	status,2,c
  5061  00365E  EF33  F01B         	goto	u7201
  5062  003662  EF36  F01B         	goto	u7200
  5063  003666                     u7201:
  5064  003666  0E01               	movlw	1
  5065  003668  EF37  F01B         	goto	u7210
  5066  00366C                     u7200:
  5067  00366C  0E00               	movlw	0
  5068  00366E                     u7210:
  5069  00366E  6E05               	movwf	?___fpclassifyf^0,c
  5070  003670  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5071  003672  EF3F  F01B         	goto	l1570
  5072  003676                     l6767:
  5073  003676  0E00               	movlw	0
  5074  003678  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5075  00367A  0E04               	movlw	4
  5076  00367C  6E05               	movwf	?___fpclassifyf^0,c
  5077  00367E                     l1570:
  5078  00367E  0012               	return		;funcret
  5079  003680                     __end_of___fpclassifyf:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function ___fltol *****************
  5083 ;; Defined at:
  5084 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  f1              4    4[COMRAM] int 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  exp1            1   13[COMRAM] unsigned char 
  5089 ;;  sign1           1   12[COMRAM] unsigned char 
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  4    4[COMRAM] long 
  5092 ;; Registers used:
  5093 ;;		wreg, status,2, status,0
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;Total ram usage:       10 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; Hardware stack levels required when called: 4
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		_efgtoa
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text17
  5114  003378                     __ptext17:
  5115                           	callstack 0
  5116  003378                     ___fltol:
  5117                           	callstack 22
  5118  003378  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5119  00337A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5120  00337C  6E0E               	movwf	___fltol@exp1^0,c
  5121  00337E  500E               	movf	___fltol@exp1^0,w,c
  5122  003380  A4D8               	btfss	status,2,c
  5123  003382  EFC5  F019         	goto	u7041
  5124  003386  EFC7  F019         	goto	u7040
  5125  00338A                     u7041:
  5126  00338A  EFD1  F019         	goto	l6689
  5127  00338E                     u7040:
  5128  00338E                     l6685:
  5129  00338E  0E00               	movlw	0
  5130  003390  6E05               	movwf	?___fltol^0,c
  5131  003392  0E00               	movlw	0
  5132  003394  6E06               	movwf	(?___fltol+1)^0,c
  5133  003396  0E00               	movlw	0
  5134  003398  6E07               	movwf	(?___fltol+2)^0,c
  5135  00339A  0E00               	movlw	0
  5136  00339C  6E08               	movwf	(?___fltol+3)^0,c
  5137  00339E  EF3E  F01A         	goto	l1009
  5138  0033A2                     l6689:
  5139  0033A2  C005  F009         	movff	___fltol@f1,??___fltol
  5140  0033A6  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5141  0033AA  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5142  0033AE  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5143  0033B2  0E20               	movlw	32
  5144  0033B4  EFE1  F019         	goto	u7050
  5145  0033B8                     u7055:
  5146  0033B8  90D8               	bcf	status,0,c
  5147  0033BA  320C               	rrcf	(??___fltol+3)^0,f,c
  5148  0033BC  320B               	rrcf	(??___fltol+2)^0,f,c
  5149  0033BE  320A               	rrcf	(??___fltol+1)^0,f,c
  5150  0033C0  3209               	rrcf	??___fltol^0,f,c
  5151  0033C2                     u7050:
  5152  0033C2  2EE8               	decfsz	wreg,f,c
  5153  0033C4  EFDC  F019         	goto	u7055
  5154  0033C8  5009               	movf	??___fltol^0,w,c
  5155  0033CA  6E0D               	movwf	___fltol@sign1^0,c
  5156  0033CC  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5157  0033CE  0EFF               	movlw	255
  5158  0033D0  1605               	andwf	___fltol@f1^0,f,c
  5159  0033D2  0EFF               	movlw	255
  5160  0033D4  1606               	andwf	(___fltol@f1+1)^0,f,c
  5161  0033D6  0EFF               	movlw	255
  5162  0033D8  1607               	andwf	(___fltol@f1+2)^0,f,c
  5163  0033DA  0E00               	movlw	0
  5164  0033DC  1608               	andwf	(___fltol@f1+3)^0,f,c
  5165  0033DE  0E96               	movlw	150
  5166  0033E0  5E0E               	subwf	___fltol@exp1^0,f,c
  5167  0033E2  BE0E               	btfsc	___fltol@exp1^0,7,c
  5168  0033E4  EFF8  F019         	goto	u7060
  5169  0033E8  EFF6  F019         	goto	u7061
  5170  0033EC                     u7061:
  5171  0033EC  EF0E  F01A         	goto	l6709
  5172  0033F0                     u7060:
  5173  0033F0  500E               	movf	___fltol@exp1^0,w,c
  5174  0033F2  0A80               	xorlw	128
  5175  0033F4  0F97               	addlw	151
  5176  0033F6  B0D8               	btfsc	status,0,c
  5177  0033F8  EF00  F01A         	goto	u7071
  5178  0033FC  EF02  F01A         	goto	u7070
  5179  003400                     u7071:
  5180  003400  EF04  F01A         	goto	l6705
  5181  003404                     u7070:
  5182  003404  EFC7  F019         	goto	l6685
  5183  003408                     l6705:
  5184  003408  90D8               	bcf	status,0,c
  5185  00340A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5186  00340C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5187  00340E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5188  003410  3205               	rrcf	___fltol@f1^0,f,c
  5189  003412  3E0E               	incfsz	___fltol@exp1^0,f,c
  5190  003414  EF04  F01A         	goto	l6705
  5191  003418  EF26  F01A         	goto	l6719
  5192  00341C                     l6709:
  5193  00341C  0E1F               	movlw	31
  5194  00341E  640E               	cpfsgt	___fltol@exp1^0,c
  5195  003420  EF14  F01A         	goto	u7081
  5196  003424  EF16  F01A         	goto	u7080
  5197  003428                     u7081:
  5198  003428  EF1E  F01A         	goto	l6717
  5199  00342C                     u7080:
  5200  00342C  EFC7  F019         	goto	l6685
  5201  003430                     l6715:
  5202  003430  90D8               	bcf	status,0,c
  5203  003432  3605               	rlcf	___fltol@f1^0,f,c
  5204  003434  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5205  003436  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5206  003438  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5207  00343A  060E               	decf	___fltol@exp1^0,f,c
  5208  00343C                     l6717:
  5209  00343C  500E               	movf	___fltol@exp1^0,w,c
  5210  00343E  A4D8               	btfss	status,2,c
  5211  003440  EF24  F01A         	goto	u7091
  5212  003444  EF26  F01A         	goto	u7090
  5213  003448                     u7091:
  5214  003448  EF18  F01A         	goto	l6715
  5215  00344C                     u7090:
  5216  00344C                     l6719:
  5217  00344C  500D               	movf	___fltol@sign1^0,w,c
  5218  00344E  B4D8               	btfsc	status,2,c
  5219  003450  EF2C  F01A         	goto	u7101
  5220  003454  EF2E  F01A         	goto	u7100
  5221  003458                     u7101:
  5222  003458  EF36  F01A         	goto	l6723
  5223  00345C                     u7100:
  5224  00345C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5225  00345E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5226  003460  1E06               	comf	(___fltol@f1+1)^0,f,c
  5227  003462  6C05               	negf	___fltol@f1^0,c
  5228  003464  0E00               	movlw	0
  5229  003466  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5230  003468  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5231  00346A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5232  00346C                     l6723:
  5233  00346C  C005  F005         	movff	___fltol@f1,?___fltol
  5234  003470  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5235  003474  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5236  003478  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5237  00347C                     l1009:
  5238  00347C  0012               	return		;funcret
  5239  00347E                     __end_of___fltol:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function ___flsub *****************
  5243 ;; Defined at:
  5244 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  b               4   29[COMRAM] long 
  5247 ;;  a               4   33[COMRAM] long 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  4   29[COMRAM] long 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2, status,0, cstack
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5259 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;Total ram usage:        8 bytes
  5264 ;; Hardware stack levels used: 1
  5265 ;; Hardware stack levels required when called: 5
  5266 ;; This function calls:
  5267 ;;		___fladd
  5268 ;; This function is called by:
  5269 ;;		_efgtoa
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text18
  5274  0042F2                     __ptext18:
  5275                           	callstack 0
  5276  0042F2                     ___flsub:
  5277                           	callstack 21
  5278  0042F2  0E00               	movlw	0
  5279  0042F4  1A22               	xorwf	___flsub@a^0,f,c
  5280  0042F6  0E00               	movlw	0
  5281  0042F8  1A23               	xorwf	(___flsub@a+1)^0,f,c
  5282  0042FA  0E00               	movlw	0
  5283  0042FC  1A24               	xorwf	(___flsub@a+2)^0,f,c
  5284  0042FE  0E80               	movlw	128
  5285  004300  1A25               	xorwf	(___flsub@a+3)^0,f,c
  5286  004302  C01E  F005         	movff	___flsub@b,___fladd@b
  5287  004306  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  5288  00430A  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  5289  00430E  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  5290  004312  C022  F009         	movff	___flsub@a,___fladd@a
  5291  004316  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  5292  00431A  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  5293  00431E  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  5294  004322  EC7A  F00E         	call	___fladd	;wreg free
  5295  004326  C005  F01E         	movff	?___fladd,?___flsub
  5296  00432A  C006  F01F         	movff	?___fladd+1,?___flsub+1
  5297  00432E  C007  F020         	movff	?___fladd+2,?___flsub+2
  5298  004332  C008  F021         	movff	?___fladd+3,?___flsub+3
  5299  004336  0012               	return		;funcret
  5300  004338                     __end_of___flsub:
  5301                           	callstack 0
  5302                           
  5303 ;; *************** function ___fladd *****************
  5304 ;; Defined at:
  5305 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;  b               4    4[COMRAM] long 
  5308 ;;  a               4    8[COMRAM] long 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  grs             1   19[COMRAM] unsigned char 
  5311 ;;  bexp            1   18[COMRAM] unsigned char 
  5312 ;;  aexp            1   17[COMRAM] unsigned char 
  5313 ;;  signs           1   16[COMRAM] unsigned char 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  4    4[COMRAM] unsigned char 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;Total ram usage:       16 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 4
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		___flsub
  5334 ;;		_efgtoa
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text19
  5339  001CF4                     __ptext19:
  5340                           	callstack 0
  5341  001CF4                     ___fladd:
  5342                           	callstack 21
  5343  001CF4  5008               	movf	(___fladd@b+3)^0,w,c
  5344  001CF6  0B80               	andlw	128
  5345  001CF8  6E11               	movwf	___fladd@signs^0,c
  5346  001CFA  5008               	movf	(___fladd@b+3)^0,w,c
  5347  001CFC  2408               	addwf	(___fladd@b+3)^0,w,c
  5348  001CFE  6E13               	movwf	___fladd@bexp^0,c
  5349  001D00  AE07               	btfss	(___fladd@b+2)^0,7,c
  5350  001D02  EF85  F00E         	goto	u5981
  5351  001D06  EF87  F00E         	goto	u5980
  5352  001D0A                     u5981:
  5353  001D0A  EF88  F00E         	goto	l6059
  5354  001D0E                     u5980:
  5355  001D0E  8013               	bsf	___fladd@bexp^0,0,c
  5356  001D10                     l6059:
  5357  001D10  5013               	movf	___fladd@bexp^0,w,c
  5358  001D12  B4D8               	btfsc	status,2,c
  5359  001D14  EF8E  F00E         	goto	u5991
  5360  001D18  EF90  F00E         	goto	u5990
  5361  001D1C                     u5991:
  5362  001D1C  EFA5  F00E         	goto	l6069
  5363  001D20                     u5990:
  5364  001D20  2813               	incf	___fladd@bexp^0,w,c
  5365  001D22  A4D8               	btfss	status,2,c
  5366  001D24  EF96  F00E         	goto	u6001
  5367  001D28  EF98  F00E         	goto	u6000
  5368  001D2C                     u6001:
  5369  001D2C  EFA0  F00E         	goto	l6065
  5370  001D30                     u6000:
  5371  001D30  0E00               	movlw	0
  5372  001D32  6E05               	movwf	___fladd@b^0,c
  5373  001D34  0E00               	movlw	0
  5374  001D36  6E06               	movwf	(___fladd@b+1)^0,c
  5375  001D38  0E00               	movlw	0
  5376  001D3A  6E07               	movwf	(___fladd@b+2)^0,c
  5377  001D3C  0E00               	movlw	0
  5378  001D3E  6E08               	movwf	(___fladd@b+3)^0,c
  5379  001D40                     l6065:
  5380  001D40  8E07               	bsf	(___fladd@b+2)^0,7,c
  5381  001D42  0E00               	movlw	0
  5382  001D44  6E08               	movwf	(___fladd@b+3)^0,c
  5383  001D46  EFAD  F00E         	goto	l6071
  5384  001D4A                     l6069:
  5385  001D4A  0E00               	movlw	0
  5386  001D4C  6E05               	movwf	___fladd@b^0,c
  5387  001D4E  0E00               	movlw	0
  5388  001D50  6E06               	movwf	(___fladd@b+1)^0,c
  5389  001D52  0E00               	movlw	0
  5390  001D54  6E07               	movwf	(___fladd@b+2)^0,c
  5391  001D56  0E00               	movlw	0
  5392  001D58  6E08               	movwf	(___fladd@b+3)^0,c
  5393  001D5A                     l6071:
  5394  001D5A  500C               	movf	(___fladd@a+3)^0,w,c
  5395  001D5C  0B80               	andlw	128
  5396  001D5E  6E12               	movwf	___fladd@aexp^0,c
  5397  001D60  5011               	movf	___fladd@signs^0,w,c
  5398  001D62  1812               	xorwf	___fladd@aexp^0,w,c
  5399  001D64  B4D8               	btfsc	status,2,c
  5400  001D66  EFB7  F00E         	goto	u6011
  5401  001D6A  EFB9  F00E         	goto	u6010
  5402  001D6E                     u6011:
  5403  001D6E  EFBA  F00E         	goto	l6077
  5404  001D72                     u6010:
  5405  001D72  8C11               	bsf	___fladd@signs^0,6,c
  5406  001D74                     l6077:
  5407  001D74  500C               	movf	(___fladd@a+3)^0,w,c
  5408  001D76  240C               	addwf	(___fladd@a+3)^0,w,c
  5409  001D78  6E12               	movwf	___fladd@aexp^0,c
  5410  001D7A  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5411  001D7C  EFC2  F00E         	goto	u6021
  5412  001D80  EFC4  F00E         	goto	u6020
  5413  001D84                     u6021:
  5414  001D84  EFC5  F00E         	goto	l6083
  5415  001D88                     u6020:
  5416  001D88  8012               	bsf	___fladd@aexp^0,0,c
  5417  001D8A                     l6083:
  5418  001D8A  5012               	movf	___fladd@aexp^0,w,c
  5419  001D8C  B4D8               	btfsc	status,2,c
  5420  001D8E  EFCB  F00E         	goto	u6031
  5421  001D92  EFCD  F00E         	goto	u6030
  5422  001D96                     u6031:
  5423  001D96  EFE2  F00E         	goto	l6093
  5424  001D9A                     u6030:
  5425  001D9A  2812               	incf	___fladd@aexp^0,w,c
  5426  001D9C  A4D8               	btfss	status,2,c
  5427  001D9E  EFD3  F00E         	goto	u6041
  5428  001DA2  EFD5  F00E         	goto	u6040
  5429  001DA6                     u6041:
  5430  001DA6  EFDD  F00E         	goto	l6089
  5431  001DAA                     u6040:
  5432  001DAA  0E00               	movlw	0
  5433  001DAC  6E09               	movwf	___fladd@a^0,c
  5434  001DAE  0E00               	movlw	0
  5435  001DB0  6E0A               	movwf	(___fladd@a+1)^0,c
  5436  001DB2  0E00               	movlw	0
  5437  001DB4  6E0B               	movwf	(___fladd@a+2)^0,c
  5438  001DB6  0E00               	movlw	0
  5439  001DB8  6E0C               	movwf	(___fladd@a+3)^0,c
  5440  001DBA                     l6089:
  5441  001DBA  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5442  001DBC  0E00               	movlw	0
  5443  001DBE  6E0C               	movwf	(___fladd@a+3)^0,c
  5444  001DC0  EFEA  F00E         	goto	l6095
  5445  001DC4                     l6093:
  5446  001DC4  0E00               	movlw	0
  5447  001DC6  6E09               	movwf	___fladd@a^0,c
  5448  001DC8  0E00               	movlw	0
  5449  001DCA  6E0A               	movwf	(___fladd@a+1)^0,c
  5450  001DCC  0E00               	movlw	0
  5451  001DCE  6E0B               	movwf	(___fladd@a+2)^0,c
  5452  001DD0  0E00               	movlw	0
  5453  001DD2  6E0C               	movwf	(___fladd@a+3)^0,c
  5454  001DD4                     l6095:
  5455  001DD4  5013               	movf	___fladd@bexp^0,w,c
  5456  001DD6  5C12               	subwf	___fladd@aexp^0,w,c
  5457  001DD8  B0D8               	btfsc	status,0,c
  5458  001DDA  EFF1  F00E         	goto	u6051
  5459  001DDE  EFF3  F00E         	goto	u6050
  5460  001DE2                     u6051:
  5461  001DE2  EF1A  F00F         	goto	l6131
  5462  001DE6                     u6050:
  5463  001DE6  AC11               	btfss	___fladd@signs^0,6,c
  5464  001DE8  EFF8  F00E         	goto	u6061
  5465  001DEC  EFFA  F00E         	goto	u6060
  5466  001DF0                     u6061:
  5467  001DF0  EFFC  F00E         	goto	l6101
  5468  001DF4                     u6060:
  5469  001DF4  0E80               	movlw	128
  5470  001DF6  1A11               	xorwf	___fladd@signs^0,f,c
  5471  001DF8                     l6101:
  5472  001DF8  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5473  001DFC  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5474  001E00  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5475  001E04  C005  F014         	movff	___fladd@b,___fladd@grs
  5476  001E08  C009  F005         	movff	___fladd@a,___fladd@b
  5477  001E0C  C014  F009         	movff	___fladd@grs,___fladd@a
  5478  001E10  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5479  001E14  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5480  001E18  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5481  001E1C  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5482  001E20  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5483  001E24  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5484  001E28  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5485  001E2C  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5486  001E30  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5487  001E34                     l6131:
  5488  001E34  0E00               	movlw	0
  5489  001E36  6E14               	movwf	___fladd@grs^0,c
  5490  001E38  5013               	movf	___fladd@bexp^0,w,c
  5491  001E3A  C012  F00D         	movff	___fladd@aexp,??___fladd
  5492  001E3E  6A0E               	clrf	(??___fladd+1)^0,c
  5493  001E40  5E0D               	subwf	??___fladd^0,f,c
  5494  001E42  0E00               	movlw	0
  5495  001E44  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5496  001E46  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5497  001E48  EF2F  F00F         	goto	u6071
  5498  001E4C  500E               	movf	(??___fladd+1)^0,w,c
  5499  001E4E  E109               	bnz	u6070
  5500  001E50  0E1A               	movlw	26
  5501  001E52  5C0D               	subwf	??___fladd^0,w,c
  5502  001E54  A0D8               	btfss	status,0,c
  5503  001E56  EF2F  F00F         	goto	u6071
  5504  001E5A  EF31  F00F         	goto	u6070
  5505  001E5E                     u6071:
  5506  001E5E  EF68  F00F         	goto	l1241
  5507  001E62                     u6070:
  5508  001E62  5005               	movf	___fladd@b^0,w,c
  5509  001E64  1006               	iorwf	(___fladd@b+1)^0,w,c
  5510  001E66  1007               	iorwf	(___fladd@b+2)^0,w,c
  5511  001E68  1008               	iorwf	(___fladd@b+3)^0,w,c
  5512  001E6A  A4D8               	btfss	status,2,c
  5513  001E6C  EF3A  F00F         	goto	u6081
  5514  001E70  EF3D  F00F         	goto	u6080
  5515  001E74                     u6081:
  5516  001E74  0E01               	movlw	1
  5517  001E76  EF3E  F00F         	goto	u6090
  5518  001E7A                     u6080:
  5519  001E7A  0E00               	movlw	0
  5520  001E7C                     u6090:
  5521  001E7C  6E14               	movwf	___fladd@grs^0,c
  5522  001E7E  0E00               	movlw	0
  5523  001E80  6E05               	movwf	___fladd@b^0,c
  5524  001E82  0E00               	movlw	0
  5525  001E84  6E06               	movwf	(___fladd@b+1)^0,c
  5526  001E86  0E00               	movlw	0
  5527  001E88  6E07               	movwf	(___fladd@b+2)^0,c
  5528  001E8A  0E00               	movlw	0
  5529  001E8C  6E08               	movwf	(___fladd@b+3)^0,c
  5530  001E8E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5531  001E92  EF71  F00F         	goto	l1240
  5532  001E96                     l1242:
  5533  001E96  A014               	btfss	___fladd@grs^0,0,c
  5534  001E98  EF50  F00F         	goto	u6101
  5535  001E9C  EF52  F00F         	goto	u6100
  5536  001EA0                     u6101:
  5537  001EA0  EF58  F00F         	goto	l6143
  5538  001EA4                     u6100:
  5539  001EA4  90D8               	bcf	status,0,c
  5540  001EA6  3014               	rrcf	___fladd@grs^0,w,c
  5541  001EA8  0901               	iorlw	1
  5542  001EAA  6E14               	movwf	___fladd@grs^0,c
  5543  001EAC  EF5A  F00F         	goto	l6145
  5544  001EB0                     l6143:
  5545  001EB0  90D8               	bcf	status,0,c
  5546  001EB2  3214               	rrcf	___fladd@grs^0,f,c
  5547  001EB4                     l6145:
  5548  001EB4  A005               	btfss	___fladd@b^0,0,c
  5549  001EB6  EF5F  F00F         	goto	u6111
  5550  001EBA  EF61  F00F         	goto	u6110
  5551  001EBE                     u6111:
  5552  001EBE  EF62  F00F         	goto	l6149
  5553  001EC2                     u6110:
  5554  001EC2  8E14               	bsf	___fladd@grs^0,7,c
  5555  001EC4                     l6149:
  5556  001EC4  3408               	rlcf	(___fladd@b+3)^0,w,c
  5557  001EC6  3208               	rrcf	(___fladd@b+3)^0,f,c
  5558  001EC8  3207               	rrcf	(___fladd@b+2)^0,f,c
  5559  001ECA  3206               	rrcf	(___fladd@b+1)^0,f,c
  5560  001ECC  3205               	rrcf	___fladd@b^0,f,c
  5561  001ECE  2A13               	incf	___fladd@bexp^0,f,c
  5562  001ED0                     l1241:
  5563  001ED0  5012               	movf	___fladd@aexp^0,w,c
  5564  001ED2  5C13               	subwf	___fladd@bexp^0,w,c
  5565  001ED4  A0D8               	btfss	status,0,c
  5566  001ED6  EF6F  F00F         	goto	u6121
  5567  001EDA  EF71  F00F         	goto	u6120
  5568  001EDE                     u6121:
  5569  001EDE  EF4B  F00F         	goto	l1242
  5570  001EE2                     u6120:
  5571  001EE2                     l1240:
  5572  001EE2  BC11               	btfsc	___fladd@signs^0,6,c
  5573  001EE4  EF76  F00F         	goto	u6131
  5574  001EE8  EF78  F00F         	goto	u6130
  5575  001EEC                     u6131:
  5576  001EEC  EFB8  F00F         	goto	l6177
  5577  001EF0                     u6130:
  5578  001EF0  5013               	movf	___fladd@bexp^0,w,c
  5579  001EF2  A4D8               	btfss	status,2,c
  5580  001EF4  EF7E  F00F         	goto	u6141
  5581  001EF8  EF80  F00F         	goto	u6140
  5582  001EFC                     u6141:
  5583  001EFC  EF8A  F00F         	goto	l6159
  5584  001F00                     u6140:
  5585  001F00  0E00               	movlw	0
  5586  001F02  6E05               	movwf	?___fladd^0,c
  5587  001F04  0E00               	movlw	0
  5588  001F06  6E06               	movwf	(?___fladd+1)^0,c
  5589  001F08  0E00               	movlw	0
  5590  001F0A  6E07               	movwf	(?___fladd+2)^0,c
  5591  001F0C  0E00               	movlw	0
  5592  001F0E  6E08               	movwf	(?___fladd+3)^0,c
  5593  001F10  EFD9  F010         	goto	l1249
  5594  001F14                     l6159:
  5595  001F14  5009               	movf	___fladd@a^0,w,c
  5596  001F16  2605               	addwf	___fladd@b^0,f,c
  5597  001F18  500A               	movf	(___fladd@a+1)^0,w,c
  5598  001F1A  2206               	addwfc	(___fladd@b+1)^0,f,c
  5599  001F1C  500B               	movf	(___fladd@a+2)^0,w,c
  5600  001F1E  2207               	addwfc	(___fladd@b+2)^0,f,c
  5601  001F20  500C               	movf	(___fladd@a+3)^0,w,c
  5602  001F22  2208               	addwfc	(___fladd@b+3)^0,f,c
  5603  001F24  A008               	btfss	(___fladd@b+3)^0,0,c
  5604  001F26  EF97  F00F         	goto	u6151
  5605  001F2A  EF99  F00F         	goto	u6150
  5606  001F2E                     u6151:
  5607  001F2E  EF45  F010         	goto	l6213
  5608  001F32                     u6150:
  5609  001F32  A014               	btfss	___fladd@grs^0,0,c
  5610  001F34  EF9E  F00F         	goto	u6161
  5611  001F38  EFA0  F00F         	goto	u6160
  5612  001F3C                     u6161:
  5613  001F3C  EFA6  F00F         	goto	l6167
  5614  001F40                     u6160:
  5615  001F40  90D8               	bcf	status,0,c
  5616  001F42  3014               	rrcf	___fladd@grs^0,w,c
  5617  001F44  0901               	iorlw	1
  5618  001F46  6E14               	movwf	___fladd@grs^0,c
  5619  001F48  EFA8  F00F         	goto	l6169
  5620  001F4C                     l6167:
  5621  001F4C  90D8               	bcf	status,0,c
  5622  001F4E  3214               	rrcf	___fladd@grs^0,f,c
  5623  001F50                     l6169:
  5624  001F50  A005               	btfss	___fladd@b^0,0,c
  5625  001F52  EFAD  F00F         	goto	u6171
  5626  001F56  EFAF  F00F         	goto	u6170
  5627  001F5A                     u6171:
  5628  001F5A  EFB0  F00F         	goto	l6173
  5629  001F5E                     u6170:
  5630  001F5E  8E14               	bsf	___fladd@grs^0,7,c
  5631  001F60                     l6173:
  5632  001F60  3408               	rlcf	(___fladd@b+3)^0,w,c
  5633  001F62  3208               	rrcf	(___fladd@b+3)^0,f,c
  5634  001F64  3207               	rrcf	(___fladd@b+2)^0,f,c
  5635  001F66  3206               	rrcf	(___fladd@b+1)^0,f,c
  5636  001F68  3205               	rrcf	___fladd@b^0,f,c
  5637  001F6A  2A13               	incf	___fladd@bexp^0,f,c
  5638  001F6C  EF45  F010         	goto	l6213
  5639  001F70                     l6177:
  5640  001F70  5009               	movf	___fladd@a^0,w,c
  5641  001F72  5C05               	subwf	___fladd@b^0,w,c
  5642  001F74  500A               	movf	(___fladd@a+1)^0,w,c
  5643  001F76  5806               	subwfb	(___fladd@b+1)^0,w,c
  5644  001F78  500B               	movf	(___fladd@a+2)^0,w,c
  5645  001F7A  5807               	subwfb	(___fladd@b+2)^0,w,c
  5646  001F7C  5008               	movf	(___fladd@b+3)^0,w,c
  5647  001F7E  0A80               	xorlw	128
  5648  001F80  6E0D               	movwf	??___fladd^0,c
  5649  001F82  500C               	movf	(___fladd@a+3)^0,w,c
  5650  001F84  0A80               	xorlw	128
  5651  001F86  580D               	subwfb	??___fladd^0,w,c
  5652  001F88  B0D8               	btfsc	status,0,c
  5653  001F8A  EFC9  F00F         	goto	u6181
  5654  001F8E  EFCB  F00F         	goto	u6180
  5655  001F92                     u6181:
  5656  001F92  EFF6  F00F         	goto	l6187
  5657  001F96                     u6180:
  5658  001F96  5005               	movf	___fladd@b^0,w,c
  5659  001F98  5C09               	subwf	___fladd@a^0,w,c
  5660  001F9A  6E0D               	movwf	??___fladd^0,c
  5661  001F9C  5006               	movf	(___fladd@b+1)^0,w,c
  5662  001F9E  580A               	subwfb	(___fladd@a+1)^0,w,c
  5663  001FA0  6E0E               	movwf	(??___fladd+1)^0,c
  5664  001FA2  5007               	movf	(___fladd@b+2)^0,w,c
  5665  001FA4  580B               	subwfb	(___fladd@a+2)^0,w,c
  5666  001FA6  6E0F               	movwf	(??___fladd+2)^0,c
  5667  001FA8  5008               	movf	(___fladd@b+3)^0,w,c
  5668  001FAA  580C               	subwfb	(___fladd@a+3)^0,w,c
  5669  001FAC  6E10               	movwf	(??___fladd+3)^0,c
  5670  001FAE  0EFF               	movlw	255
  5671  001FB0  240D               	addwf	??___fladd^0,w,c
  5672  001FB2  6E05               	movwf	___fladd@b^0,c
  5673  001FB4  0EFF               	movlw	255
  5674  001FB6  200E               	addwfc	(??___fladd+1)^0,w,c
  5675  001FB8  6E06               	movwf	(___fladd@b+1)^0,c
  5676  001FBA  0EFF               	movlw	255
  5677  001FBC  200F               	addwfc	(??___fladd+2)^0,w,c
  5678  001FBE  6E07               	movwf	(___fladd@b+2)^0,c
  5679  001FC0  0EFF               	movlw	255
  5680  001FC2  2010               	addwfc	(??___fladd+3)^0,w,c
  5681  001FC4  6E08               	movwf	(___fladd@b+3)^0,c
  5682  001FC6  0E80               	movlw	128
  5683  001FC8  1A11               	xorwf	___fladd@signs^0,f,c
  5684  001FCA  6C14               	negf	___fladd@grs^0,c
  5685  001FCC  5014               	movf	___fladd@grs^0,w,c
  5686  001FCE  A4D8               	btfss	status,2,c
  5687  001FD0  EFEC  F00F         	goto	u6191
  5688  001FD4  EFEE  F00F         	goto	u6190
  5689  001FD8                     u6191:
  5690  001FD8  EFFE  F00F         	goto	l1257
  5691  001FDC                     u6190:
  5692  001FDC  0E01               	movlw	1
  5693  001FDE  2605               	addwf	___fladd@b^0,f,c
  5694  001FE0  0E00               	movlw	0
  5695  001FE2  2206               	addwfc	(___fladd@b+1)^0,f,c
  5696  001FE4  2207               	addwfc	(___fladd@b+2)^0,f,c
  5697  001FE6  2208               	addwfc	(___fladd@b+3)^0,f,c
  5698  001FE8  EFFE  F00F         	goto	l1257
  5699  001FEC                     l6187:
  5700  001FEC  5009               	movf	___fladd@a^0,w,c
  5701  001FEE  5E05               	subwf	___fladd@b^0,f,c
  5702  001FF0  500A               	movf	(___fladd@a+1)^0,w,c
  5703  001FF2  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5704  001FF4  500B               	movf	(___fladd@a+2)^0,w,c
  5705  001FF6  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5706  001FF8  500C               	movf	(___fladd@a+3)^0,w,c
  5707  001FFA  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5708  001FFC                     l1257:
  5709  001FFC  5005               	movf	___fladd@b^0,w,c
  5710  001FFE  1006               	iorwf	(___fladd@b+1)^0,w,c
  5711  002000  1007               	iorwf	(___fladd@b+2)^0,w,c
  5712  002002  1008               	iorwf	(___fladd@b+3)^0,w,c
  5713  002004  A4D8               	btfss	status,2,c
  5714  002006  EF07  F010         	goto	u6201
  5715  00200A  EF09  F010         	goto	u6200
  5716  00200E                     u6201:
  5717  00200E  EF3E  F010         	goto	l6211
  5718  002012                     u6200:
  5719  002012  5014               	movf	___fladd@grs^0,w,c
  5720  002014  A4D8               	btfss	status,2,c
  5721  002016  EF0F  F010         	goto	u6211
  5722  00201A  EF11  F010         	goto	u6210
  5723  00201E                     u6211:
  5724  00201E  EF3E  F010         	goto	l6211
  5725  002022                     u6210:
  5726  002022  0E00               	movlw	0
  5727  002024  6E05               	movwf	?___fladd^0,c
  5728  002026  0E00               	movlw	0
  5729  002028  6E06               	movwf	(?___fladd+1)^0,c
  5730  00202A  0E00               	movlw	0
  5731  00202C  6E07               	movwf	(?___fladd+2)^0,c
  5732  00202E  0E00               	movlw	0
  5733  002030  6E08               	movwf	(?___fladd+3)^0,c
  5734  002032  EFD9  F010         	goto	l1249
  5735  002036                     l6195:
  5736  002036  90D8               	bcf	status,0,c
  5737  002038  3605               	rlcf	___fladd@b^0,f,c
  5738  00203A  3606               	rlcf	(___fladd@b+1)^0,f,c
  5739  00203C  3607               	rlcf	(___fladd@b+2)^0,f,c
  5740  00203E  3608               	rlcf	(___fladd@b+3)^0,f,c
  5741  002040  AE14               	btfss	___fladd@grs^0,7,c
  5742  002042  EF25  F010         	goto	u6221
  5743  002046  EF27  F010         	goto	u6220
  5744  00204A                     u6221:
  5745  00204A  EF28  F010         	goto	l6201
  5746  00204E                     u6220:
  5747  00204E  8005               	bsf	___fladd@b^0,0,c
  5748  002050                     l6201:
  5749  002050  A014               	btfss	___fladd@grs^0,0,c
  5750  002052  EF2D  F010         	goto	u6231
  5751  002056  EF2F  F010         	goto	u6230
  5752  00205A                     u6231:
  5753  00205A  EF33  F010         	goto	l6205
  5754  00205E                     u6230:
  5755  00205E  80D8               	bsf	status,0,c
  5756  002060  3614               	rlcf	___fladd@grs^0,f,c
  5757  002062  EF35  F010         	goto	l6207
  5758  002066                     l6205:
  5759  002066  90D8               	bcf	status,0,c
  5760  002068  3614               	rlcf	___fladd@grs^0,f,c
  5761  00206A                     l6207:
  5762  00206A  5013               	movf	___fladd@bexp^0,w,c
  5763  00206C  B4D8               	btfsc	status,2,c
  5764  00206E  EF3B  F010         	goto	u6241
  5765  002072  EF3D  F010         	goto	u6240
  5766  002076                     u6241:
  5767  002076  EF3E  F010         	goto	l6211
  5768  00207A                     u6240:
  5769  00207A  0613               	decf	___fladd@bexp^0,f,c
  5770  00207C                     l6211:
  5771  00207C  AE07               	btfss	(___fladd@b+2)^0,7,c
  5772  00207E  EF43  F010         	goto	u6251
  5773  002082  EF45  F010         	goto	u6250
  5774  002086                     u6251:
  5775  002086  EF1B  F010         	goto	l6195
  5776  00208A                     u6250:
  5777  00208A                     l6213:
  5778  00208A  0E00               	movlw	0
  5779  00208C  6E12               	movwf	___fladd@aexp^0,c
  5780  00208E  AE14               	btfss	___fladd@grs^0,7,c
  5781  002090  EF4C  F010         	goto	u6261
  5782  002094  EF4E  F010         	goto	u6260
  5783  002098                     u6261:
  5784  002098  EF66  F010         	goto	l1266
  5785  00209C                     u6260:
  5786  00209C  C014  F00D         	movff	___fladd@grs,??___fladd
  5787  0020A0  0E7F               	movlw	127
  5788  0020A2  160D               	andwf	??___fladd^0,f,c
  5789  0020A4  B4D8               	btfsc	status,2,c
  5790  0020A6  EF57  F010         	goto	u6271
  5791  0020AA  EF59  F010         	goto	u6270
  5792  0020AE                     u6271:
  5793  0020AE  EF5D  F010         	goto	l1267
  5794  0020B2                     u6270:
  5795  0020B2                     l6219:
  5796  0020B2  0E01               	movlw	1
  5797  0020B4  6E12               	movwf	___fladd@aexp^0,c
  5798  0020B6  EF66  F010         	goto	l1266
  5799  0020BA                     l1267:
  5800  0020BA  A005               	btfss	___fladd@b^0,0,c
  5801  0020BC  EF62  F010         	goto	u6281
  5802  0020C0  EF64  F010         	goto	u6280
  5803  0020C4                     u6281:
  5804  0020C4  EF66  F010         	goto	l1266
  5805  0020C8                     u6280:
  5806  0020C8  EF59  F010         	goto	l6219
  5807  0020CC                     l1266:
  5808  0020CC  5012               	movf	___fladd@aexp^0,w,c
  5809  0020CE  B4D8               	btfsc	status,2,c
  5810  0020D0  EF6C  F010         	goto	u6291
  5811  0020D4  EF6E  F010         	goto	u6290
  5812  0020D8                     u6291:
  5813  0020D8  EF99  F010         	goto	l6231
  5814  0020DC                     u6290:
  5815  0020DC  0E01               	movlw	1
  5816  0020DE  2605               	addwf	___fladd@b^0,f,c
  5817  0020E0  0E00               	movlw	0
  5818  0020E2  2206               	addwfc	(___fladd@b+1)^0,f,c
  5819  0020E4  2207               	addwfc	(___fladd@b+2)^0,f,c
  5820  0020E6  2208               	addwfc	(___fladd@b+3)^0,f,c
  5821  0020E8  A008               	btfss	(___fladd@b+3)^0,0,c
  5822  0020EA  EF79  F010         	goto	u6301
  5823  0020EE  EF7B  F010         	goto	u6300
  5824  0020F2                     u6301:
  5825  0020F2  EF99  F010         	goto	l6231
  5826  0020F6                     u6300:
  5827  0020F6  C005  F00D         	movff	___fladd@b,??___fladd
  5828  0020FA  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5829  0020FE  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5830  002102  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5831  002106  3410               	rlcf	(??___fladd+3)^0,w,c
  5832  002108  3210               	rrcf	(??___fladd+3)^0,f,c
  5833  00210A  320F               	rrcf	(??___fladd+2)^0,f,c
  5834  00210C  320E               	rrcf	(??___fladd+1)^0,f,c
  5835  00210E  320D               	rrcf	??___fladd^0,f,c
  5836  002110  C00D  F005         	movff	??___fladd,___fladd@b
  5837  002114  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5838  002118  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5839  00211C  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5840  002120  2813               	incf	___fladd@bexp^0,w,c
  5841  002122  B4D8               	btfsc	status,2,c
  5842  002124  EF96  F010         	goto	u6311
  5843  002128  EF98  F010         	goto	u6310
  5844  00212C                     u6311:
  5845  00212C  EF99  F010         	goto	l6231
  5846  002130                     u6310:
  5847  002130  2A13               	incf	___fladd@bexp^0,f,c
  5848  002132                     l6231:
  5849  002132  2813               	incf	___fladd@bexp^0,w,c
  5850  002134  B4D8               	btfsc	status,2,c
  5851  002136  EF9F  F010         	goto	u6321
  5852  00213A  EFA1  F010         	goto	u6320
  5853  00213E                     u6321:
  5854  00213E  EFA9  F010         	goto	l6235
  5855  002142                     u6320:
  5856  002142  5013               	movf	___fladd@bexp^0,w,c
  5857  002144  A4D8               	btfss	status,2,c
  5858  002146  EFA7  F010         	goto	u6331
  5859  00214A  EFA9  F010         	goto	u6330
  5860  00214E                     u6331:
  5861  00214E  EFBB  F010         	goto	l6239
  5862  002152                     u6330:
  5863  002152                     l6235:
  5864  002152  0E00               	movlw	0
  5865  002154  6E05               	movwf	___fladd@b^0,c
  5866  002156  0E00               	movlw	0
  5867  002158  6E06               	movwf	(___fladd@b+1)^0,c
  5868  00215A  0E00               	movlw	0
  5869  00215C  6E07               	movwf	(___fladd@b+2)^0,c
  5870  00215E  0E00               	movlw	0
  5871  002160  6E08               	movwf	(___fladd@b+3)^0,c
  5872  002162  5013               	movf	___fladd@bexp^0,w,c
  5873  002164  A4D8               	btfss	status,2,c
  5874  002166  EFB7  F010         	goto	u6341
  5875  00216A  EFB9  F010         	goto	u6340
  5876  00216E                     u6341:
  5877  00216E  EFBB  F010         	goto	l6239
  5878  002172                     u6340:
  5879  002172  0E00               	movlw	0
  5880  002174  6E11               	movwf	___fladd@signs^0,c
  5881  002176                     l6239:
  5882  002176  A013               	btfss	___fladd@bexp^0,0,c
  5883  002178  EFC0  F010         	goto	u6351
  5884  00217C  EFC2  F010         	goto	u6350
  5885  002180                     u6351:
  5886  002180  EFC5  F010         	goto	l6243
  5887  002184                     u6350:
  5888  002184  8E07               	bsf	(___fladd@b+2)^0,7,c
  5889  002186  EFC6  F010         	goto	l6245
  5890  00218A                     l6243:
  5891  00218A  9E07               	bcf	(___fladd@b+2)^0,7,c
  5892  00218C                     l6245:
  5893  00218C  90D8               	bcf	status,0,c
  5894  00218E  3013               	rrcf	___fladd@bexp^0,w,c
  5895  002190  6E08               	movwf	(___fladd@b+3)^0,c
  5896  002192  AE11               	btfss	___fladd@signs^0,7,c
  5897  002194  EFCE  F010         	goto	u6361
  5898  002198  EFD0  F010         	goto	u6360
  5899  00219C                     u6361:
  5900  00219C  EFD1  F010         	goto	l6251
  5901  0021A0                     u6360:
  5902  0021A0  8E08               	bsf	(___fladd@b+3)^0,7,c
  5903  0021A2                     l6251:
  5904  0021A2  C005  F005         	movff	___fladd@b,?___fladd
  5905  0021A6  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5906  0021AA  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5907  0021AE  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5908  0021B2                     l1249:
  5909  0021B2  0012               	return		;funcret
  5910  0021B4                     __end_of___fladd:
  5911                           	callstack 0
  5912                           
  5913 ;; *************** function ___flneg *****************
  5914 ;; Defined at:
  5915 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  f1              4    4[COMRAM] unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  4    4[COMRAM] unsigned char 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:        4 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 4
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_efgtoa
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text20
  5944  0044C0                     __ptext20:
  5945                           	callstack 0
  5946  0044C0                     ___flneg:
  5947                           	callstack 22
  5948  0044C0  5005               	movf	___flneg@f1^0,w,c
  5949  0044C2  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5950  0044C4  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5951  0044C6  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5952  0044C8  B4D8               	btfsc	status,2,c
  5953  0044CA  EF69  F022         	goto	u7031
  5954  0044CE  EF6B  F022         	goto	u7030
  5955  0044D2                     u7031:
  5956  0044D2  EF73  F022         	goto	l6679
  5957  0044D6                     u7030:
  5958  0044D6  0E00               	movlw	0
  5959  0044D8  1A05               	xorwf	___flneg@f1^0,f,c
  5960  0044DA  0E00               	movlw	0
  5961  0044DC  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5962  0044DE  0E00               	movlw	0
  5963  0044E0  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5964  0044E2  0E80               	movlw	128
  5965  0044E4  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5966  0044E6                     l6679:
  5967  0044E6  C005  F005         	movff	___flneg@f1,?___flneg
  5968  0044EA  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5969  0044EE  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5970  0044F2  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5971  0044F6  0012               	return		;funcret
  5972  0044F8                     __end_of___flneg:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function ___flmul *****************
  5976 ;; Defined at:
  5977 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  b               4    4[COMRAM] unsigned char 
  5980 ;;  a               4    8[COMRAM] unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  prod            4   23[COMRAM] struct .
  5983 ;;  grs             4   18[COMRAM] unsigned long 
  5984 ;;  temp            2   27[COMRAM] struct .
  5985 ;;  bexp            1   22[COMRAM] unsigned char 
  5986 ;;  aexp            1   17[COMRAM] unsigned char 
  5987 ;;  sign            1   16[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  4    4[COMRAM] unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, prodl, prodh
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5997 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;Total ram usage:       25 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 4
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_efgtoa
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text21
  6012  002654                     __ptext21:
  6013                           	callstack 0
  6014  002654                     ___flmul:
  6015                           	callstack 22
  6016  002654  5008               	movf	(___flmul@b+3)^0,w,c
  6017  002656  0B80               	andlw	128
  6018  002658  6E11               	movwf	___flmul@sign^0,c
  6019  00265A  5008               	movf	(___flmul@b+3)^0,w,c
  6020  00265C  2408               	addwf	(___flmul@b+3)^0,w,c
  6021  00265E  6E17               	movwf	___flmul@bexp^0,c
  6022  002660  AE07               	btfss	(___flmul@b+2)^0,7,c
  6023  002662  EF35  F013         	goto	u6641
  6024  002666  EF37  F013         	goto	u6640
  6025  00266A                     u6641:
  6026  00266A  EF38  F013         	goto	l6427
  6027  00266E                     u6640:
  6028  00266E  8017               	bsf	___flmul@bexp^0,0,c
  6029  002670                     l6427:
  6030  002670  5017               	movf	___flmul@bexp^0,w,c
  6031  002672  B4D8               	btfsc	status,2,c
  6032  002674  EF3E  F013         	goto	u6651
  6033  002678  EF40  F013         	goto	u6650
  6034  00267C                     u6651:
  6035  00267C  EF53  F013         	goto	l6435
  6036  002680                     u6650:
  6037  002680  2817               	incf	___flmul@bexp^0,w,c
  6038  002682  A4D8               	btfss	status,2,c
  6039  002684  EF46  F013         	goto	u6661
  6040  002688  EF48  F013         	goto	u6660
  6041  00268C                     u6661:
  6042  00268C  EF50  F013         	goto	l6433
  6043  002690                     u6660:
  6044  002690  0E00               	movlw	0
  6045  002692  6E05               	movwf	___flmul@b^0,c
  6046  002694  0E00               	movlw	0
  6047  002696  6E06               	movwf	(___flmul@b+1)^0,c
  6048  002698  0E00               	movlw	0
  6049  00269A  6E07               	movwf	(___flmul@b+2)^0,c
  6050  00269C  0E00               	movlw	0
  6051  00269E  6E08               	movwf	(___flmul@b+3)^0,c
  6052  0026A0                     l6433:
  6053  0026A0  8E07               	bsf	(___flmul@b+2)^0,7,c
  6054  0026A2  EF5B  F013         	goto	l6437
  6055  0026A6                     l6435:
  6056  0026A6  0E00               	movlw	0
  6057  0026A8  6E05               	movwf	___flmul@b^0,c
  6058  0026AA  0E00               	movlw	0
  6059  0026AC  6E06               	movwf	(___flmul@b+1)^0,c
  6060  0026AE  0E00               	movlw	0
  6061  0026B0  6E07               	movwf	(___flmul@b+2)^0,c
  6062  0026B2  0E00               	movlw	0
  6063  0026B4  6E08               	movwf	(___flmul@b+3)^0,c
  6064  0026B6                     l6437:
  6065  0026B6  500C               	movf	(___flmul@a+3)^0,w,c
  6066  0026B8  0B80               	andlw	128
  6067  0026BA  1A11               	xorwf	___flmul@sign^0,f,c
  6068  0026BC  500C               	movf	(___flmul@a+3)^0,w,c
  6069  0026BE  240C               	addwf	(___flmul@a+3)^0,w,c
  6070  0026C0  6E12               	movwf	___flmul@aexp^0,c
  6071  0026C2  AE0B               	btfss	(___flmul@a+2)^0,7,c
  6072  0026C4  EF66  F013         	goto	u6671
  6073  0026C8  EF68  F013         	goto	u6670
  6074  0026CC                     u6671:
  6075  0026CC  EF69  F013         	goto	l6445
  6076  0026D0                     u6670:
  6077  0026D0  8012               	bsf	___flmul@aexp^0,0,c
  6078  0026D2                     l6445:
  6079  0026D2  5012               	movf	___flmul@aexp^0,w,c
  6080  0026D4  B4D8               	btfsc	status,2,c
  6081  0026D6  EF6F  F013         	goto	u6681
  6082  0026DA  EF71  F013         	goto	u6680
  6083  0026DE                     u6681:
  6084  0026DE  EF84  F013         	goto	l6453
  6085  0026E2                     u6680:
  6086  0026E2  2812               	incf	___flmul@aexp^0,w,c
  6087  0026E4  A4D8               	btfss	status,2,c
  6088  0026E6  EF77  F013         	goto	u6691
  6089  0026EA  EF79  F013         	goto	u6690
  6090  0026EE                     u6691:
  6091  0026EE  EF81  F013         	goto	l6451
  6092  0026F2                     u6690:
  6093  0026F2  0E00               	movlw	0
  6094  0026F4  6E09               	movwf	___flmul@a^0,c
  6095  0026F6  0E00               	movlw	0
  6096  0026F8  6E0A               	movwf	(___flmul@a+1)^0,c
  6097  0026FA  0E00               	movlw	0
  6098  0026FC  6E0B               	movwf	(___flmul@a+2)^0,c
  6099  0026FE  0E00               	movlw	0
  6100  002700  6E0C               	movwf	(___flmul@a+3)^0,c
  6101  002702                     l6451:
  6102  002702  8E0B               	bsf	(___flmul@a+2)^0,7,c
  6103  002704  EF8C  F013         	goto	l1326
  6104  002708                     l6453:
  6105  002708  0E00               	movlw	0
  6106  00270A  6E09               	movwf	___flmul@a^0,c
  6107  00270C  0E00               	movlw	0
  6108  00270E  6E0A               	movwf	(___flmul@a+1)^0,c
  6109  002710  0E00               	movlw	0
  6110  002712  6E0B               	movwf	(___flmul@a+2)^0,c
  6111  002714  0E00               	movlw	0
  6112  002716  6E0C               	movwf	(___flmul@a+3)^0,c
  6113  002718                     l1326:
  6114  002718  5012               	movf	___flmul@aexp^0,w,c
  6115  00271A  B4D8               	btfsc	status,2,c
  6116  00271C  EF92  F013         	goto	u6701
  6117  002720  EF94  F013         	goto	u6700
  6118  002724                     u6701:
  6119  002724  EF9C  F013         	goto	l6457
  6120  002728                     u6700:
  6121  002728  5017               	movf	___flmul@bexp^0,w,c
  6122  00272A  A4D8               	btfss	status,2,c
  6123  00272C  EF9A  F013         	goto	u6711
  6124  002730  EF9C  F013         	goto	u6710
  6125  002734                     u6711:
  6126  002734  EFA6  F013         	goto	l6461
  6127  002738                     u6710:
  6128  002738                     l6457:
  6129  002738  0E00               	movlw	0
  6130  00273A  6E05               	movwf	?___flmul^0,c
  6131  00273C  0E00               	movlw	0
  6132  00273E  6E06               	movwf	(?___flmul+1)^0,c
  6133  002740  0E00               	movlw	0
  6134  002742  6E07               	movwf	(?___flmul+2)^0,c
  6135  002744  0E00               	movlw	0
  6136  002746  6E08               	movwf	(?___flmul+3)^0,c
  6137  002748  EF3E  F015         	goto	l1330
  6138  00274C                     l6461:
  6139  00274C  500B               	movf	(___flmul@a+2)^0,w,c
  6140  00274E  0205               	mulwf	___flmul@b^0,c
  6141  002750  CFF3 F01C          	movff	prodl,___flmul@temp
  6142  002754  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6143  002758  501C               	movf	___flmul@temp^0,w,c
  6144  00275A  6E13               	movwf	___flmul@grs^0,c
  6145  00275C  6A14               	clrf	(___flmul@grs+1)^0,c
  6146  00275E  6A15               	clrf	(___flmul@grs+2)^0,c
  6147  002760  6A16               	clrf	(___flmul@grs+3)^0,c
  6148  002762  501D               	movf	(___flmul@temp+1)^0,w,c
  6149  002764  6E18               	movwf	___flmul@prod^0,c
  6150  002766  6A19               	clrf	(___flmul@prod+1)^0,c
  6151  002768  6A1A               	clrf	(___flmul@prod+2)^0,c
  6152  00276A  6A1B               	clrf	(___flmul@prod+3)^0,c
  6153  00276C  500A               	movf	(___flmul@a+1)^0,w,c
  6154  00276E  0206               	mulwf	(___flmul@b+1)^0,c
  6155  002770  CFF3 F01C          	movff	prodl,___flmul@temp
  6156  002774  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6157  002778  501C               	movf	___flmul@temp^0,w,c
  6158  00277A  2613               	addwf	___flmul@grs^0,f,c
  6159  00277C  0E00               	movlw	0
  6160  00277E  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6161  002780  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6162  002782  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6163  002784  501D               	movf	(___flmul@temp+1)^0,w,c
  6164  002786  2618               	addwf	___flmul@prod^0,f,c
  6165  002788  0E00               	movlw	0
  6166  00278A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6167  00278C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6168  00278E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6169  002790  5009               	movf	___flmul@a^0,w,c
  6170  002792  0207               	mulwf	(___flmul@b+2)^0,c
  6171  002794  CFF3 F01C          	movff	prodl,___flmul@temp
  6172  002798  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6173  00279C  501C               	movf	___flmul@temp^0,w,c
  6174  00279E  2613               	addwf	___flmul@grs^0,f,c
  6175  0027A0  0E00               	movlw	0
  6176  0027A2  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6177  0027A4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6178  0027A6  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6179  0027A8  501D               	movf	(___flmul@temp+1)^0,w,c
  6180  0027AA  2618               	addwf	___flmul@prod^0,f,c
  6181  0027AC  0E00               	movlw	0
  6182  0027AE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6183  0027B0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6184  0027B2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6185  0027B4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6186  0027B8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6187  0027BC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6188  0027C0  6A13               	clrf	___flmul@grs^0,c
  6189  0027C2  5009               	movf	___flmul@a^0,w,c
  6190  0027C4  0206               	mulwf	(___flmul@b+1)^0,c
  6191  0027C6  CFF3 F01C          	movff	prodl,___flmul@temp
  6192  0027CA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6193  0027CE  501C               	movf	___flmul@temp^0,w,c
  6194  0027D0  2613               	addwf	___flmul@grs^0,f,c
  6195  0027D2  501D               	movf	(___flmul@temp+1)^0,w,c
  6196  0027D4  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6197  0027D6  0E00               	movlw	0
  6198  0027D8  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6199  0027DA  0E00               	movlw	0
  6200  0027DC  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6201  0027DE  500A               	movf	(___flmul@a+1)^0,w,c
  6202  0027E0  0205               	mulwf	___flmul@b^0,c
  6203  0027E2  CFF3 F01C          	movff	prodl,___flmul@temp
  6204  0027E6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6205  0027EA  501C               	movf	___flmul@temp^0,w,c
  6206  0027EC  2613               	addwf	___flmul@grs^0,f,c
  6207  0027EE  501D               	movf	(___flmul@temp+1)^0,w,c
  6208  0027F0  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6209  0027F2  0E00               	movlw	0
  6210  0027F4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6211  0027F6  0E00               	movlw	0
  6212  0027F8  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6213  0027FA  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6214  0027FE  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6215  002802  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6216  002806  6A13               	clrf	___flmul@grs^0,c
  6217  002808  5009               	movf	___flmul@a^0,w,c
  6218  00280A  0205               	mulwf	___flmul@b^0,c
  6219  00280C  CFF3 F01C          	movff	prodl,___flmul@temp
  6220  002810  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6221  002814  501C               	movf	___flmul@temp^0,w,c
  6222  002816  2613               	addwf	___flmul@grs^0,f,c
  6223  002818  501D               	movf	(___flmul@temp+1)^0,w,c
  6224  00281A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  6225  00281C  0E00               	movlw	0
  6226  00281E  2215               	addwfc	(___flmul@grs+2)^0,f,c
  6227  002820  0E00               	movlw	0
  6228  002822  2216               	addwfc	(___flmul@grs+3)^0,f,c
  6229  002824  500B               	movf	(___flmul@a+2)^0,w,c
  6230  002826  0206               	mulwf	(___flmul@b+1)^0,c
  6231  002828  CFF3 F01C          	movff	prodl,___flmul@temp
  6232  00282C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6233  002830  501C               	movf	___flmul@temp^0,w,c
  6234  002832  2618               	addwf	___flmul@prod^0,f,c
  6235  002834  501D               	movf	(___flmul@temp+1)^0,w,c
  6236  002836  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6237  002838  0E00               	movlw	0
  6238  00283A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6239  00283C  0E00               	movlw	0
  6240  00283E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6241  002840  500A               	movf	(___flmul@a+1)^0,w,c
  6242  002842  0207               	mulwf	(___flmul@b+2)^0,c
  6243  002844  CFF3 F01C          	movff	prodl,___flmul@temp
  6244  002848  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6245  00284C  501C               	movf	___flmul@temp^0,w,c
  6246  00284E  2618               	addwf	___flmul@prod^0,f,c
  6247  002850  501D               	movf	(___flmul@temp+1)^0,w,c
  6248  002852  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6249  002854  0E00               	movlw	0
  6250  002856  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6251  002858  0E00               	movlw	0
  6252  00285A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6253  00285C  500B               	movf	(___flmul@a+2)^0,w,c
  6254  00285E  0207               	mulwf	(___flmul@b+2)^0,c
  6255  002860  CFF3 F01C          	movff	prodl,___flmul@temp
  6256  002864  CFF4 F01D          	movff	prodh,___flmul@temp+1
  6257  002868  501C               	movf	___flmul@temp^0,w,c
  6258  00286A  6E0D               	movwf	??___flmul^0,c
  6259  00286C  501D               	movf	(___flmul@temp+1)^0,w,c
  6260  00286E  6E0E               	movwf	(??___flmul+1)^0,c
  6261  002870  6A0F               	clrf	(??___flmul+2)^0,c
  6262  002872  6A10               	clrf	(??___flmul+3)^0,c
  6263  002874  C00F  F010         	movff	??___flmul+2,??___flmul+3
  6264  002878  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  6265  00287C  C00D  F00E         	movff	??___flmul,??___flmul+1
  6266  002880  6A0D               	clrf	??___flmul^0,c
  6267  002882  500D               	movf	??___flmul^0,w,c
  6268  002884  2618               	addwf	___flmul@prod^0,f,c
  6269  002886  500E               	movf	(??___flmul+1)^0,w,c
  6270  002888  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6271  00288A  500F               	movf	(??___flmul+2)^0,w,c
  6272  00288C  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6273  00288E  5010               	movf	(??___flmul+3)^0,w,c
  6274  002890  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6275  002892  C013  F00D         	movff	___flmul@grs,??___flmul
  6276  002896  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  6277  00289A  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  6278  00289E  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  6279  0028A2  0E19               	movlw	25
  6280  0028A4  EF59  F014         	goto	u6720
  6281  0028A8                     u6725:
  6282  0028A8  90D8               	bcf	status,0,c
  6283  0028AA  3210               	rrcf	(??___flmul+3)^0,f,c
  6284  0028AC  320F               	rrcf	(??___flmul+2)^0,f,c
  6285  0028AE  320E               	rrcf	(??___flmul+1)^0,f,c
  6286  0028B0  320D               	rrcf	??___flmul^0,f,c
  6287  0028B2                     u6720:
  6288  0028B2  2EE8               	decfsz	wreg,f,c
  6289  0028B4  EF54  F014         	goto	u6725
  6290  0028B8  500D               	movf	??___flmul^0,w,c
  6291  0028BA  2618               	addwf	___flmul@prod^0,f,c
  6292  0028BC  500E               	movf	(??___flmul+1)^0,w,c
  6293  0028BE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6294  0028C0  500F               	movf	(??___flmul+2)^0,w,c
  6295  0028C2  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6296  0028C4  5010               	movf	(??___flmul+3)^0,w,c
  6297  0028C6  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6298  0028C8  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  6299  0028CC  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  6300  0028D0  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  6301  0028D4  6A13               	clrf	___flmul@grs^0,c
  6302  0028D6  5012               	movf	___flmul@aexp^0,w,c
  6303  0028D8  C017  F00D         	movff	___flmul@bexp,??___flmul
  6304  0028DC  6A0E               	clrf	(??___flmul+1)^0,c
  6305  0028DE  260D               	addwf	??___flmul^0,f,c
  6306  0028E0  0E00               	movlw	0
  6307  0028E2  220E               	addwfc	(??___flmul+1)^0,f,c
  6308  0028E4  0E82               	movlw	130
  6309  0028E6  240D               	addwf	??___flmul^0,w,c
  6310  0028E8  6E1C               	movwf	___flmul@temp^0,c
  6311  0028EA  0EFF               	movlw	255
  6312  0028EC  200E               	addwfc	(??___flmul+1)^0,w,c
  6313  0028EE  6E1D               	movwf	(___flmul@temp+1)^0,c
  6314  0028F0  EF8F  F014         	goto	l6509
  6315  0028F4                     l6503:
  6316  0028F4  90D8               	bcf	status,0,c
  6317  0028F6  3618               	rlcf	___flmul@prod^0,f,c
  6318  0028F8  3619               	rlcf	(___flmul@prod+1)^0,f,c
  6319  0028FA  361A               	rlcf	(___flmul@prod+2)^0,f,c
  6320  0028FC  361B               	rlcf	(___flmul@prod+3)^0,f,c
  6321  0028FE  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6322  002900  EF84  F014         	goto	u6731
  6323  002904  EF86  F014         	goto	u6730
  6324  002908                     u6731:
  6325  002908  EF87  F014         	goto	l1333
  6326  00290C                     u6730:
  6327  00290C  8018               	bsf	___flmul@prod^0,0,c
  6328  00290E                     l1333:
  6329  00290E  90D8               	bcf	status,0,c
  6330  002910  3613               	rlcf	___flmul@grs^0,f,c
  6331  002912  3614               	rlcf	(___flmul@grs+1)^0,f,c
  6332  002914  3615               	rlcf	(___flmul@grs+2)^0,f,c
  6333  002916  3616               	rlcf	(___flmul@grs+3)^0,f,c
  6334  002918  061C               	decf	___flmul@temp^0,f,c
  6335  00291A  A0D8               	btfss	status,0,c
  6336  00291C  061D               	decf	(___flmul@temp+1)^0,f,c
  6337  00291E                     l6509:
  6338  00291E  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  6339  002920  EF94  F014         	goto	u6741
  6340  002924  EF96  F014         	goto	u6740
  6341  002928                     u6741:
  6342  002928  EF7A  F014         	goto	l6503
  6343  00292C                     u6740:
  6344  00292C  0E00               	movlw	0
  6345  00292E  6E12               	movwf	___flmul@aexp^0,c
  6346  002930  AE16               	btfss	(___flmul@grs+3)^0,7,c
  6347  002932  EF9D  F014         	goto	u6751
  6348  002936  EF9F  F014         	goto	u6750
  6349  00293A                     u6751:
  6350  00293A  EFC3  F014         	goto	l1335
  6351  00293E                     u6750:
  6352  00293E  0EFF               	movlw	255
  6353  002940  1413               	andwf	___flmul@grs^0,w,c
  6354  002942  6E0D               	movwf	??___flmul^0,c
  6355  002944  0EFF               	movlw	255
  6356  002946  1414               	andwf	(___flmul@grs+1)^0,w,c
  6357  002948  6E0E               	movwf	(??___flmul+1)^0,c
  6358  00294A  0EFF               	movlw	255
  6359  00294C  1415               	andwf	(___flmul@grs+2)^0,w,c
  6360  00294E  6E0F               	movwf	(??___flmul+2)^0,c
  6361  002950  0E7F               	movlw	127
  6362  002952  1416               	andwf	(___flmul@grs+3)^0,w,c
  6363  002954  6E10               	movwf	(??___flmul+3)^0,c
  6364  002956  500D               	movf	??___flmul^0,w,c
  6365  002958  100E               	iorwf	(??___flmul+1)^0,w,c
  6366  00295A  100F               	iorwf	(??___flmul+2)^0,w,c
  6367  00295C  1010               	iorwf	(??___flmul+3)^0,w,c
  6368  00295E  B4D8               	btfsc	status,2,c
  6369  002960  EFB4  F014         	goto	u6761
  6370  002964  EFB6  F014         	goto	u6760
  6371  002968                     u6761:
  6372  002968  EFBA  F014         	goto	l1336
  6373  00296C                     u6760:
  6374  00296C                     l6517:
  6375  00296C  0E01               	movlw	1
  6376  00296E  6E12               	movwf	___flmul@aexp^0,c
  6377  002970  EFC3  F014         	goto	l1335
  6378  002974                     l1336:
  6379  002974  A018               	btfss	___flmul@prod^0,0,c
  6380  002976  EFBF  F014         	goto	u6771
  6381  00297A  EFC1  F014         	goto	u6770
  6382  00297E                     u6771:
  6383  00297E  EFC3  F014         	goto	l1335
  6384  002982                     u6770:
  6385  002982  EFB6  F014         	goto	l6517
  6386  002986                     l1335:
  6387  002986  5012               	movf	___flmul@aexp^0,w,c
  6388  002988  B4D8               	btfsc	status,2,c
  6389  00298A  EFC9  F014         	goto	u6781
  6390  00298E  EFCB  F014         	goto	u6780
  6391  002992                     u6781:
  6392  002992  EFEF  F014         	goto	l6529
  6393  002996                     u6780:
  6394  002996  0E01               	movlw	1
  6395  002998  2618               	addwf	___flmul@prod^0,f,c
  6396  00299A  0E00               	movlw	0
  6397  00299C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  6398  00299E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  6399  0029A0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  6400  0029A2  A01B               	btfss	(___flmul@prod+3)^0,0,c
  6401  0029A4  EFD6  F014         	goto	u6791
  6402  0029A8  EFD8  F014         	goto	u6790
  6403  0029AC                     u6791:
  6404  0029AC  EFEF  F014         	goto	l6529
  6405  0029B0                     u6790:
  6406  0029B0  C018  F00D         	movff	___flmul@prod,??___flmul
  6407  0029B4  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  6408  0029B8  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  6409  0029BC  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  6410  0029C0  3410               	rlcf	(??___flmul+3)^0,w,c
  6411  0029C2  3210               	rrcf	(??___flmul+3)^0,f,c
  6412  0029C4  320F               	rrcf	(??___flmul+2)^0,f,c
  6413  0029C6  320E               	rrcf	(??___flmul+1)^0,f,c
  6414  0029C8  320D               	rrcf	??___flmul^0,f,c
  6415  0029CA  C00D  F018         	movff	??___flmul,___flmul@prod
  6416  0029CE  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  6417  0029D2  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  6418  0029D6  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  6419  0029DA  4A1C               	infsnz	___flmul@temp^0,f,c
  6420  0029DC  2A1D               	incf	(___flmul@temp+1)^0,f,c
  6421  0029DE                     l6529:
  6422  0029DE  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6423  0029E0  EFFA  F014         	goto	u6801
  6424  0029E4  501D               	movf	(___flmul@temp+1)^0,w,c
  6425  0029E6  E108               	bnz	u6800
  6426  0029E8  281C               	incf	___flmul@temp^0,w,c
  6427  0029EA  A0D8               	btfss	status,0,c
  6428  0029EC  EFFA  F014         	goto	u6801
  6429  0029F0  EFFC  F014         	goto	u6800
  6430  0029F4                     u6801:
  6431  0029F4  EF06  F015         	goto	l6533
  6432  0029F8                     u6800:
  6433  0029F8  0E00               	movlw	0
  6434  0029FA  6E18               	movwf	___flmul@prod^0,c
  6435  0029FC  0E00               	movlw	0
  6436  0029FE  6E19               	movwf	(___flmul@prod+1)^0,c
  6437  002A00  0E80               	movlw	128
  6438  002A02  6E1A               	movwf	(___flmul@prod+2)^0,c
  6439  002A04  0E7F               	movlw	127
  6440  002A06  6E1B               	movwf	(___flmul@prod+3)^0,c
  6441  002A08  EF34  F015         	goto	l6545
  6442  002A0C                     l6533:
  6443  002A0C  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  6444  002A0E  EF13  F015         	goto	u6810
  6445  002A12  501D               	movf	(___flmul@temp+1)^0,w,c
  6446  002A14  E106               	bnz	u6811
  6447  002A16  041C               	decf	___flmul@temp^0,w,c
  6448  002A18  B0D8               	btfsc	status,0,c
  6449  002A1A  EF11  F015         	goto	u6811
  6450  002A1E  EF13  F015         	goto	u6810
  6451  002A22                     u6811:
  6452  002A22  EF1F  F015         	goto	l1343
  6453  002A26                     u6810:
  6454  002A26  0E00               	movlw	0
  6455  002A28  6E18               	movwf	___flmul@prod^0,c
  6456  002A2A  0E00               	movlw	0
  6457  002A2C  6E19               	movwf	(___flmul@prod+1)^0,c
  6458  002A2E  0E00               	movlw	0
  6459  002A30  6E1A               	movwf	(___flmul@prod+2)^0,c
  6460  002A32  0E00               	movlw	0
  6461  002A34  6E1B               	movwf	(___flmul@prod+3)^0,c
  6462  002A36  0E00               	movlw	0
  6463  002A38  6E11               	movwf	___flmul@sign^0,c
  6464  002A3A  EF34  F015         	goto	l6545
  6465  002A3E                     l1343:
  6466  002A3E  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  6467  002A42  0EFF               	movlw	255
  6468  002A44  1618               	andwf	___flmul@prod^0,f,c
  6469  002A46  0EFF               	movlw	255
  6470  002A48  1619               	andwf	(___flmul@prod+1)^0,f,c
  6471  002A4A  0E7F               	movlw	127
  6472  002A4C  161A               	andwf	(___flmul@prod+2)^0,f,c
  6473  002A4E  0E00               	movlw	0
  6474  002A50  161B               	andwf	(___flmul@prod+3)^0,f,c
  6475  002A52  A017               	btfss	___flmul@bexp^0,0,c
  6476  002A54  EF2E  F015         	goto	u6821
  6477  002A58  EF30  F015         	goto	u6820
  6478  002A5C                     u6821:
  6479  002A5C  EF31  F015         	goto	l6543
  6480  002A60                     u6820:
  6481  002A60  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  6482  002A62                     l6543:
  6483  002A62  90D8               	bcf	status,0,c
  6484  002A64  3017               	rrcf	___flmul@bexp^0,w,c
  6485  002A66  6E1B               	movwf	(___flmul@prod+3)^0,c
  6486  002A68                     l6545:
  6487  002A68  5011               	movf	___flmul@sign^0,w,c
  6488  002A6A  121B               	iorwf	(___flmul@prod+3)^0,f,c
  6489  002A6C  C018  F005         	movff	___flmul@prod,?___flmul
  6490  002A70  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  6491  002A74  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  6492  002A78  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  6493  002A7C                     l1330:
  6494  002A7C  0012               	return		;funcret
  6495  002A7E                     __end_of___flmul:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function ___flge *****************
  6499 ;; Defined at:
  6500 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  ff1             4   29[COMRAM] unsigned char 
  6503 ;;  ff2             4   33[COMRAM] unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;		None               void
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:       12 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 4
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_efgtoa
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	text22
  6530  00347E                     __ptext22:
  6531                           	callstack 0
  6532  00347E                     ___flge:
  6533                           	callstack 22
  6534  00347E  0E00               	movlw	0
  6535  003480  141E               	andwf	___flge@ff1^0,w,c
  6536  003482  6E26               	movwf	??___flge^0,c
  6537  003484  0E00               	movlw	0
  6538  003486  141F               	andwf	(___flge@ff1+1)^0,w,c
  6539  003488  6E27               	movwf	(??___flge+1)^0,c
  6540  00348A  0E80               	movlw	128
  6541  00348C  1420               	andwf	(___flge@ff1+2)^0,w,c
  6542  00348E  6E28               	movwf	(??___flge+2)^0,c
  6543  003490  0E7F               	movlw	127
  6544  003492  1421               	andwf	(___flge@ff1+3)^0,w,c
  6545  003494  6E29               	movwf	(??___flge+3)^0,c
  6546  003496  5026               	movf	??___flge^0,w,c
  6547  003498  1027               	iorwf	(??___flge+1)^0,w,c
  6548  00349A  1028               	iorwf	(??___flge+2)^0,w,c
  6549  00349C  1029               	iorwf	(??___flge+3)^0,w,c
  6550  00349E  A4D8               	btfss	status,2,c
  6551  0034A0  EF54  F01A         	goto	u6981
  6552  0034A4  EF56  F01A         	goto	u6980
  6553  0034A8                     u6981:
  6554  0034A8  EF5E  F01A         	goto	l6657
  6555  0034AC                     u6980:
  6556  0034AC  0E00               	movlw	0
  6557  0034AE  6E1E               	movwf	___flge@ff1^0,c
  6558  0034B0  0E00               	movlw	0
  6559  0034B2  6E1F               	movwf	(___flge@ff1+1)^0,c
  6560  0034B4  0E00               	movlw	0
  6561  0034B6  6E20               	movwf	(___flge@ff1+2)^0,c
  6562  0034B8  0E00               	movlw	0
  6563  0034BA  6E21               	movwf	(___flge@ff1+3)^0,c
  6564  0034BC                     l6657:
  6565  0034BC  0E00               	movlw	0
  6566  0034BE  1422               	andwf	___flge@ff2^0,w,c
  6567  0034C0  6E26               	movwf	??___flge^0,c
  6568  0034C2  0E00               	movlw	0
  6569  0034C4  1423               	andwf	(___flge@ff2+1)^0,w,c
  6570  0034C6  6E27               	movwf	(??___flge+1)^0,c
  6571  0034C8  0E80               	movlw	128
  6572  0034CA  1424               	andwf	(___flge@ff2+2)^0,w,c
  6573  0034CC  6E28               	movwf	(??___flge+2)^0,c
  6574  0034CE  0E7F               	movlw	127
  6575  0034D0  1425               	andwf	(___flge@ff2+3)^0,w,c
  6576  0034D2  6E29               	movwf	(??___flge+3)^0,c
  6577  0034D4  5026               	movf	??___flge^0,w,c
  6578  0034D6  1027               	iorwf	(??___flge+1)^0,w,c
  6579  0034D8  1028               	iorwf	(??___flge+2)^0,w,c
  6580  0034DA  1029               	iorwf	(??___flge+3)^0,w,c
  6581  0034DC  A4D8               	btfss	status,2,c
  6582  0034DE  EF73  F01A         	goto	u6991
  6583  0034E2  EF75  F01A         	goto	u6990
  6584  0034E6                     u6991:
  6585  0034E6  EF7D  F01A         	goto	l6661
  6586  0034EA                     u6990:
  6587  0034EA  0E00               	movlw	0
  6588  0034EC  6E22               	movwf	___flge@ff2^0,c
  6589  0034EE  0E00               	movlw	0
  6590  0034F0  6E23               	movwf	(___flge@ff2+1)^0,c
  6591  0034F2  0E00               	movlw	0
  6592  0034F4  6E24               	movwf	(___flge@ff2+2)^0,c
  6593  0034F6  0E00               	movlw	0
  6594  0034F8  6E25               	movwf	(___flge@ff2+3)^0,c
  6595  0034FA                     l6661:
  6596  0034FA  AE21               	btfss	(___flge@ff1+3)^0,7,c
  6597  0034FC  EF82  F01A         	goto	u7001
  6598  003500  EF84  F01A         	goto	u7000
  6599  003504                     u7001:
  6600  003504  EF8D  F01A         	goto	l6665
  6601  003508                     u7000:
  6602  003508  6C1E               	negf	___flge@ff1^0,c
  6603  00350A  1E1F               	comf	(___flge@ff1+1)^0,f,c
  6604  00350C  B0D8               	btfsc	status,0,c
  6605  00350E  2A1F               	incf	(___flge@ff1+1)^0,f,c
  6606  003510  1E20               	comf	(___flge@ff1+2)^0,f,c
  6607  003512  B0D8               	btfsc	status,0,c
  6608  003514  2A20               	incf	(___flge@ff1+2)^0,f,c
  6609  003516  0E80               	movlw	128
  6610  003518  5621               	subfwb	(___flge@ff1+3)^0,f,c
  6611  00351A                     l6665:
  6612  00351A  AE25               	btfss	(___flge@ff2+3)^0,7,c
  6613  00351C  EF92  F01A         	goto	u7011
  6614  003520  EF94  F01A         	goto	u7010
  6615  003524                     u7011:
  6616  003524  EF9D  F01A         	goto	l977
  6617  003528                     u7010:
  6618  003528  6C22               	negf	___flge@ff2^0,c
  6619  00352A  1E23               	comf	(___flge@ff2+1)^0,f,c
  6620  00352C  B0D8               	btfsc	status,0,c
  6621  00352E  2A23               	incf	(___flge@ff2+1)^0,f,c
  6622  003530  1E24               	comf	(___flge@ff2+2)^0,f,c
  6623  003532  B0D8               	btfsc	status,0,c
  6624  003534  2A24               	incf	(___flge@ff2+2)^0,f,c
  6625  003536  0E80               	movlw	128
  6626  003538  5625               	subfwb	(___flge@ff2+3)^0,f,c
  6627  00353A                     l977:
  6628  00353A  0E00               	movlw	0
  6629  00353C  1A1E               	xorwf	___flge@ff1^0,f,c
  6630  00353E  0E00               	movlw	0
  6631  003540  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  6632  003542  0E00               	movlw	0
  6633  003544  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  6634  003546  0E80               	movlw	128
  6635  003548  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  6636  00354A  0E00               	movlw	0
  6637  00354C  1A22               	xorwf	___flge@ff2^0,f,c
  6638  00354E  0E00               	movlw	0
  6639  003550  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  6640  003552  0E00               	movlw	0
  6641  003554  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  6642  003556  0E80               	movlw	128
  6643  003558  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  6644  00355A  5022               	movf	___flge@ff2^0,w,c
  6645  00355C  5C1E               	subwf	___flge@ff1^0,w,c
  6646  00355E  5023               	movf	(___flge@ff2+1)^0,w,c
  6647  003560  581F               	subwfb	(___flge@ff1+1)^0,w,c
  6648  003562  5024               	movf	(___flge@ff2+2)^0,w,c
  6649  003564  5820               	subwfb	(___flge@ff1+2)^0,w,c
  6650  003566  5025               	movf	(___flge@ff2+3)^0,w,c
  6651  003568  5821               	subwfb	(___flge@ff1+3)^0,w,c
  6652  00356A  B0D8               	btfsc	status,0,c
  6653  00356C  EFBA  F01A         	goto	u7021
  6654  003570  EFBC  F01A         	goto	u7020
  6655  003574                     u7021:
  6656  003574  EFBF  F01A         	goto	l6671
  6657  003578                     u7020:
  6658  003578  90D8               	bcf	status,0,c
  6659  00357A  EFC0  F01A         	goto	l982
  6660  00357E                     l6671:
  6661  00357E  80D8               	bsf	status,0,c
  6662  003580                     l982:
  6663  003580  0012               	return		;funcret
  6664  003582                     __end_of___flge:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function ___fleq *****************
  6668 ;; Defined at:
  6669 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  ff1             4    4[COMRAM] unsigned char 
  6672 ;;  ff2             4    8[COMRAM] unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;		None               void
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6684 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;Total ram usage:       12 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; Hardware stack levels required when called: 4
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_efgtoa
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text23
  6699  003B1A                     __ptext23:
  6700                           	callstack 0
  6701  003B1A                     ___fleq:
  6702                           	callstack 22
  6703  003B1A  0E00               	movlw	0
  6704  003B1C  1405               	andwf	___fleq@ff1^0,w,c
  6705  003B1E  6E0D               	movwf	??___fleq^0,c
  6706  003B20  0E00               	movlw	0
  6707  003B22  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6708  003B24  6E0E               	movwf	(??___fleq+1)^0,c
  6709  003B26  0E80               	movlw	128
  6710  003B28  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6711  003B2A  6E0F               	movwf	(??___fleq+2)^0,c
  6712  003B2C  0E7F               	movlw	127
  6713  003B2E  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6714  003B30  6E10               	movwf	(??___fleq+3)^0,c
  6715  003B32  500D               	movf	??___fleq^0,w,c
  6716  003B34  100E               	iorwf	(??___fleq+1)^0,w,c
  6717  003B36  100F               	iorwf	(??___fleq+2)^0,w,c
  6718  003B38  1010               	iorwf	(??___fleq+3)^0,w,c
  6719  003B3A  A4D8               	btfss	status,2,c
  6720  003B3C  EFA2  F01D         	goto	u6951
  6721  003B40  EFA4  F01D         	goto	u6950
  6722  003B44                     u6951:
  6723  003B44  EFAC  F01D         	goto	l6641
  6724  003B48                     u6950:
  6725  003B48  0E00               	movlw	0
  6726  003B4A  6E05               	movwf	___fleq@ff1^0,c
  6727  003B4C  0E00               	movlw	0
  6728  003B4E  6E06               	movwf	(___fleq@ff1+1)^0,c
  6729  003B50  0E00               	movlw	0
  6730  003B52  6E07               	movwf	(___fleq@ff1+2)^0,c
  6731  003B54  0E00               	movlw	0
  6732  003B56  6E08               	movwf	(___fleq@ff1+3)^0,c
  6733  003B58                     l6641:
  6734  003B58  0E00               	movlw	0
  6735  003B5A  1409               	andwf	___fleq@ff2^0,w,c
  6736  003B5C  6E0D               	movwf	??___fleq^0,c
  6737  003B5E  0E00               	movlw	0
  6738  003B60  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6739  003B62  6E0E               	movwf	(??___fleq+1)^0,c
  6740  003B64  0E80               	movlw	128
  6741  003B66  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6742  003B68  6E0F               	movwf	(??___fleq+2)^0,c
  6743  003B6A  0E7F               	movlw	127
  6744  003B6C  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6745  003B6E  6E10               	movwf	(??___fleq+3)^0,c
  6746  003B70  500D               	movf	??___fleq^0,w,c
  6747  003B72  100E               	iorwf	(??___fleq+1)^0,w,c
  6748  003B74  100F               	iorwf	(??___fleq+2)^0,w,c
  6749  003B76  1010               	iorwf	(??___fleq+3)^0,w,c
  6750  003B78  A4D8               	btfss	status,2,c
  6751  003B7A  EFC1  F01D         	goto	u6961
  6752  003B7E  EFC3  F01D         	goto	u6960
  6753  003B82                     u6961:
  6754  003B82  EFCB  F01D         	goto	l6645
  6755  003B86                     u6960:
  6756  003B86  0E00               	movlw	0
  6757  003B88  6E09               	movwf	___fleq@ff2^0,c
  6758  003B8A  0E00               	movlw	0
  6759  003B8C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6760  003B8E  0E00               	movlw	0
  6761  003B90  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6762  003B92  0E00               	movlw	0
  6763  003B94  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6764  003B96                     l6645:
  6765  003B96  5009               	movf	___fleq@ff2^0,w,c
  6766  003B98  1805               	xorwf	___fleq@ff1^0,w,c
  6767  003B9A  E10F               	bnz	u6970
  6768  003B9C  500A               	movf	(___fleq@ff2+1)^0,w,c
  6769  003B9E  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6770  003BA0  E10C               	bnz	u6970
  6771  003BA2  500B               	movf	(___fleq@ff2+2)^0,w,c
  6772  003BA4  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6773  003BA6  E109               	bnz	u6970
  6774  003BA8  500C               	movf	(___fleq@ff2+3)^0,w,c
  6775  003BAA  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6776  003BAC  B4D8               	btfsc	status,2,c
  6777  003BAE  EFDB  F01D         	goto	u6971
  6778  003BB2  EFDD  F01D         	goto	u6970
  6779  003BB6                     u6971:
  6780  003BB6  EFE0  F01D         	goto	l6649
  6781  003BBA                     u6970:
  6782  003BBA  90D8               	bcf	status,0,c
  6783  003BBC  EFE1  F01D         	goto	l971
  6784  003BC0                     l6649:
  6785  003BC0  80D8               	bsf	status,0,c
  6786  003BC2                     l971:
  6787  003BC2  0012               	return		;funcret
  6788  003BC4                     __end_of___fleq:
  6789                           	callstack 0
  6790                           
  6791 ;; *************** function ___fldiv *****************
  6792 ;; Defined at:
  6793 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  b               4    4[COMRAM] unsigned char 
  6796 ;;  a               4    8[COMRAM] unsigned char 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  grs             4   23[COMRAM] unsigned long 
  6799 ;;  rem             4   16[COMRAM] unsigned long 
  6800 ;;  new_exp         2   21[COMRAM] short 
  6801 ;;  aexp            1   28[COMRAM] unsigned char 
  6802 ;;  bexp            1   27[COMRAM] unsigned char 
  6803 ;;  sign            1   20[COMRAM] unsigned char 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  4    4[COMRAM] unsigned char 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6813 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;Total ram usage:       25 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 4
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_efgtoa
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text24
  6828  002A7E                     __ptext24:
  6829                           	callstack 0
  6830  002A7E                     ___fldiv:
  6831                           	callstack 22
  6832  002A7E  5008               	movf	(___fldiv@b+3)^0,w,c
  6833  002A80  0B80               	andlw	128
  6834  002A82  6E15               	movwf	___fldiv@sign^0,c
  6835  002A84  5008               	movf	(___fldiv@b+3)^0,w,c
  6836  002A86  2408               	addwf	(___fldiv@b+3)^0,w,c
  6837  002A88  6E1C               	movwf	___fldiv@bexp^0,c
  6838  002A8A  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6839  002A8C  EF4A  F015         	goto	u6411
  6840  002A90  EF4C  F015         	goto	u6410
  6841  002A94                     u6411:
  6842  002A94  EF4D  F015         	goto	l6289
  6843  002A98                     u6410:
  6844  002A98  801C               	bsf	___fldiv@bexp^0,0,c
  6845  002A9A                     l6289:
  6846  002A9A  501C               	movf	___fldiv@bexp^0,w,c
  6847  002A9C  B4D8               	btfsc	status,2,c
  6848  002A9E  EF53  F015         	goto	u6421
  6849  002AA2  EF55  F015         	goto	u6420
  6850  002AA6                     u6421:
  6851  002AA6  EF6A  F015         	goto	l6299
  6852  002AAA                     u6420:
  6853  002AAA  281C               	incf	___fldiv@bexp^0,w,c
  6854  002AAC  A4D8               	btfss	status,2,c
  6855  002AAE  EF5B  F015         	goto	u6431
  6856  002AB2  EF5D  F015         	goto	u6430
  6857  002AB6                     u6431:
  6858  002AB6  EF65  F015         	goto	l6295
  6859  002ABA                     u6430:
  6860  002ABA  0E00               	movlw	0
  6861  002ABC  6E05               	movwf	___fldiv@b^0,c
  6862  002ABE  0E00               	movlw	0
  6863  002AC0  6E06               	movwf	(___fldiv@b+1)^0,c
  6864  002AC2  0E00               	movlw	0
  6865  002AC4  6E07               	movwf	(___fldiv@b+2)^0,c
  6866  002AC6  0E00               	movlw	0
  6867  002AC8  6E08               	movwf	(___fldiv@b+3)^0,c
  6868  002ACA                     l6295:
  6869  002ACA  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6870  002ACC  0E00               	movlw	0
  6871  002ACE  6E08               	movwf	(___fldiv@b+3)^0,c
  6872  002AD0  EF72  F015         	goto	l6301
  6873  002AD4                     l6299:
  6874  002AD4  0E00               	movlw	0
  6875  002AD6  6E05               	movwf	___fldiv@b^0,c
  6876  002AD8  0E00               	movlw	0
  6877  002ADA  6E06               	movwf	(___fldiv@b+1)^0,c
  6878  002ADC  0E00               	movlw	0
  6879  002ADE  6E07               	movwf	(___fldiv@b+2)^0,c
  6880  002AE0  0E00               	movlw	0
  6881  002AE2  6E08               	movwf	(___fldiv@b+3)^0,c
  6882  002AE4                     l6301:
  6883  002AE4  500C               	movf	(___fldiv@a+3)^0,w,c
  6884  002AE6  0B80               	andlw	128
  6885  002AE8  1A15               	xorwf	___fldiv@sign^0,f,c
  6886  002AEA  500C               	movf	(___fldiv@a+3)^0,w,c
  6887  002AEC  240C               	addwf	(___fldiv@a+3)^0,w,c
  6888  002AEE  6E1D               	movwf	___fldiv@aexp^0,c
  6889  002AF0  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6890  002AF2  EF7D  F015         	goto	u6441
  6891  002AF6  EF7F  F015         	goto	u6440
  6892  002AFA                     u6441:
  6893  002AFA  EF80  F015         	goto	l6309
  6894  002AFE                     u6440:
  6895  002AFE  801D               	bsf	___fldiv@aexp^0,0,c
  6896  002B00                     l6309:
  6897  002B00  501D               	movf	___fldiv@aexp^0,w,c
  6898  002B02  B4D8               	btfsc	status,2,c
  6899  002B04  EF86  F015         	goto	u6451
  6900  002B08  EF88  F015         	goto	u6450
  6901  002B0C                     u6451:
  6902  002B0C  EF9D  F015         	goto	l6319
  6903  002B10                     u6450:
  6904  002B10  281D               	incf	___fldiv@aexp^0,w,c
  6905  002B12  A4D8               	btfss	status,2,c
  6906  002B14  EF8E  F015         	goto	u6461
  6907  002B18  EF90  F015         	goto	u6460
  6908  002B1C                     u6461:
  6909  002B1C  EF98  F015         	goto	l6315
  6910  002B20                     u6460:
  6911  002B20  0E00               	movlw	0
  6912  002B22  6E09               	movwf	___fldiv@a^0,c
  6913  002B24  0E00               	movlw	0
  6914  002B26  6E0A               	movwf	(___fldiv@a+1)^0,c
  6915  002B28  0E00               	movlw	0
  6916  002B2A  6E0B               	movwf	(___fldiv@a+2)^0,c
  6917  002B2C  0E00               	movlw	0
  6918  002B2E  6E0C               	movwf	(___fldiv@a+3)^0,c
  6919  002B30                     l6315:
  6920  002B30  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6921  002B32  0E00               	movlw	0
  6922  002B34  6E0C               	movwf	(___fldiv@a+3)^0,c
  6923  002B36  EFA5  F015         	goto	l6321
  6924  002B3A                     l6319:
  6925  002B3A  0E00               	movlw	0
  6926  002B3C  6E09               	movwf	___fldiv@a^0,c
  6927  002B3E  0E00               	movlw	0
  6928  002B40  6E0A               	movwf	(___fldiv@a+1)^0,c
  6929  002B42  0E00               	movlw	0
  6930  002B44  6E0B               	movwf	(___fldiv@a+2)^0,c
  6931  002B46  0E00               	movlw	0
  6932  002B48  6E0C               	movwf	(___fldiv@a+3)^0,c
  6933  002B4A                     l6321:
  6934  002B4A  5009               	movf	___fldiv@a^0,w,c
  6935  002B4C  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6936  002B4E  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6937  002B50  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6938  002B52  A4D8               	btfss	status,2,c
  6939  002B54  EFAE  F015         	goto	u6471
  6940  002B58  EFB0  F015         	goto	u6470
  6941  002B5C                     u6471:
  6942  002B5C  EFC8  F015         	goto	l6333
  6943  002B60                     u6470:
  6944  002B60  0E00               	movlw	0
  6945  002B62  6E05               	movwf	___fldiv@b^0,c
  6946  002B64  0E00               	movlw	0
  6947  002B66  6E06               	movwf	(___fldiv@b+1)^0,c
  6948  002B68  0E00               	movlw	0
  6949  002B6A  6E07               	movwf	(___fldiv@b+2)^0,c
  6950  002B6C  0E00               	movlw	0
  6951  002B6E  6E08               	movwf	(___fldiv@b+3)^0,c
  6952  002B70  0E80               	movlw	128
  6953  002B72  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6954  002B74  0E7F               	movlw	127
  6955  002B76  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6956  002B78                     l6327:
  6957  002B78  5015               	movf	___fldiv@sign^0,w,c
  6958  002B7A  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6959  002B7C  C005  F005         	movff	___fldiv@b,?___fldiv
  6960  002B80  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6961  002B84  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6962  002B88  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6963  002B8C  EF0B  F017         	goto	l1294
  6964  002B90                     l6333:
  6965  002B90  501C               	movf	___fldiv@bexp^0,w,c
  6966  002B92  A4D8               	btfss	status,2,c
  6967  002B94  EFCE  F015         	goto	u6481
  6968  002B98  EFD0  F015         	goto	u6480
  6969  002B9C                     u6481:
  6970  002B9C  EFDA  F015         	goto	l6341
  6971  002BA0                     u6480:
  6972  002BA0  0E00               	movlw	0
  6973  002BA2  6E05               	movwf	?___fldiv^0,c
  6974  002BA4  0E00               	movlw	0
  6975  002BA6  6E06               	movwf	(?___fldiv+1)^0,c
  6976  002BA8  0E00               	movlw	0
  6977  002BAA  6E07               	movwf	(?___fldiv+2)^0,c
  6978  002BAC  0E00               	movlw	0
  6979  002BAE  6E08               	movwf	(?___fldiv+3)^0,c
  6980  002BB0  EF0B  F017         	goto	l1294
  6981  002BB4                     l6341:
  6982  002BB4  501D               	movf	___fldiv@aexp^0,w,c
  6983  002BB6  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6984  002BBA  6A0E               	clrf	(??___fldiv+1)^0,c
  6985  002BBC  5E0D               	subwf	??___fldiv^0,f,c
  6986  002BBE  0E00               	movlw	0
  6987  002BC0  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6988  002BC2  0E7F               	movlw	127
  6989  002BC4  240D               	addwf	??___fldiv^0,w,c
  6990  002BC6  6E16               	movwf	___fldiv@new_exp^0,c
  6991  002BC8  0E00               	movlw	0
  6992  002BCA  200E               	addwfc	(??___fldiv+1)^0,w,c
  6993  002BCC  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6994  002BCE  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6995  002BD2  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6996  002BD6  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6997  002BDA  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6998  002BDE  0E00               	movlw	0
  6999  002BE0  6E05               	movwf	___fldiv@b^0,c
  7000  002BE2  0E00               	movlw	0
  7001  002BE4  6E06               	movwf	(___fldiv@b+1)^0,c
  7002  002BE6  0E00               	movlw	0
  7003  002BE8  6E07               	movwf	(___fldiv@b+2)^0,c
  7004  002BEA  0E00               	movlw	0
  7005  002BEC  6E08               	movwf	(___fldiv@b+3)^0,c
  7006  002BEE  0E00               	movlw	0
  7007  002BF0  6E18               	movwf	___fldiv@grs^0,c
  7008  002BF2  0E00               	movlw	0
  7009  002BF4  6E19               	movwf	(___fldiv@grs+1)^0,c
  7010  002BF6  0E00               	movlw	0
  7011  002BF8  6E1A               	movwf	(___fldiv@grs+2)^0,c
  7012  002BFA  0E00               	movlw	0
  7013  002BFC  6E1B               	movwf	(___fldiv@grs+3)^0,c
  7014  002BFE  0E00               	movlw	0
  7015  002C00  6E1D               	movwf	___fldiv@aexp^0,c
  7016  002C02  EF3B  F016         	goto	l1296
  7017  002C06                     l6351:
  7018  002C06  501D               	movf	___fldiv@aexp^0,w,c
  7019  002C08  B4D8               	btfsc	status,2,c
  7020  002C0A  EF09  F016         	goto	u6491
  7021  002C0E  EF0B  F016         	goto	u6490
  7022  002C12                     u6491:
  7023  002C12  EF22  F016         	goto	l6359
  7024  002C16                     u6490:
  7025  002C16  90D8               	bcf	status,0,c
  7026  002C18  3611               	rlcf	___fldiv@rem^0,f,c
  7027  002C1A  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  7028  002C1C  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  7029  002C1E  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  7030  002C20  90D8               	bcf	status,0,c
  7031  002C22  3605               	rlcf	___fldiv@b^0,f,c
  7032  002C24  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7033  002C26  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7034  002C28  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7035  002C2A  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7036  002C2C  EF1A  F016         	goto	u6501
  7037  002C30  EF1C  F016         	goto	u6500
  7038  002C34                     u6501:
  7039  002C34  EF1D  F016         	goto	l1299
  7040  002C38                     u6500:
  7041  002C38  8005               	bsf	___fldiv@b^0,0,c
  7042  002C3A                     l1299:
  7043  002C3A  90D8               	bcf	status,0,c
  7044  002C3C  3618               	rlcf	___fldiv@grs^0,f,c
  7045  002C3E  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7046  002C40  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7047  002C42  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7048  002C44                     l6359:
  7049  002C44  5009               	movf	___fldiv@a^0,w,c
  7050  002C46  5C11               	subwf	___fldiv@rem^0,w,c
  7051  002C48  500A               	movf	(___fldiv@a+1)^0,w,c
  7052  002C4A  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  7053  002C4C  500B               	movf	(___fldiv@a+2)^0,w,c
  7054  002C4E  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  7055  002C50  500C               	movf	(___fldiv@a+3)^0,w,c
  7056  002C52  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  7057  002C54  A0D8               	btfss	status,0,c
  7058  002C56  EF2F  F016         	goto	u6511
  7059  002C5A  EF31  F016         	goto	u6510
  7060  002C5E                     u6511:
  7061  002C5E  EF3A  F016         	goto	l6365
  7062  002C62                     u6510:
  7063  002C62  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  7064  002C64  5009               	movf	___fldiv@a^0,w,c
  7065  002C66  5E11               	subwf	___fldiv@rem^0,f,c
  7066  002C68  500A               	movf	(___fldiv@a+1)^0,w,c
  7067  002C6A  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  7068  002C6C  500B               	movf	(___fldiv@a+2)^0,w,c
  7069  002C6E  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  7070  002C70  500C               	movf	(___fldiv@a+3)^0,w,c
  7071  002C72  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  7072  002C74                     l6365:
  7073  002C74  2A1D               	incf	___fldiv@aexp^0,f,c
  7074  002C76                     l1296:
  7075  002C76  0E19               	movlw	25
  7076  002C78  641D               	cpfsgt	___fldiv@aexp^0,c
  7077  002C7A  EF41  F016         	goto	u6521
  7078  002C7E  EF43  F016         	goto	u6520
  7079  002C82                     u6521:
  7080  002C82  EF03  F016         	goto	l6351
  7081  002C86                     u6520:
  7082  002C86  5011               	movf	___fldiv@rem^0,w,c
  7083  002C88  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  7084  002C8A  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  7085  002C8C  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  7086  002C8E  B4D8               	btfsc	status,2,c
  7087  002C90  EF4C  F016         	goto	u6531
  7088  002C94  EF4E  F016         	goto	u6530
  7089  002C98                     u6531:
  7090  002C98  EF66  F016         	goto	l6377
  7091  002C9C                     u6530:
  7092  002C9C  8018               	bsf	___fldiv@grs^0,0,c
  7093  002C9E  EF66  F016         	goto	l6377
  7094  002CA2                     l6371:
  7095  002CA2  90D8               	bcf	status,0,c
  7096  002CA4  3605               	rlcf	___fldiv@b^0,f,c
  7097  002CA6  3606               	rlcf	(___fldiv@b+1)^0,f,c
  7098  002CA8  3607               	rlcf	(___fldiv@b+2)^0,f,c
  7099  002CAA  3608               	rlcf	(___fldiv@b+3)^0,f,c
  7100  002CAC  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7101  002CAE  EF5B  F016         	goto	u6541
  7102  002CB2  EF5D  F016         	goto	u6540
  7103  002CB6                     u6541:
  7104  002CB6  EF5E  F016         	goto	l1305
  7105  002CBA                     u6540:
  7106  002CBA  8005               	bsf	___fldiv@b^0,0,c
  7107  002CBC                     l1305:
  7108  002CBC  90D8               	bcf	status,0,c
  7109  002CBE  3618               	rlcf	___fldiv@grs^0,f,c
  7110  002CC0  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  7111  002CC2  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  7112  002CC4  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  7113  002CC6  0616               	decf	___fldiv@new_exp^0,f,c
  7114  002CC8  A0D8               	btfss	status,0,c
  7115  002CCA  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  7116  002CCC                     l6377:
  7117  002CCC  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7118  002CCE  EF6B  F016         	goto	u6551
  7119  002CD2  EF6D  F016         	goto	u6550
  7120  002CD6                     u6551:
  7121  002CD6  EF51  F016         	goto	l6371
  7122  002CDA                     u6550:
  7123  002CDA  0E00               	movlw	0
  7124  002CDC  6E1D               	movwf	___fldiv@aexp^0,c
  7125  002CDE  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  7126  002CE0  EF74  F016         	goto	u6561
  7127  002CE4  EF76  F016         	goto	u6560
  7128  002CE8                     u6561:
  7129  002CE8  EF9A  F016         	goto	l1307
  7130  002CEC                     u6560:
  7131  002CEC  0EFF               	movlw	255
  7132  002CEE  1418               	andwf	___fldiv@grs^0,w,c
  7133  002CF0  6E0D               	movwf	??___fldiv^0,c
  7134  002CF2  0EFF               	movlw	255
  7135  002CF4  1419               	andwf	(___fldiv@grs+1)^0,w,c
  7136  002CF6  6E0E               	movwf	(??___fldiv+1)^0,c
  7137  002CF8  0EFF               	movlw	255
  7138  002CFA  141A               	andwf	(___fldiv@grs+2)^0,w,c
  7139  002CFC  6E0F               	movwf	(??___fldiv+2)^0,c
  7140  002CFE  0E7F               	movlw	127
  7141  002D00  141B               	andwf	(___fldiv@grs+3)^0,w,c
  7142  002D02  6E10               	movwf	(??___fldiv+3)^0,c
  7143  002D04  500D               	movf	??___fldiv^0,w,c
  7144  002D06  100E               	iorwf	(??___fldiv+1)^0,w,c
  7145  002D08  100F               	iorwf	(??___fldiv+2)^0,w,c
  7146  002D0A  1010               	iorwf	(??___fldiv+3)^0,w,c
  7147  002D0C  B4D8               	btfsc	status,2,c
  7148  002D0E  EF8B  F016         	goto	u6571
  7149  002D12  EF8D  F016         	goto	u6570
  7150  002D16                     u6571:
  7151  002D16  EF91  F016         	goto	l1308
  7152  002D1A                     u6570:
  7153  002D1A                     l6385:
  7154  002D1A  0E01               	movlw	1
  7155  002D1C  6E1D               	movwf	___fldiv@aexp^0,c
  7156  002D1E  EF9A  F016         	goto	l1307
  7157  002D22                     l1308:
  7158  002D22  A005               	btfss	___fldiv@b^0,0,c
  7159  002D24  EF96  F016         	goto	u6581
  7160  002D28  EF98  F016         	goto	u6580
  7161  002D2C                     u6581:
  7162  002D2C  EF9A  F016         	goto	l1307
  7163  002D30                     u6580:
  7164  002D30  EF8D  F016         	goto	l6385
  7165  002D34                     l1307:
  7166  002D34  501D               	movf	___fldiv@aexp^0,w,c
  7167  002D36  B4D8               	btfsc	status,2,c
  7168  002D38  EFA0  F016         	goto	u6591
  7169  002D3C  EFA2  F016         	goto	u6590
  7170  002D40                     u6591:
  7171  002D40  EFC6  F016         	goto	l6397
  7172  002D44                     u6590:
  7173  002D44  0E01               	movlw	1
  7174  002D46  2605               	addwf	___fldiv@b^0,f,c
  7175  002D48  0E00               	movlw	0
  7176  002D4A  2206               	addwfc	(___fldiv@b+1)^0,f,c
  7177  002D4C  2207               	addwfc	(___fldiv@b+2)^0,f,c
  7178  002D4E  2208               	addwfc	(___fldiv@b+3)^0,f,c
  7179  002D50  A008               	btfss	(___fldiv@b+3)^0,0,c
  7180  002D52  EFAD  F016         	goto	u6601
  7181  002D56  EFAF  F016         	goto	u6600
  7182  002D5A                     u6601:
  7183  002D5A  EFC6  F016         	goto	l6397
  7184  002D5E                     u6600:
  7185  002D5E  C005  F00D         	movff	___fldiv@b,??___fldiv
  7186  002D62  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  7187  002D66  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  7188  002D6A  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  7189  002D6E  3410               	rlcf	(??___fldiv+3)^0,w,c
  7190  002D70  3210               	rrcf	(??___fldiv+3)^0,f,c
  7191  002D72  320F               	rrcf	(??___fldiv+2)^0,f,c
  7192  002D74  320E               	rrcf	(??___fldiv+1)^0,f,c
  7193  002D76  320D               	rrcf	??___fldiv^0,f,c
  7194  002D78  C00D  F005         	movff	??___fldiv,___fldiv@b
  7195  002D7C  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  7196  002D80  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  7197  002D84  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  7198  002D88  4A16               	infsnz	___fldiv@new_exp^0,f,c
  7199  002D8A  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  7200  002D8C                     l6397:
  7201  002D8C  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7202  002D8E  EFD1  F016         	goto	u6611
  7203  002D92  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7204  002D94  E108               	bnz	u6610
  7205  002D96  2816               	incf	___fldiv@new_exp^0,w,c
  7206  002D98  A0D8               	btfss	status,0,c
  7207  002D9A  EFD1  F016         	goto	u6611
  7208  002D9E  EFD3  F016         	goto	u6610
  7209  002DA2                     u6611:
  7210  002DA2  EFDE  F016         	goto	l6401
  7211  002DA6                     u6610:
  7212  002DA6  0E00               	movlw	0
  7213  002DA8  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7214  002DAA  6816               	setf	___fldiv@new_exp^0,c
  7215  002DAC  0E00               	movlw	0
  7216  002DAE  6E05               	movwf	___fldiv@b^0,c
  7217  002DB0  0E00               	movlw	0
  7218  002DB2  6E06               	movwf	(___fldiv@b+1)^0,c
  7219  002DB4  0E00               	movlw	0
  7220  002DB6  6E07               	movwf	(___fldiv@b+2)^0,c
  7221  002DB8  0E00               	movlw	0
  7222  002DBA  6E08               	movwf	(___fldiv@b+3)^0,c
  7223  002DBC                     l6401:
  7224  002DBC  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7225  002DBE  EFEB  F016         	goto	u6620
  7226  002DC2  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  7227  002DC4  E106               	bnz	u6621
  7228  002DC6  0416               	decf	___fldiv@new_exp^0,w,c
  7229  002DC8  B0D8               	btfsc	status,0,c
  7230  002DCA  EFE9  F016         	goto	u6621
  7231  002DCE  EFEB  F016         	goto	u6620
  7232  002DD2                     u6621:
  7233  002DD2  EFF9  F016         	goto	l6405
  7234  002DD6                     u6620:
  7235  002DD6  0E00               	movlw	0
  7236  002DD8  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7237  002DDA  0E00               	movlw	0
  7238  002DDC  6E16               	movwf	___fldiv@new_exp^0,c
  7239  002DDE  0E00               	movlw	0
  7240  002DE0  6E05               	movwf	___fldiv@b^0,c
  7241  002DE2  0E00               	movlw	0
  7242  002DE4  6E06               	movwf	(___fldiv@b+1)^0,c
  7243  002DE6  0E00               	movlw	0
  7244  002DE8  6E07               	movwf	(___fldiv@b+2)^0,c
  7245  002DEA  0E00               	movlw	0
  7246  002DEC  6E08               	movwf	(___fldiv@b+3)^0,c
  7247  002DEE  0E00               	movlw	0
  7248  002DF0  6E15               	movwf	___fldiv@sign^0,c
  7249  002DF2                     l6405:
  7250  002DF2  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7251  002DF6  A01C               	btfss	___fldiv@bexp^0,0,c
  7252  002DF8  EF00  F017         	goto	u6631
  7253  002DFC  EF02  F017         	goto	u6630
  7254  002E00                     u6631:
  7255  002E00  EF05  F017         	goto	l6411
  7256  002E04                     u6630:
  7257  002E04  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7258  002E06  EF06  F017         	goto	l6413
  7259  002E0A                     l6411:
  7260  002E0A  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7261  002E0C                     l6413:
  7262  002E0C  90D8               	bcf	status,0,c
  7263  002E0E  301C               	rrcf	___fldiv@bexp^0,w,c
  7264  002E10  6E08               	movwf	(___fldiv@b+3)^0,c
  7265  002E12  EFBC  F015         	goto	l6327
  7266  002E16                     l1294:
  7267  002E16  0012               	return		;funcret
  7268  002E18                     __end_of___fldiv:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function ___awmod *****************
  7272 ;; Defined at:
  7273 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  dividend        2    4[COMRAM] int 
  7276 ;;  divisor         2    6[COMRAM] int 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  sign            1    9[COMRAM] unsigned char 
  7279 ;;  counter         1    8[COMRAM] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  2    4[COMRAM] int 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;Total ram usage:        6 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 4
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_efgtoa
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           	psect	text25
  7304  003A6A                     __ptext25:
  7305                           	callstack 0
  7306  003A6A                     ___awmod:
  7307                           	callstack 22
  7308  003A6A  0E00               	movlw	0
  7309  003A6C  6E0A               	movwf	___awmod@sign^0,c
  7310  003A6E  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  7311  003A70  EF3E  F01D         	goto	u6890
  7312  003A74  EF3C  F01D         	goto	u6891
  7313  003A78                     u6891:
  7314  003A78  EF44  F01D         	goto	l6609
  7315  003A7C                     u6890:
  7316  003A7C  6C05               	negf	___awmod@dividend^0,c
  7317  003A7E  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7318  003A80  B0D8               	btfsc	status,0,c
  7319  003A82  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7320  003A84  0E01               	movlw	1
  7321  003A86  6E0A               	movwf	___awmod@sign^0,c
  7322  003A88                     l6609:
  7323  003A88  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  7324  003A8A  EF4B  F01D         	goto	u6900
  7325  003A8E  EF49  F01D         	goto	u6901
  7326  003A92                     u6901:
  7327  003A92  EF4F  F01D         	goto	l6613
  7328  003A96                     u6900:
  7329  003A96  6C07               	negf	___awmod@divisor^0,c
  7330  003A98  1E08               	comf	(___awmod@divisor+1)^0,f,c
  7331  003A9A  B0D8               	btfsc	status,0,c
  7332  003A9C  2A08               	incf	(___awmod@divisor+1)^0,f,c
  7333  003A9E                     l6613:
  7334  003A9E  5007               	movf	___awmod@divisor^0,w,c
  7335  003AA0  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  7336  003AA2  B4D8               	btfsc	status,2,c
  7337  003AA4  EF56  F01D         	goto	u6911
  7338  003AA8  EF58  F01D         	goto	u6910
  7339  003AAC                     u6911:
  7340  003AAC  EF7C  F01D         	goto	l6629
  7341  003AB0                     u6910:
  7342  003AB0  0E01               	movlw	1
  7343  003AB2  6E09               	movwf	___awmod@counter^0,c
  7344  003AB4  EF60  F01D         	goto	l6619
  7345  003AB8                     l6617:
  7346  003AB8  90D8               	bcf	status,0,c
  7347  003ABA  3607               	rlcf	___awmod@divisor^0,f,c
  7348  003ABC  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  7349  003ABE  2A09               	incf	___awmod@counter^0,f,c
  7350  003AC0                     l6619:
  7351  003AC0  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  7352  003AC2  EF65  F01D         	goto	u6921
  7353  003AC6  EF67  F01D         	goto	u6920
  7354  003ACA                     u6921:
  7355  003ACA  EF5C  F01D         	goto	l6617
  7356  003ACE                     u6920:
  7357  003ACE                     l6621:
  7358  003ACE  5007               	movf	___awmod@divisor^0,w,c
  7359  003AD0  5C05               	subwf	___awmod@dividend^0,w,c
  7360  003AD2  5008               	movf	(___awmod@divisor+1)^0,w,c
  7361  003AD4  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  7362  003AD6  A0D8               	btfss	status,0,c
  7363  003AD8  EF70  F01D         	goto	u6931
  7364  003ADC  EF72  F01D         	goto	u6930
  7365  003AE0                     u6931:
  7366  003AE0  EF76  F01D         	goto	l6625
  7367  003AE4                     u6930:
  7368  003AE4  5007               	movf	___awmod@divisor^0,w,c
  7369  003AE6  5E05               	subwf	___awmod@dividend^0,f,c
  7370  003AE8  5008               	movf	(___awmod@divisor+1)^0,w,c
  7371  003AEA  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  7372  003AEC                     l6625:
  7373  003AEC  90D8               	bcf	status,0,c
  7374  003AEE  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  7375  003AF0  3207               	rrcf	___awmod@divisor^0,f,c
  7376  003AF2  2E09               	decfsz	___awmod@counter^0,f,c
  7377  003AF4  EF67  F01D         	goto	l6621
  7378  003AF8                     l6629:
  7379  003AF8  500A               	movf	___awmod@sign^0,w,c
  7380  003AFA  B4D8               	btfsc	status,2,c
  7381  003AFC  EF82  F01D         	goto	u6941
  7382  003B00  EF84  F01D         	goto	u6940
  7383  003B04                     u6941:
  7384  003B04  EF88  F01D         	goto	l6633
  7385  003B08                     u6940:
  7386  003B08  6C05               	negf	___awmod@dividend^0,c
  7387  003B0A  1E06               	comf	(___awmod@dividend+1)^0,f,c
  7388  003B0C  B0D8               	btfsc	status,0,c
  7389  003B0E  2A06               	incf	(___awmod@dividend+1)^0,f,c
  7390  003B10                     l6633:
  7391  003B10  C005  F005         	movff	___awmod@dividend,?___awmod
  7392  003B14  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  7393  003B18  0012               	return		;funcret
  7394  003B1A                     __end_of___awmod:
  7395                           	callstack 0
  7396                           
  7397 ;; *************** function ___awdiv *****************
  7398 ;; Defined at:
  7399 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  dividend        2    4[COMRAM] int 
  7402 ;;  divisor         2    6[COMRAM] int 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  quotient        2   10[COMRAM] int 
  7405 ;;  sign            1    9[COMRAM] unsigned char 
  7406 ;;  counter         1    8[COMRAM] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  2    4[COMRAM] int 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7419 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7420 ;;Total ram usage:        8 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; Hardware stack levels required when called: 4
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_efgtoa
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text26
  7431  003822                     __ptext26:
  7432                           	callstack 0
  7433  003822                     ___awdiv:
  7434                           	callstack 22
  7435  003822  0E00               	movlw	0
  7436  003824  6E0A               	movwf	___awdiv@sign^0,c
  7437  003826  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7438  003828  EF1A  F01C         	goto	u6830
  7439  00382C  EF18  F01C         	goto	u6831
  7440  003830                     u6831:
  7441  003830  EF20  F01C         	goto	l6565
  7442  003834                     u6830:
  7443  003834  6C07               	negf	___awdiv@divisor^0,c
  7444  003836  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7445  003838  B0D8               	btfsc	status,0,c
  7446  00383A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7447  00383C  0E01               	movlw	1
  7448  00383E  6E0A               	movwf	___awdiv@sign^0,c
  7449  003840                     l6565:
  7450  003840  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7451  003842  EF27  F01C         	goto	u6840
  7452  003846  EF25  F01C         	goto	u6841
  7453  00384A                     u6841:
  7454  00384A  EF2D  F01C         	goto	l6571
  7455  00384E                     u6840:
  7456  00384E  6C05               	negf	___awdiv@dividend^0,c
  7457  003850  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7458  003852  B0D8               	btfsc	status,0,c
  7459  003854  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7460  003856  0E01               	movlw	1
  7461  003858  1A0A               	xorwf	___awdiv@sign^0,f,c
  7462  00385A                     l6571:
  7463  00385A  0E00               	movlw	0
  7464  00385C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7465  00385E  0E00               	movlw	0
  7466  003860  6E0B               	movwf	___awdiv@quotient^0,c
  7467  003862  5007               	movf	___awdiv@divisor^0,w,c
  7468  003864  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7469  003866  B4D8               	btfsc	status,2,c
  7470  003868  EF38  F01C         	goto	u6851
  7471  00386C  EF3A  F01C         	goto	u6850
  7472  003870                     u6851:
  7473  003870  EF62  F01C         	goto	l6593
  7474  003874                     u6850:
  7475  003874  0E01               	movlw	1
  7476  003876  6E09               	movwf	___awdiv@counter^0,c
  7477  003878  EF42  F01C         	goto	l6579
  7478  00387C                     l6577:
  7479  00387C  90D8               	bcf	status,0,c
  7480  00387E  3607               	rlcf	___awdiv@divisor^0,f,c
  7481  003880  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7482  003882  2A09               	incf	___awdiv@counter^0,f,c
  7483  003884                     l6579:
  7484  003884  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7485  003886  EF47  F01C         	goto	u6861
  7486  00388A  EF49  F01C         	goto	u6860
  7487  00388E                     u6861:
  7488  00388E  EF3E  F01C         	goto	l6577
  7489  003892                     u6860:
  7490  003892                     l6581:
  7491  003892  90D8               	bcf	status,0,c
  7492  003894  360B               	rlcf	___awdiv@quotient^0,f,c
  7493  003896  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7494  003898  5007               	movf	___awdiv@divisor^0,w,c
  7495  00389A  5C05               	subwf	___awdiv@dividend^0,w,c
  7496  00389C  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7497  00389E  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7498  0038A0  A0D8               	btfss	status,0,c
  7499  0038A2  EF55  F01C         	goto	u6871
  7500  0038A6  EF57  F01C         	goto	u6870
  7501  0038AA                     u6871:
  7502  0038AA  EF5C  F01C         	goto	l6589
  7503  0038AE                     u6870:
  7504  0038AE  5007               	movf	___awdiv@divisor^0,w,c
  7505  0038B0  5E05               	subwf	___awdiv@dividend^0,f,c
  7506  0038B2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7507  0038B4  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7508  0038B6  800B               	bsf	___awdiv@quotient^0,0,c
  7509  0038B8                     l6589:
  7510  0038B8  90D8               	bcf	status,0,c
  7511  0038BA  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7512  0038BC  3207               	rrcf	___awdiv@divisor^0,f,c
  7513  0038BE  2E09               	decfsz	___awdiv@counter^0,f,c
  7514  0038C0  EF49  F01C         	goto	l6581
  7515  0038C4                     l6593:
  7516  0038C4  500A               	movf	___awdiv@sign^0,w,c
  7517  0038C6  B4D8               	btfsc	status,2,c
  7518  0038C8  EF68  F01C         	goto	u6881
  7519  0038CC  EF6A  F01C         	goto	u6880
  7520  0038D0                     u6881:
  7521  0038D0  EF6E  F01C         	goto	l6597
  7522  0038D4                     u6880:
  7523  0038D4  6C0B               	negf	___awdiv@quotient^0,c
  7524  0038D6  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7525  0038D8  B0D8               	btfsc	status,0,c
  7526  0038DA  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7527  0038DC                     l6597:
  7528  0038DC  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7529  0038E0  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7530  0038E4  0012               	return		;funcret
  7531  0038E6                     __end_of___awdiv:
  7532                           	callstack 0
  7533                           
  7534 ;; *************** function _atoi *****************
  7535 ;; Defined at:
  7536 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  s               2   11[COMRAM] PTR const unsigned char 
  7539 ;;		 -> STR_1(24), 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  n               2   24[COMRAM] int 
  7542 ;;  neg             2   17[COMRAM] int 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  2   11[COMRAM] int 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7553 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;Total ram usage:       15 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 5
  7559 ;; This function calls:
  7560 ;;		___wmul
  7561 ;;		_isdigit
  7562 ;;		_isspace
  7563 ;; This function is called by:
  7564 ;;		_vfpfcnvrt
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text27
  7569  0031DE                     __ptext27:
  7570                           	callstack 0
  7571  0031DE                     _atoi:
  7572                           	callstack 22
  7573  0031DE  0E00               	movlw	0
  7574  0031E0  6E1A               	movwf	(atoi@n+1)^0,c
  7575  0031E2  0E00               	movlw	0
  7576  0031E4  6E19               	movwf	atoi@n^0,c
  7577  0031E6  0E00               	movlw	0
  7578  0031E8  6E13               	movwf	(atoi@neg+1)^0,c
  7579  0031EA  0E00               	movlw	0
  7580  0031EC  6E12               	movwf	atoi@neg^0,c
  7581  0031EE  EFFB  F018         	goto	l7141
  7582  0031F2                     l7139:
  7583  0031F2  4A0C               	infsnz	atoi@s^0,f,c
  7584  0031F4  2A0D               	incf	(atoi@s+1)^0,f,c
  7585  0031F6                     l7141:
  7586  0031F6  0E01               	movlw	1
  7587  0031F8  6E18               	movwf	_atoi$2156^0,c
  7588  0031FA  C00C  FFF6         	movff	atoi@s,tblptrl
  7589  0031FE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7590  003202                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7591  003202  6AF8               	clrf	tblptru,c
  7592  003204                     	endif
  7593  003204                     	if	0	;tblptru may be non-zero
  7594  003204                     	endif
  7595  003204  0008               	tblrd		*
  7596  003206  50F5               	movf	tablat,w,c
  7597  003208  0A20               	xorlw	32
  7598  00320A  B4D8               	btfsc	status,2,c
  7599  00320C  EF0A  F019         	goto	u7951
  7600  003210  EF0C  F019         	goto	u7950
  7601  003214                     u7951:
  7602  003214  EF2A  F019         	goto	l7149
  7603  003218                     u7950:
  7604  003218  0EF7               	movlw	247
  7605  00321A  6E0E               	movwf	??_atoi^0,c
  7606  00321C  0EFF               	movlw	255
  7607  00321E  6E0F               	movwf	(??_atoi+1)^0,c
  7608  003220  C00C  FFF6         	movff	atoi@s,tblptrl
  7609  003224  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7610  003228                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7611  003228  6AF8               	clrf	tblptru,c
  7612  00322A                     	endif
  7613  00322A                     	if	0	;tblptru may be non-zero
  7614  00322A                     	endif
  7615  00322A  0008               	tblrd		*
  7616  00322C  50F5               	movf	tablat,w,c
  7617  00322E  6E10               	movwf	(??_atoi+2)^0,c
  7618  003230  6A11               	clrf	(??_atoi+3)^0,c
  7619  003232  500E               	movf	??_atoi^0,w,c
  7620  003234  2610               	addwf	(??_atoi+2)^0,f,c
  7621  003236  500F               	movf	(??_atoi+1)^0,w,c
  7622  003238  2211               	addwfc	(??_atoi+3)^0,f,c
  7623  00323A  5011               	movf	(??_atoi+3)^0,w,c
  7624  00323C  E109               	bnz	u7960
  7625  00323E  0E05               	movlw	5
  7626  003240  5C10               	subwf	(??_atoi+2)^0,w,c
  7627  003242  A0D8               	btfss	status,0,c
  7628  003244  EF26  F019         	goto	u7961
  7629  003248  EF28  F019         	goto	u7960
  7630  00324C                     u7961:
  7631  00324C  EF2A  F019         	goto	l7149
  7632  003250                     u7960:
  7633  003250  0E00               	movlw	0
  7634  003252  6E18               	movwf	_atoi$2156^0,c
  7635  003254                     l7149:
  7636  003254  C018  F014         	movff	_atoi$2156,_atoi$2155
  7637  003258  6A15               	clrf	(_atoi$2155+1)^0,c
  7638  00325A  5014               	movf	_atoi$2155^0,w,c
  7639  00325C  1015               	iorwf	(_atoi$2155+1)^0,w,c
  7640  00325E  A4D8               	btfss	status,2,c
  7641  003260  EF34  F019         	goto	u7971
  7642  003264  EF36  F019         	goto	u7970
  7643  003268                     u7971:
  7644  003268  EFF9  F018         	goto	l7139
  7645  00326C                     u7970:
  7646  00326C  EF40  F019         	goto	l7159
  7647  003270                     l7155:
  7648  003270  0E00               	movlw	0
  7649  003272  6E13               	movwf	(atoi@neg+1)^0,c
  7650  003274  0E01               	movlw	1
  7651  003276  6E12               	movwf	atoi@neg^0,c
  7652  003278                     l7157:
  7653  003278  4A0C               	infsnz	atoi@s^0,f,c
  7654  00327A  2A0D               	incf	(atoi@s+1)^0,f,c
  7655  00327C  EF77  F019         	goto	l7165
  7656  003280                     l7159:
  7657  003280  C00C  FFF6         	movff	atoi@s,tblptrl
  7658  003284  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7659  003288                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7660  003288  6AF8               	clrf	tblptru,c
  7661  00328A                     	endif
  7662  00328A                     	if	0	;tblptru may be non-zero
  7663  00328A                     	endif
  7664  00328A  0008               	tblrd		*
  7665  00328C  50F5               	movf	tablat,w,c
  7666  00328E  6E0E               	movwf	??_atoi^0,c
  7667  003290  6A0F               	clrf	(??_atoi+1)^0,c
  7668                           
  7669                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7670                           ; Switch size 1, requested type "simple"
  7671                           ; Number of cases is 1, Range of values is 0 to 0
  7672                           ; switch strategies available:
  7673                           ; Name         Instructions Cycles
  7674                           ; simple_byte            4     3 (average)
  7675                           ;	Chosen strategy is simple_byte
  7676  003292  500F               	movf	(??_atoi+1)^0,w,c
  7677  003294  0A00               	xorlw	0	; case 0
  7678  003296  B4D8               	btfsc	status,2,c
  7679  003298  EF50  F019         	goto	l7417
  7680  00329C  EF77  F019         	goto	l7165
  7681  0032A0                     l7417:
  7682                           
  7683                           ; Switch size 1, requested type "simple"
  7684                           ; Number of cases is 2, Range of values is 43 to 45
  7685                           ; switch strategies available:
  7686                           ; Name         Instructions Cycles
  7687                           ; simple_byte            7     4 (average)
  7688                           ;	Chosen strategy is simple_byte
  7689  0032A0  500E               	movf	??_atoi^0,w,c
  7690  0032A2  0A2B               	xorlw	43	; case 43
  7691  0032A4  B4D8               	btfsc	status,2,c
  7692  0032A6  EF3C  F019         	goto	l7157
  7693  0032AA  0A06               	xorlw	6	; case 45
  7694  0032AC  B4D8               	btfsc	status,2,c
  7695  0032AE  EF38  F019         	goto	l7155
  7696  0032B2  EF77  F019         	goto	l7165
  7697  0032B6                     l7161:
  7698  0032B6  C019  F005         	movff	atoi@n,___wmul@multiplier
  7699  0032BA  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  7700  0032BE  0E00               	movlw	0
  7701  0032C0  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7702  0032C2  0E0A               	movlw	10
  7703  0032C4  6E07               	movwf	___wmul@multiplicand^0,c
  7704  0032C6  EC79  F023         	call	___wmul	;wreg free
  7705  0032CA  C00C  FFF6         	movff	atoi@s,tblptrl
  7706  0032CE  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7707  0032D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7708  0032D2  6AF8               	clrf	tblptru,c
  7709  0032D4                     	endif
  7710  0032D4                     	if	0	;tblptru may be non-zero
  7711  0032D4                     	endif
  7712  0032D4  0008               	tblrd		*
  7713  0032D6  50F5               	movf	tablat,w,c
  7714  0032D8  5E05               	subwf	?___wmul^0,f,c
  7715  0032DA  0E00               	movlw	0
  7716  0032DC  5A06               	subwfb	(?___wmul+1)^0,f,c
  7717  0032DE  0E30               	movlw	48
  7718  0032E0  2405               	addwf	?___wmul^0,w,c
  7719  0032E2  6E19               	movwf	atoi@n^0,c
  7720  0032E4  0E00               	movlw	0
  7721  0032E6  2006               	addwfc	(?___wmul+1)^0,w,c
  7722  0032E8  6E1A               	movwf	(atoi@n+1)^0,c
  7723  0032EA  EF3C  F019         	goto	l7157
  7724  0032EE                     l7165:
  7725  0032EE  0ED0               	movlw	208
  7726  0032F0  6E0E               	movwf	??_atoi^0,c
  7727  0032F2  0EFF               	movlw	255
  7728  0032F4  6E0F               	movwf	(??_atoi+1)^0,c
  7729  0032F6  C00C  FFF6         	movff	atoi@s,tblptrl
  7730  0032FA  C00D  FFF7         	movff	atoi@s+1,tblptrh
  7731  0032FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7732  0032FE  6AF8               	clrf	tblptru,c
  7733  003300                     	endif
  7734  003300                     	if	0	;tblptru may be non-zero
  7735  003300                     	endif
  7736  003300  0008               	tblrd		*
  7737  003302  50F5               	movf	tablat,w,c
  7738  003304  6E10               	movwf	(??_atoi+2)^0,c
  7739  003306  6A11               	clrf	(??_atoi+3)^0,c
  7740  003308  500E               	movf	??_atoi^0,w,c
  7741  00330A  2610               	addwf	(??_atoi+2)^0,f,c
  7742  00330C  500F               	movf	(??_atoi+1)^0,w,c
  7743  00330E  2211               	addwfc	(??_atoi+3)^0,f,c
  7744  003310  5011               	movf	(??_atoi+3)^0,w,c
  7745  003312  E10A               	bnz	u7980
  7746  003314  0E0A               	movlw	10
  7747  003316  5C10               	subwf	(??_atoi+2)^0,w,c
  7748  003318  A0D8               	btfss	status,0,c
  7749  00331A  EF91  F019         	goto	u7981
  7750  00331E  EF94  F019         	goto	u7980
  7751  003322                     u7981:
  7752  003322  0E01               	movlw	1
  7753  003324  EF95  F019         	goto	u7990
  7754  003328                     u7980:
  7755  003328  0E00               	movlw	0
  7756  00332A                     u7990:
  7757  00332A  6E16               	movwf	_atoi$2157^0,c
  7758  00332C  6A17               	clrf	(_atoi$2157+1)^0,c
  7759  00332E  5016               	movf	_atoi$2157^0,w,c
  7760  003330  1017               	iorwf	(_atoi$2157+1)^0,w,c
  7761  003332  A4D8               	btfss	status,2,c
  7762  003334  EF9E  F019         	goto	u8001
  7763  003338  EFA0  F019         	goto	u8000
  7764  00333C                     u8001:
  7765  00333C  EF5B  F019         	goto	l7161
  7766  003340                     u8000:
  7767  003340  5012               	movf	atoi@neg^0,w,c
  7768  003342  1013               	iorwf	(atoi@neg+1)^0,w,c
  7769  003344  A4D8               	btfss	status,2,c
  7770  003346  EFA7  F019         	goto	u8011
  7771  00334A  EFA9  F019         	goto	u8010
  7772  00334E                     u8011:
  7773  00334E  EFB7  F019         	goto	l1599
  7774  003352                     u8010:
  7775  003352  C019  F00E         	movff	atoi@n,??_atoi
  7776  003356  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7777  00335A  1E0E               	comf	??_atoi^0,f,c
  7778  00335C  1E0F               	comf	(??_atoi+1)^0,f,c
  7779  00335E  4A0E               	infsnz	??_atoi^0,f,c
  7780  003360  2A0F               	incf	(??_atoi+1)^0,f,c
  7781  003362  C00E  F00C         	movff	??_atoi,?_atoi
  7782  003366  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7783  00336A  EFBB  F019         	goto	l1602
  7784  00336E                     l1599:
  7785  00336E  C019  F00C         	movff	atoi@n,?_atoi
  7786  003372  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7787  003376                     l1602:
  7788  003376  0012               	return		;funcret
  7789  003378                     __end_of_atoi:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _isspace *****************
  7793 ;; Defined at:
  7794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  c               2    4[COMRAM] int 
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  2    4[COMRAM] int 
  7801 ;; Registers used:
  7802 ;;		wreg, status,2, status,0
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7808 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7812 ;;Total ram usage:        7 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 4
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_atoi
  7819 ;; This function uses a non-reentrant model
  7820 ;;
  7821                           
  7822                           	psect	text28
  7823  0042A0                     __ptext28:
  7824                           	callstack 0
  7825  0042A0                     _isspace:
  7826                           	callstack 22
  7827  0042A0  0E01               	movlw	1
  7828  0042A2  6E0B               	movwf	_isspace$2186^0,c
  7829  0042A4  0E20               	movlw	32
  7830  0042A6  1805               	xorwf	isspace@c^0,w,c
  7831  0042A8  1006               	iorwf	(isspace@c+1)^0,w,c
  7832  0042AA  B4D8               	btfsc	status,2,c
  7833  0042AC  EF5A  F021         	goto	u7391
  7834  0042B0  EF5C  F021         	goto	u7390
  7835  0042B4                     u7391:
  7836  0042B4  EF75  F021         	goto	l6825
  7837  0042B8                     u7390:
  7838  0042B8  0EF7               	movlw	247
  7839  0042BA  6E07               	movwf	??_isspace^0,c
  7840  0042BC  0EFF               	movlw	255
  7841  0042BE  6E08               	movwf	(??_isspace+1)^0,c
  7842  0042C0  C005  F009         	movff	isspace@c,??_isspace+2
  7843  0042C4  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7844  0042C8  5007               	movf	??_isspace^0,w,c
  7845  0042CA  2609               	addwf	(??_isspace+2)^0,f,c
  7846  0042CC  5008               	movf	(??_isspace+1)^0,w,c
  7847  0042CE  220A               	addwfc	(??_isspace+3)^0,f,c
  7848  0042D0  500A               	movf	(??_isspace+3)^0,w,c
  7849  0042D2  E109               	bnz	u7400
  7850  0042D4  0E05               	movlw	5
  7851  0042D6  5C09               	subwf	(??_isspace+2)^0,w,c
  7852  0042D8  A0D8               	btfss	status,0,c
  7853  0042DA  EF71  F021         	goto	u7401
  7854  0042DE  EF73  F021         	goto	u7400
  7855  0042E2                     u7401:
  7856  0042E2  EF75  F021         	goto	l6825
  7857  0042E6                     u7400:
  7858  0042E6  0E00               	movlw	0
  7859  0042E8  6E0B               	movwf	_isspace$2186^0,c
  7860  0042EA                     l6825:
  7861  0042EA  C00B  F005         	movff	_isspace$2186,?_isspace
  7862  0042EE  6A06               	clrf	(?_isspace+1)^0,c
  7863  0042F0  0012               	return		;funcret
  7864  0042F2                     __end_of_isspace:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _isdigit *****************
  7868 ;; Defined at:
  7869 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  c               2    4[COMRAM] int 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    4[COMRAM] int 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;Total ram usage:        6 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 4
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_vfpfcnvrt
  7894 ;;		_atoi
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text29
  7899  0044F8                     __ptext29:
  7900                           	callstack 0
  7901  0044F8                     _isdigit:
  7902                           	callstack 23
  7903  0044F8  0ED0               	movlw	208
  7904  0044FA  6E07               	movwf	??_isdigit^0,c
  7905  0044FC  0EFF               	movlw	255
  7906  0044FE  6E08               	movwf	(??_isdigit+1)^0,c
  7907  004500  C005  F009         	movff	isdigit@c,??_isdigit+2
  7908  004504  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7909  004508  5007               	movf	??_isdigit^0,w,c
  7910  00450A  2609               	addwf	(??_isdigit+2)^0,f,c
  7911  00450C  5008               	movf	(??_isdigit+1)^0,w,c
  7912  00450E  220A               	addwfc	(??_isdigit+3)^0,f,c
  7913  004510  500A               	movf	(??_isdigit+3)^0,w,c
  7914  004512  E10A               	bnz	u7370
  7915  004514  0E0A               	movlw	10
  7916  004516  5C09               	subwf	(??_isdigit+2)^0,w,c
  7917  004518  A0D8               	btfss	status,0,c
  7918  00451A  EF91  F022         	goto	u7371
  7919  00451E  EF94  F022         	goto	u7370
  7920  004522                     u7371:
  7921  004522  0E01               	movlw	1
  7922  004524  EF95  F022         	goto	u7380
  7923  004528                     u7370:
  7924  004528  0E00               	movlw	0
  7925  00452A                     u7380:
  7926  00452A  6E05               	movwf	?_isdigit^0,c
  7927  00452C  6A06               	clrf	(?_isdigit+1)^0,c
  7928  00452E  0012               	return		;funcret
  7929  004530                     __end_of_isdigit:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function ___wmul *****************
  7933 ;; Defined at:
  7934 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  multiplier      2    4[COMRAM] unsigned int 
  7937 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  product         2    8[COMRAM] unsigned int 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  2    4[COMRAM] unsigned int 
  7942 ;; Registers used:
  7943 ;;		wreg, status,2, status,0, prodl, prodh
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;Total ram usage:        6 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 4
  7956 ;; This function calls:
  7957 ;;		Nothing
  7958 ;; This function is called by:
  7959 ;;		_atoi
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text30
  7964  0046F2                     __ptext30:
  7965                           	callstack 0
  7966  0046F2                     ___wmul:
  7967                           	callstack 22
  7968  0046F2  5005               	movf	___wmul@multiplier^0,w,c
  7969  0046F4  0207               	mulwf	___wmul@multiplicand^0,c
  7970  0046F6  CFF3 F009          	movff	prodl,___wmul@product
  7971  0046FA  CFF4 F00A          	movff	prodh,___wmul@product+1
  7972  0046FE  5005               	movf	___wmul@multiplier^0,w,c
  7973  004700  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7974  004702  50F3               	movf	243,w,c
  7975  004704  260A               	addwf	(___wmul@product+1)^0,f,c
  7976  004706  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7977  004708  0207               	mulwf	___wmul@multiplicand^0,c
  7978  00470A  50F3               	movf	243,w,c
  7979  00470C  260A               	addwf	(___wmul@product+1)^0,f,c
  7980  00470E  C009  F005         	movff	___wmul@product,?___wmul
  7981  004712  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7982  004716  0012               	return		;funcret
  7983  004718                     __end_of___wmul:
  7984                           	callstack 0
  7985                           
  7986 ;; *************** function _VEML6030_Init *****************
  7987 ;; Defined at:
  7988 ;;		line 26 in file "veml6030.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;		None
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;  config          2    0        unsigned short 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;Total ram usage:        1 bytes
  8007 ;; Hardware stack levels used: 1
  8008 ;; Hardware stack levels required when called: 13
  8009 ;; This function calls:
  8010 ;;		_I2C_Write1ByteRegister
  8011 ;; This function is called by:
  8012 ;;		_main
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           	psect	text31
  8017  00473C                     __ptext31:
  8018                           	callstack 0
  8019  00473C                     _VEML6030_Init:
  8020                           	callstack 17
  8021  00473C                     
  8022                           ;veml6030.c: 27:     uint16_t config;;veml6030.c: 29:     I2C_Write1ByteRegister(0x10,0x
      +                          00,0x00);
  8023  00473C  0E00               	movlw	0
  8024  00473E  6E16               	movwf	I2C_Write1ByteRegister@reg^0,c
  8025  004740  0E00               	movlw	0
  8026  004742  6E17               	movwf	I2C_Write1ByteRegister@data^0,c
  8027  004744  0E10               	movlw	16
  8028  004746  ECF8  F01F         	call	_I2C_Write1ByteRegister
  8029  00474A                     
  8030                           ;veml6030.c: 33:     _delay((unsigned long)((10)*(8000000/4000.0)));
  8031  00474A  0E1A               	movlw	26
  8032  00474C  6E19               	movwf	??_VEML6030_Init^0,c
  8033  00474E  0EF8               	movlw	248
  8034  004750                     u8237:
  8035  004750  2EE8               	decfsz	wreg,f,c
  8036  004752  D7FE               	bra	u8237
  8037  004754  2E19               	decfsz	??_VEML6030_Init^0,f,c
  8038  004756  D7FC               	bra	u8237
  8039  004758  F000 F000          	nop2	
  8040  00475C  0012               	return		;funcret
  8041  00475E                     __end_of_VEML6030_Init:
  8042                           	callstack 0
  8043                           
  8044 ;; *************** function _I2C_Write1ByteRegister *****************
  8045 ;; Defined at:
  8046 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;  address         1    wreg     unsigned char 
  8049 ;;  reg             1   21[COMRAM] unsigned char 
  8050 ;;  data            1   22[COMRAM] unsigned char 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  address         1   23[COMRAM] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;Total ram usage:        3 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 12
  8069 ;; This function calls:
  8070 ;;		_I2C_Close
  8071 ;;		_I2C_MasterWrite
  8072 ;;		_I2C_Open
  8073 ;;		_I2C_SetAddressNackCallback
  8074 ;;		_I2C_SetBuffer
  8075 ;;		_I2C_SetDataCompleteCallback
  8076 ;; This function is called by:
  8077 ;;		_VEML6030_Init
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text32
  8082  003FF0                     __ptext32:
  8083                           	callstack 0
  8084  003FF0                     _I2C_Write1ByteRegister:
  8085                           	callstack 17
  8086                           
  8087                           ;incstack = 0
  8088                           ;I2C_Write1ByteRegister@address stored from wreg
  8089  003FF0  6E18               	movwf	I2C_Write1ByteRegister@address^0,c
  8090  003FF2                     l5579:
  8091  003FF2  5018               	movf	I2C_Write1ByteRegister@address^0,w,c
  8092  003FF4  EC80  F01E         	call	_I2C_Open
  8093  003FF8  0900               	iorlw	0
  8094  003FFA  B4D8               	btfsc	status,2,c
  8095  003FFC  EF02  F020         	goto	u5491
  8096  004000  EF04  F020         	goto	u5490
  8097  004004                     u5491:
  8098  004004  EFF9  F01F         	goto	l5579
  8099  004008                     u5490:
  8100  004008                     
  8101                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  8102  004008  0EC2               	movlw	low _wr1RegCompleteHandler
  8103  00400A  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  8104  00400C  0E45               	movlw	high _wr1RegCompleteHandler
  8105  00400E  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  8106  004010  0E17               	movlw	low I2C_Write1ByteRegister@data
  8107  004012  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  8108  004014  0E00               	movlw	high I2C_Write1ByteRegister@data
  8109  004016  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  8110  004018  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
  8111  00401C                     
  8112                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  8113  00401C  0E16               	movlw	low I2C_Write1ByteRegister@reg
  8114  00401E  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  8115  004020  0E00               	movlw	high I2C_Write1ByteRegister@reg
  8116  004022  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  8117  004024  0E00               	movlw	0
  8118  004026  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  8119  004028  0E01               	movlw	1
  8120  00402A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  8121  00402C  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
  8122  004030                     
  8123                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  8124  004030  0E00               	movlw	0
  8125  004032  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8126  004034  0E00               	movlw	0
  8127  004036  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8128  004038  0E00               	movlw	0
  8129  00403A  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8130  00403C  0E00               	movlw	0
  8131  00403E  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8132  004040  ECCF  F023         	call	_I2C_SetAddressNackCallback	;wreg free
  8133  004044                     
  8134                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  8135  004044  EC53  F024         	call	_I2C_MasterWrite	;wreg free
  8136  004048                     l5589:
  8137  004048  EC39  F023         	call	_I2C_Close	;wreg free
  8138  00404C  06E8               	decf	wreg,f,c
  8139  00404E  B4D8               	btfsc	status,2,c
  8140  004050  EF2C  F020         	goto	u5501
  8141  004054  EF2E  F020         	goto	u5500
  8142  004058                     u5501:
  8143  004058  EF24  F020         	goto	l5589
  8144  00405C                     u5500:
  8145  00405C  0012               	return		;funcret
  8146  00405E                     __end_of_I2C_Write1ByteRegister:
  8147                           	callstack 0
  8148                           
  8149 ;; *************** function _VEML6030_GetValue *****************
  8150 ;; Defined at:
  8151 ;;		line 36 in file "veml6030.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;  lightDataAnz    4   33[COMRAM] float 
  8156 ;;  data            2   37[COMRAM] unsigned short 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  4   29[COMRAM] float 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;Total ram usage:       10 bytes
  8171 ;; Hardware stack levels used: 1
  8172 ;; Hardware stack levels required when called: 13
  8173 ;; This function calls:
  8174 ;;		_I2C_Read2ByteRegister
  8175 ;;		___xxtofl
  8176 ;; This function is called by:
  8177 ;;		_main
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text33
  8182  004338                     __ptext33:
  8183                           	callstack 0
  8184  004338                     _VEML6030_GetValue:
  8185                           	callstack 17
  8186  004338                     
  8187                           ;veml6030.c: 37:     float lightDataAnz;;veml6030.c: 38:     uint16_t data;;veml6030.c: 
      +                          40:     data = I2C_Read2ByteRegister(0x10,0x04);
  8188  004338  0E04               	movlw	4
  8189  00433A  6E16               	movwf	I2C_Read2ByteRegister@reg^0,c
  8190  00433C  0E10               	movlw	16
  8191  00433E  ECC7  F01E         	call	_I2C_Read2ByteRegister
  8192  004342  C016  F026         	movff	?_I2C_Read2ByteRegister,VEML6030_GetValue@data
  8193  004346  C017  F027         	movff	?_I2C_Read2ByteRegister+1,VEML6030_GetValue@data+1
  8194  00434A                     
  8195                           ;veml6030.c: 41:     lightDataAnz = data;
  8196  00434A  C026  F005         	movff	VEML6030_GetValue@data,___xxtofl@val
  8197  00434E  C027  F006         	movff	VEML6030_GetValue@data+1,___xxtofl@val+1
  8198  004352  6A07               	clrf	(___xxtofl@val+2)^0,c
  8199  004354  6A08               	clrf	(___xxtofl@val+3)^0,c
  8200  004356  0E00               	movlw	0
  8201  004358  EC15  F018         	call	___xxtofl
  8202  00435C  C005  F022         	movff	?___xxtofl,VEML6030_GetValue@lightDataAnz
  8203  004360  C006  F023         	movff	?___xxtofl+1,VEML6030_GetValue@lightDataAnz+1
  8204  004364  C007  F024         	movff	?___xxtofl+2,VEML6030_GetValue@lightDataAnz+2
  8205  004368  C008  F025         	movff	?___xxtofl+3,VEML6030_GetValue@lightDataAnz+3
  8206  00436C                     
  8207                           ;veml6030.c: 43:     return lightDataAnz;
  8208  00436C  C022  F01E         	movff	VEML6030_GetValue@lightDataAnz,?_VEML6030_GetValue
  8209  004370  C023  F01F         	movff	VEML6030_GetValue@lightDataAnz+1,?_VEML6030_GetValue+1
  8210  004374  C024  F020         	movff	VEML6030_GetValue@lightDataAnz+2,?_VEML6030_GetValue+2
  8211  004378  C025  F021         	movff	VEML6030_GetValue@lightDataAnz+3,?_VEML6030_GetValue+3
  8212  00437C  0012               	return		;funcret
  8213  00437E                     __end_of_VEML6030_GetValue:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function ___xxtofl *****************
  8217 ;; Defined at:
  8218 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  sign            1    wreg     unsigned char 
  8221 ;;  val             4    4[COMRAM] long 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;  sign            1   12[COMRAM] unsigned char 
  8224 ;;  arg             4   14[COMRAM] unsigned long 
  8225 ;;  exp             1   13[COMRAM] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  4    4[COMRAM] unsigned char 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8236 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8238 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;Total ram usage:       14 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 4
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_VEML6030_GetValue
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text34
  8250  00302A                     __ptext34:
  8251                           	callstack 0
  8252  00302A                     ___xxtofl:
  8253                           	callstack 25
  8254                           
  8255                           ;incstack = 0
  8256                           ;___xxtofl@sign stored from wreg
  8257  00302A  6E0D               	movwf	___xxtofl@sign^0,c
  8258  00302C  500D               	movf	___xxtofl@sign^0,w,c
  8259  00302E  B4D8               	btfsc	status,2,c
  8260  003030  EF1C  F018         	goto	u5511
  8261  003034  EF1E  F018         	goto	u5510
  8262  003038                     u5511:
  8263  003038  EF40  F018         	goto	l1367
  8264  00303C                     u5510:
  8265  00303C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8266  00303E  EF25  F018         	goto	u5520
  8267  003042  EF23  F018         	goto	u5521
  8268  003046                     u5521:
  8269  003046  EF40  F018         	goto	l1367
  8270  00304A                     u5520:
  8271  00304A  C005  F009         	movff	___xxtofl@val,??___xxtofl
  8272  00304E  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  8273  003052  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  8274  003056  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  8275  00305A  1E09               	comf	??___xxtofl^0,f,c
  8276  00305C  1E0A               	comf	(??___xxtofl+1)^0,f,c
  8277  00305E  1E0B               	comf	(??___xxtofl+2)^0,f,c
  8278  003060  1E0C               	comf	(??___xxtofl+3)^0,f,c
  8279  003062  2A09               	incf	??___xxtofl^0,f,c
  8280  003064  0E00               	movlw	0
  8281  003066  220A               	addwfc	(??___xxtofl+1)^0,f,c
  8282  003068  220B               	addwfc	(??___xxtofl+2)^0,f,c
  8283  00306A  220C               	addwfc	(??___xxtofl+3)^0,f,c
  8284  00306C  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  8285  003070  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  8286  003074  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  8287  003078  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  8288  00307C  EF48  F018         	goto	l5645
  8289  003080                     l1367:
  8290  003080  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  8291  003084  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8292  003088  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8293  00308C  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8294  003090                     l5645:
  8295  003090  5005               	movf	___xxtofl@val^0,w,c
  8296  003092  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  8297  003094  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  8298  003096  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  8299  003098  A4D8               	btfss	status,2,c
  8300  00309A  EF51  F018         	goto	u5531
  8301  00309E  EF53  F018         	goto	u5530
  8302  0030A2                     u5531:
  8303  0030A2  EF5D  F018         	goto	l5651
  8304  0030A6                     u5530:
  8305  0030A6  0E00               	movlw	0
  8306  0030A8  6E05               	movwf	?___xxtofl^0,c
  8307  0030AA  0E00               	movlw	0
  8308  0030AC  6E06               	movwf	(?___xxtofl+1)^0,c
  8309  0030AE  0E00               	movlw	0
  8310  0030B0  6E07               	movwf	(?___xxtofl+2)^0,c
  8311  0030B2  0E00               	movlw	0
  8312  0030B4  6E08               	movwf	(?___xxtofl+3)^0,c
  8313  0030B6  EFEE  F018         	goto	l1370
  8314  0030BA                     l5651:
  8315  0030BA  0E96               	movlw	150
  8316  0030BC  6E0E               	movwf	___xxtofl@exp^0,c
  8317  0030BE  EF67  F018         	goto	l5655
  8318  0030C2                     l5653:
  8319  0030C2  2A0E               	incf	___xxtofl@exp^0,f,c
  8320  0030C4  90D8               	bcf	status,0,c
  8321  0030C6  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8322  0030C8  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8323  0030CA  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8324  0030CC  320F               	rrcf	___xxtofl@arg^0,f,c
  8325  0030CE                     l5655:
  8326  0030CE  0E00               	movlw	0
  8327  0030D0  140F               	andwf	___xxtofl@arg^0,w,c
  8328  0030D2  6E09               	movwf	??___xxtofl^0,c
  8329  0030D4  0E00               	movlw	0
  8330  0030D6  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8331  0030D8  6E0A               	movwf	(??___xxtofl+1)^0,c
  8332  0030DA  0E00               	movlw	0
  8333  0030DC  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8334  0030DE  6E0B               	movwf	(??___xxtofl+2)^0,c
  8335  0030E0  0EFE               	movlw	254
  8336  0030E2  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8337  0030E4  6E0C               	movwf	(??___xxtofl+3)^0,c
  8338  0030E6  5009               	movf	??___xxtofl^0,w,c
  8339  0030E8  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8340  0030EA  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8341  0030EC  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8342  0030EE  A4D8               	btfss	status,2,c
  8343  0030F0  EF7C  F018         	goto	u5541
  8344  0030F4  EF7E  F018         	goto	u5540
  8345  0030F8                     u5541:
  8346  0030F8  EF61  F018         	goto	l5653
  8347  0030FC                     u5540:
  8348  0030FC  EF8C  F018         	goto	l1374
  8349  003100                     l5657:
  8350  003100  2A0E               	incf	___xxtofl@exp^0,f,c
  8351  003102  0E01               	movlw	1
  8352  003104  260F               	addwf	___xxtofl@arg^0,f,c
  8353  003106  0E00               	movlw	0
  8354  003108  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  8355  00310A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  8356  00310C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  8357  00310E  90D8               	bcf	status,0,c
  8358  003110  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  8359  003112  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  8360  003114  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  8361  003116  320F               	rrcf	___xxtofl@arg^0,f,c
  8362  003118                     l1374:
  8363  003118  0E00               	movlw	0
  8364  00311A  140F               	andwf	___xxtofl@arg^0,w,c
  8365  00311C  6E09               	movwf	??___xxtofl^0,c
  8366  00311E  0E00               	movlw	0
  8367  003120  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  8368  003122  6E0A               	movwf	(??___xxtofl+1)^0,c
  8369  003124  0E00               	movlw	0
  8370  003126  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  8371  003128  6E0B               	movwf	(??___xxtofl+2)^0,c
  8372  00312A  0EFF               	movlw	255
  8373  00312C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  8374  00312E  6E0C               	movwf	(??___xxtofl+3)^0,c
  8375  003130  5009               	movf	??___xxtofl^0,w,c
  8376  003132  100A               	iorwf	(??___xxtofl+1)^0,w,c
  8377  003134  100B               	iorwf	(??___xxtofl+2)^0,w,c
  8378  003136  100C               	iorwf	(??___xxtofl+3)^0,w,c
  8379  003138  A4D8               	btfss	status,2,c
  8380  00313A  EFA1  F018         	goto	u5551
  8381  00313E  EFA3  F018         	goto	u5550
  8382  003142                     u5551:
  8383  003142  EF80  F018         	goto	l5657
  8384  003146                     u5550:
  8385  003146  EFAB  F018         	goto	l5665
  8386  00314A                     l5663:
  8387  00314A  060E               	decf	___xxtofl@exp^0,f,c
  8388  00314C  90D8               	bcf	status,0,c
  8389  00314E  360F               	rlcf	___xxtofl@arg^0,f,c
  8390  003150  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  8391  003152  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  8392  003154  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  8393  003156                     l5665:
  8394  003156  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  8395  003158  EFB0  F018         	goto	u5561
  8396  00315C  EFB2  F018         	goto	u5560
  8397  003160                     u5561:
  8398  003160  EFBA  F018         	goto	l1381
  8399  003164                     u5560:
  8400  003164  0E02               	movlw	2
  8401  003166  600E               	cpfslt	___xxtofl@exp^0,c
  8402  003168  EFB8  F018         	goto	u5571
  8403  00316C  EFBA  F018         	goto	u5570
  8404  003170                     u5571:
  8405  003170  EFA5  F018         	goto	l5663
  8406  003174                     u5570:
  8407  003174                     l1381:
  8408  003174  B00E               	btfsc	___xxtofl@exp^0,0,c
  8409  003176  EFBF  F018         	goto	u5581
  8410  00317A  EFC1  F018         	goto	u5580
  8411  00317E                     u5581:
  8412  00317E  EFC2  F018         	goto	l5671
  8413  003182                     u5580:
  8414  003182  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  8415  003184                     l5671:
  8416  003184  90D8               	bcf	status,0,c
  8417  003186  320E               	rrcf	___xxtofl@exp^0,f,c
  8418  003188  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  8419  00318C  6A0A               	clrf	(??___xxtofl+1)^0,c
  8420  00318E  6A0B               	clrf	(??___xxtofl+2)^0,c
  8421  003190  6A0C               	clrf	(??___xxtofl+3)^0,c
  8422  003192  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  8423  003196  6A0B               	clrf	(??___xxtofl+2)^0,c
  8424  003198  6A0A               	clrf	(??___xxtofl+1)^0,c
  8425  00319A  6A09               	clrf	??___xxtofl^0,c
  8426  00319C  5009               	movf	??___xxtofl^0,w,c
  8427  00319E  120F               	iorwf	___xxtofl@arg^0,f,c
  8428  0031A0  500A               	movf	(??___xxtofl+1)^0,w,c
  8429  0031A2  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  8430  0031A4  500B               	movf	(??___xxtofl+2)^0,w,c
  8431  0031A6  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  8432  0031A8  500C               	movf	(??___xxtofl+3)^0,w,c
  8433  0031AA  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  8434  0031AC  500D               	movf	___xxtofl@sign^0,w,c
  8435  0031AE  B4D8               	btfsc	status,2,c
  8436  0031B0  EFDC  F018         	goto	u5591
  8437  0031B4  EFDE  F018         	goto	u5590
  8438  0031B8                     u5591:
  8439  0031B8  EFE6  F018         	goto	l5681
  8440  0031BC                     u5590:
  8441  0031BC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  8442  0031BE  EFE5  F018         	goto	u5600
  8443  0031C2  EFE3  F018         	goto	u5601
  8444  0031C6                     u5601:
  8445  0031C6  EFE6  F018         	goto	l5681
  8446  0031CA                     u5600:
  8447  0031CA  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8448  0031CC                     l5681:
  8449  0031CC  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8450  0031D0  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8451  0031D4  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8452  0031D8  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8453  0031DC                     l1370:
  8454  0031DC  0012               	return		;funcret
  8455  0031DE                     __end_of___xxtofl:
  8456                           	callstack 0
  8457                           
  8458 ;; *************** function _I2C_Read2ByteRegister *****************
  8459 ;; Defined at:
  8460 ;;		line 77 in file "mcc_generated_files/examples/i2c_master_example.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  address         1    wreg     unsigned char 
  8463 ;;  reg             1   21[COMRAM] unsigned char 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;  address         1   26[COMRAM] unsigned char 
  8466 ;;  returnValue     2   27[COMRAM] unsigned short 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  2   21[COMRAM] unsigned short 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;Total ram usage:        8 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 12
  8483 ;; This function calls:
  8484 ;;		_I2C_Close
  8485 ;;		_I2C_MasterWrite
  8486 ;;		_I2C_Open
  8487 ;;		_I2C_SetAddressNackCallback
  8488 ;;		_I2C_SetBuffer
  8489 ;;		_I2C_SetDataCompleteCallback
  8490 ;; This function is called by:
  8491 ;;		_VEML6030_GetValue
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text35
  8496  003D8E                     __ptext35:
  8497                           	callstack 0
  8498  003D8E                     _I2C_Read2ByteRegister:
  8499                           	callstack 17
  8500                           
  8501                           ;incstack = 0
  8502                           ;I2C_Read2ByteRegister@address stored from wreg
  8503  003D8E  6E1B               	movwf	I2C_Read2ByteRegister@address^0,c
  8504  003D90                     
  8505                           ;mcc_generated_files/examples/i2c_master_example.c: 77: uint16_t I2C_Read2ByteRegister(i
      +                          2c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 78
      +                          : {;mcc_generated_files/examples/i2c_master_example.c: 79:     uint16_t returnValue =0x0
      +                          0;
  8506  003D90  0E00               	movlw	0
  8507  003D92  6E1D               	movwf	(I2C_Read2ByteRegister@returnValue+1)^0,c
  8508  003D94  0E00               	movlw	0
  8509  003D96  6E1C               	movwf	I2C_Read2ByteRegister@returnValue^0,c
  8510  003D98                     l5561:
  8511  003D98  501B               	movf	I2C_Read2ByteRegister@address^0,w,c
  8512  003D9A  EC80  F01E         	call	_I2C_Open
  8513  003D9E  0900               	iorlw	0
  8514  003DA0  B4D8               	btfsc	status,2,c
  8515  003DA2  EFD5  F01E         	goto	u5471
  8516  003DA6  EFD7  F01E         	goto	u5470
  8517  003DAA                     u5471:
  8518  003DAA  EFCC  F01E         	goto	l5561
  8519  003DAE                     u5470:
  8520  003DAE                     
  8521                           ;mcc_generated_files/examples/i2c_master_example.c: 82:     I2C_SetDataCompleteCallback(
      +                          rd2RegCompleteHandler,&returnValue);
  8522  003DAE  0EEE               	movlw	low _rd2RegCompleteHandler
  8523  003DB0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
  8524  003DB2  0E45               	movlw	high _rd2RegCompleteHandler
  8525  003DB4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
  8526  003DB6  0E1C               	movlw	low I2C_Read2ByteRegister@returnValue
  8527  003DB8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
  8528  003DBA  0E00               	movlw	high I2C_Read2ByteRegister@returnValue
  8529  003DBC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
  8530  003DBE  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
  8531  003DC2                     
  8532                           ;mcc_generated_files/examples/i2c_master_example.c: 83:     I2C_SetBuffer(&reg,1);
  8533  003DC2  0E16               	movlw	low I2C_Read2ByteRegister@reg
  8534  003DC4  6E05               	movwf	I2C_SetBuffer@buffer^0,c
  8535  003DC6  0E00               	movlw	high I2C_Read2ByteRegister@reg
  8536  003DC8  6E06               	movwf	(I2C_SetBuffer@buffer+1)^0,c
  8537  003DCA  0E00               	movlw	0
  8538  003DCC  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
  8539  003DCE  0E01               	movlw	1
  8540  003DD0  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
  8541  003DD2  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
  8542  003DD6                     
  8543                           ;mcc_generated_files/examples/i2c_master_example.c: 84:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  8544  003DD6  0E00               	movlw	0
  8545  003DD8  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8546  003DDA  0E00               	movlw	0
  8547  003DDC  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8548  003DDE  0E00               	movlw	0
  8549  003DE0  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8550  003DE2  0E00               	movlw	0
  8551  003DE4  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8552  003DE6  ECCF  F023         	call	_I2C_SetAddressNackCallback	;wreg free
  8553  003DEA                     
  8554                           ;mcc_generated_files/examples/i2c_master_example.c: 85:     I2C_MasterWrite();
  8555  003DEA  EC53  F024         	call	_I2C_MasterWrite	;wreg free
  8556  003DEE                     l5571:
  8557  003DEE  EC39  F023         	call	_I2C_Close	;wreg free
  8558  003DF2  06E8               	decf	wreg,f,c
  8559  003DF4  B4D8               	btfsc	status,2,c
  8560  003DF6  EFFF  F01E         	goto	u5481
  8561  003DFA  EF01  F01F         	goto	u5480
  8562  003DFE                     u5481:
  8563  003DFE  EFF7  F01E         	goto	l5571
  8564  003E02                     u5480:
  8565  003E02                     
  8566                           ;mcc_generated_files/examples/i2c_master_example.c: 88:     return (returnValue << 8 | r
      +                          eturnValue >> 8);
  8567  003E02  C01D  F018         	movff	I2C_Read2ByteRegister@returnValue+1,??_I2C_Read2ByteRegister
  8568  003E06  501C               	movf	I2C_Read2ByteRegister@returnValue^0,w,c
  8569  003E08  6E19               	movwf	(??_I2C_Read2ByteRegister+1)^0,c
  8570  003E0A  5018               	movf	??_I2C_Read2ByteRegister^0,w,c
  8571  003E0C  6E16               	movwf	?_I2C_Read2ByteRegister^0,c
  8572  003E0E  C019  F017         	movff	??_I2C_Read2ByteRegister+1,?_I2C_Read2ByteRegister+1
  8573  003E12  0012               	return		;funcret
  8574  003E14                     __end_of_I2C_Read2ByteRegister:
  8575                           	callstack 0
  8576                           
  8577 ;; *************** function _I2C_SetAddressNackCallback *****************
  8578 ;; Defined at:
  8579 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  8582 ;;		 -> Absolute function(1), 
  8583 ;;  ptr             2   11[COMRAM] PTR void 
  8584 ;;		 -> NULL(0), 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;Total ram usage:        4 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 5
  8603 ;; This function calls:
  8604 ;;		_I2C_SetCallback
  8605 ;; This function is called by:
  8606 ;;		_I2C_Read2ByteRegister
  8607 ;;		_I2C_Write1ByteRegister
  8608 ;;		_I2C_Read1ByteRegister
  8609 ;;		_I2C_Write2ByteRegister
  8610 ;;		_I2C_WriteNBytes
  8611 ;;		_I2C_ReadDataBlock
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text36
  8616  00479E                     __ptext36:
  8617                           	callstack 0
  8618  00479E                     _I2C_SetAddressNackCallback:
  8619                           	callstack 23
  8620  00479E                     
  8621                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8622  00479E  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  8623  0047A2  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  8624  0047A6  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  8625  0047AA  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  8626  0047AE  0E02               	movlw	2
  8627  0047B0  EC48  F01F         	call	_I2C_SetCallback
  8628  0047B4  0012               	return		;funcret
  8629  0047B6                     __end_of_I2C_SetAddressNackCallback:
  8630                           	callstack 0
  8631                           
  8632 ;; *************** function _I2C_Open *****************
  8633 ;; Defined at:
  8634 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  address         1    wreg     unsigned char 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  address         1    4[COMRAM] unsigned char 
  8639 ;;  returnValue     1    5[COMRAM] enum E355
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      enum E355
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;Total ram usage:        2 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 5
  8656 ;; This function calls:
  8657 ;;		_I2C_MasterClearIrq
  8658 ;;		_I2C_MasterOpen
  8659 ;; This function is called by:
  8660 ;;		_I2C_Read2ByteRegister
  8661 ;;		_I2C_Write1ByteRegister
  8662 ;;		_I2C_Read1ByteRegister
  8663 ;;		_I2C_Write2ByteRegister
  8664 ;;		_I2C_WriteNBytes
  8665 ;;		_I2C_ReadNBytes
  8666 ;;		_I2C_ReadDataBlock
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           	psect	text37
  8671  003D00                     __ptext37:
  8672                           	callstack 0
  8673  003D00                     _I2C_Open:
  8674                           	callstack 23
  8675                           
  8676                           ;incstack = 0
  8677                           ;I2C_Open@address stored from wreg
  8678  003D00  6E05               	movwf	I2C_Open@address^0,c
  8679  003D02                     
  8680                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8681  003D02  0E01               	movlw	1
  8682  003D04  6E06               	movwf	I2C_Open@returnValue^0,c
  8683  003D06                     
  8684                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8685  003D06  0100               	movlb	0	; () banked
  8686  003D08  B583               	btfsc	(_I2C_Status+35)& (0+255),2,b
  8687  003D0A  EF89  F01E         	goto	u5301
  8688  003D0E  EF8B  F01E         	goto	u5300
  8689  003D12                     u5301:
  8690  003D12  EFC5  F01E         	goto	l5425
  8691  003D16                     u5300:
  8692  003D16                     
  8693                           ; BSR set to: 0
  8694                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8695  003D16  C005  F07C         	movff	I2C_Open@address,_I2C_Status+28
  8696  003D1A                     
  8697                           ; BSR set to: 0
  8698                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8699  003D1A  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  8700  003D1C                     
  8701                           ; BSR set to: 0
  8702                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8703  003D1C  8583               	bsf	(_I2C_Status+35)& (0+255),2,b
  8704  003D1E                     
  8705                           ; BSR set to: 0
  8706                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8707  003D1E  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  8708  003D20                     
  8709                           ; BSR set to: 0
  8710                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8711  003D20  0E0E               	movlw	14
  8712  003D22  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  8713  003D24                     
  8714                           ; BSR set to: 0
  8715                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8716  003D24  0E01               	movlw	1
  8717  003D26  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
  8718  003D28  0EF4               	movlw	244
  8719  003D2A  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
  8720  003D2C                     
  8721                           ; BSR set to: 0
  8722                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8723  003D2C  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  8724  003D2E                     
  8725                           ; BSR set to: 0
  8726                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8727  003D2E  0E16               	movlw	low _I2C_CallbackReturnStop
  8728  003D30  6F60               	movwf	_I2C_Status& (0+255),b
  8729  003D32  0E49               	movlw	high _I2C_CallbackReturnStop
  8730  003D34  6F61               	movwf	(_I2C_Status+1)& (0+255),b
  8731  003D36                     
  8732                           ; BSR set to: 0
  8733                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8734  003D36  0E00               	movlw	0
  8735  003D38  6F6C               	movwf	(_I2C_Status+12)& (0+255),b
  8736  003D3A  0E00               	movlw	0
  8737  003D3C  6F6D               	movwf	(_I2C_Status+13)& (0+255),b
  8738  003D3E                     
  8739                           ; BSR set to: 0
  8740                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8741  003D3E  0E16               	movlw	low _I2C_CallbackReturnStop
  8742  003D40  6F62               	movwf	(_I2C_Status+2)& (0+255),b
  8743  003D42  0E49               	movlw	high _I2C_CallbackReturnStop
  8744  003D44  6F63               	movwf	(_I2C_Status+3)& (0+255),b
  8745  003D46                     
  8746                           ; BSR set to: 0
  8747                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8748  003D46  0E00               	movlw	0
  8749  003D48  6F6E               	movwf	(_I2C_Status+14)& (0+255),b
  8750  003D4A  0E00               	movlw	0
  8751  003D4C  6F6F               	movwf	(_I2C_Status+15)& (0+255),b
  8752  003D4E                     
  8753                           ; BSR set to: 0
  8754                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8755  003D4E  0E16               	movlw	low _I2C_CallbackReturnStop
  8756  003D50  6F64               	movwf	(_I2C_Status+4)& (0+255),b
  8757  003D52  0E49               	movlw	high _I2C_CallbackReturnStop
  8758  003D54  6F65               	movwf	(_I2C_Status+5)& (0+255),b
  8759  003D56                     
  8760                           ; BSR set to: 0
  8761                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8762  003D56  0E00               	movlw	0
  8763  003D58  6F70               	movwf	(_I2C_Status+16)& (0+255),b
  8764  003D5A  0E00               	movlw	0
  8765  003D5C  6F71               	movwf	(_I2C_Status+17)& (0+255),b
  8766  003D5E                     
  8767                           ; BSR set to: 0
  8768                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8769  003D5E  0E16               	movlw	low _I2C_CallbackReturnStop
  8770  003D60  6F66               	movwf	(_I2C_Status+6)& (0+255),b
  8771  003D62  0E49               	movlw	high _I2C_CallbackReturnStop
  8772  003D64  6F67               	movwf	(_I2C_Status+7)& (0+255),b
  8773  003D66                     
  8774                           ; BSR set to: 0
  8775                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8776  003D66  0E00               	movlw	0
  8777  003D68  6F72               	movwf	(_I2C_Status+18)& (0+255),b
  8778  003D6A  0E00               	movlw	0
  8779  003D6C  6F73               	movwf	(_I2C_Status+19)& (0+255),b
  8780  003D6E                     
  8781                           ; BSR set to: 0
  8782                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8783  003D6E  0E12               	movlw	low _I2C_CallbackReturnReset
  8784  003D70  6F68               	movwf	(_I2C_Status+8)& (0+255),b
  8785  003D72  0E49               	movlw	high _I2C_CallbackReturnReset
  8786  003D74  6F69               	movwf	(_I2C_Status+9)& (0+255),b
  8787  003D76                     
  8788                           ; BSR set to: 0
  8789                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8790  003D76  0E00               	movlw	0
  8791  003D78  6F74               	movwf	(_I2C_Status+20)& (0+255),b
  8792  003D7A  0E00               	movlw	0
  8793  003D7C  6F75               	movwf	(_I2C_Status+21)& (0+255),b
  8794  003D7E                     
  8795                           ; BSR set to: 0
  8796                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  8797  003D7E  EC97  F024         	call	_I2C_MasterClearIrq	;wreg free
  8798  003D82                     
  8799                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  8800  003D82  ECAF  F023         	call	_I2C_MasterOpen	;wreg free
  8801  003D86                     
  8802                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  8803  003D86  0E00               	movlw	0
  8804  003D88  6E06               	movwf	I2C_Open@returnValue^0,c
  8805  003D8A                     l5425:
  8806                           
  8807                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  8808  003D8A  5006               	movf	I2C_Open@returnValue^0,w,c
  8809  003D8C  0012               	return		;funcret
  8810  003D8E                     __end_of_I2C_Open:
  8811                           	callstack 0
  8812                           
  8813 ;; *************** function _I2C_MasterOpen *****************
  8814 ;; Defined at:
  8815 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      _Bool 
  8822 ;; Registers used:
  8823 ;;		wreg, status,2
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used: 1
  8835 ;; Hardware stack levels required when called: 4
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_I2C_Open
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text38
  8844  00475E                     __ptext38:
  8845                           	callstack 0
  8846  00475E                     _I2C_MasterOpen:
  8847                           	callstack 23
  8848  00475E                     
  8849                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  8850  00475E  BAC6               	btfsc	198,5,c	;volatile
  8851  004760  EFB4  F023         	goto	u4611
  8852  004764  EFB6  F023         	goto	u4610
  8853  004768                     u4611:
  8854  004768  EFBF  F023         	goto	l378
  8855  00476C                     u4610:
  8856  00476C                     
  8857                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  8858  00476C  0E00               	movlw	0
  8859  00476E  6EC7               	movwf	199,c	;volatile
  8860                           
  8861                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  8862  004770  0E08               	movlw	8
  8863  004772  6EC6               	movwf	198,c	;volatile
  8864                           
  8865                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  8866  004774  0E00               	movlw	0
  8867  004776  6EC5               	movwf	197,c	;volatile
  8868                           
  8869                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  8870  004778  0E13               	movlw	19
  8871  00477A  6EC8               	movwf	200,c	;volatile
  8872  00477C                     
  8873                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  8874  00477C  8AC6               	bsf	198,5,c	;volatile
  8875  00477E                     l378:
  8876  00477E  0012               	return		;funcret
  8877  004780                     __end_of_I2C_MasterOpen:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function _I2C_MasterWrite *****************
  8881 ;; Defined at:
  8882 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      enum E355
  8889 ;; Registers used:
  8890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;Total ram usage:        0 bytes
  8901 ;; Hardware stack levels used: 1
  8902 ;; Hardware stack levels required when called: 11
  8903 ;; This function calls:
  8904 ;;		_I2C_MasterOperation
  8905 ;; This function is called by:
  8906 ;;		_I2C_Read2ByteRegister
  8907 ;;		_I2C_Write1ByteRegister
  8908 ;;		_I2C_Read1ByteRegister
  8909 ;;		_I2C_Write2ByteRegister
  8910 ;;		_I2C_WriteNBytes
  8911 ;;		_I2C_ReadDataBlock
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           	psect	text39
  8916  0048A6                     __ptext39:
  8917                           	callstack 0
  8918  0048A6                     _I2C_MasterWrite:
  8919                           	callstack 17
  8920  0048A6                     
  8921                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  8922  0048A6  0E00               	movlw	0
  8923  0048A8  ECE1  F021         	call	_I2C_MasterOperation
  8924  0048AC  0012               	return		;funcret
  8925  0048AE                     __end_of_I2C_MasterWrite:
  8926                           	callstack 0
  8927                           
  8928 ;; *************** function _I2C_MasterOperation *****************
  8929 ;; Defined at:
  8930 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  read            1    wreg     _Bool 
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;  read            1   19[COMRAM] _Bool 
  8935 ;;  returnValue     1   20[COMRAM] enum E355
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      enum E355
  8938 ;; Registers used:
  8939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8949 ;;Total ram usage:        2 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 10
  8952 ;; This function calls:
  8953 ;;		_I2C_MasterStart
  8954 ;;		_I2C_Poller
  8955 ;; This function is called by:
  8956 ;;		_I2C_MasterWrite
  8957 ;;		_I2C_MasterRead
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text40
  8962  0043C2                     __ptext40:
  8963                           	callstack 0
  8964  0043C2                     _I2C_MasterOperation:
  8965                           	callstack 17
  8966                           
  8967                           ;incstack = 0
  8968                           ;I2C_MasterOperation@read stored from wreg
  8969  0043C2  6E14               	movwf	I2C_MasterOperation@read^0,c
  8970  0043C4                     
  8971                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8972  0043C4  0E01               	movlw	1
  8973  0043C6  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  8974  0043C8                     
  8975                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  8976  0043C8  0100               	movlb	0	; () banked
  8977  0043CA  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  8978  0043CC  EFEA  F021         	goto	u4621
  8979  0043D0  EFEC  F021         	goto	u4620
  8980  0043D4                     u4621:
  8981  0043D4  EF01  F022         	goto	l5007
  8982  0043D8                     u4620:
  8983  0043D8                     
  8984                           ; BSR set to: 0
  8985                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  8986  0043D8  8383               	bsf	(_I2C_Status+35)& (0+255),1,b
  8987  0043DA                     
  8988                           ; BSR set to: 0
  8989                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  8990  0043DA  0E00               	movlw	0
  8991  0043DC  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  8992  0043DE                     
  8993                           ; BSR set to: 0
  8994                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  8995  0043DE  5014               	movf	I2C_MasterOperation@read^0,w,c
  8996  0043E0  B4D8               	btfsc	status,2,c
  8997  0043E2  EFF5  F021         	goto	u4631
  8998  0043E6  EFF7  F021         	goto	u4630
  8999  0043EA                     u4631:
  9000  0043EA  EFFB  F021         	goto	l5001
  9001  0043EE                     u4630:
  9002  0043EE                     
  9003                           ; BSR set to: 0
  9004                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9005  0043EE  0E01               	movlw	1
  9006  0043F0  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9007                           
  9008                           ;mcc_generated_files/i2c_master.c: 235:         }
  9009  0043F2  EFFD  F021         	goto	l5003
  9010  0043F6                     l5001:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9014  0043F6  0E02               	movlw	2
  9015  0043F8  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9016  0043FA                     l5003:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  9020  0043FA  EC91  F024         	call	_I2C_MasterStart	;wreg free
  9021  0043FE                     
  9022                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  9023  0043FE  ECC0  F023         	call	_I2C_Poller	;wreg free
  9024  004402                     l5007:
  9025                           
  9026                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  9027  004402  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
  9028  004404  0012               	return		;funcret
  9029  004406                     __end_of_I2C_MasterOperation:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _I2C_Poller *****************
  9033 ;; Defined at:
  9034 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;		None
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      void 
  9041 ;; Registers used:
  9042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        0 bytes
  9053 ;; Hardware stack levels used: 1
  9054 ;; Hardware stack levels required when called: 9
  9055 ;; This function calls:
  9056 ;;		_I2C_MasterFsm
  9057 ;;		_I2C_MasterWaitForEvent
  9058 ;; This function is called by:
  9059 ;;		_I2C_MasterOperation
  9060 ;; This function uses a non-reentrant model
  9061 ;;
  9062                           
  9063                           	psect	text41
  9064  004780                     __ptext41:
  9065                           	callstack 0
  9066  004780                     _I2C_Poller:
  9067                           	callstack 17
  9068  004780                     
  9069                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9070  004780  EFC6  F023         	goto	l4423
  9071  004784                     l4419:
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  9075  004784  EC06  F024         	call	_I2C_MasterWaitForEvent	;wreg free
  9076  004788                     
  9077                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  9078  004788  ECC0  F01F         	call	_I2C_MasterFsm	;wreg free
  9079  00478C                     l4423:
  9080                           
  9081                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9082  00478C  0100               	movlb	0	; () banked
  9083  00478E  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9084  004790  EFCC  F023         	goto	u3601
  9085  004794  EFCE  F023         	goto	u3600
  9086  004798                     u3601:
  9087  004798  EFC2  F023         	goto	l4419
  9088  00479C                     u3600:
  9089  00479C                     
  9090                           ; BSR set to: 0
  9091  00479C  0012               	return		;funcret
  9092  00479E                     __end_of_I2C_Poller:
  9093                           	callstack 0
  9094                           
  9095 ;; *************** function _I2C_MasterWaitForEvent *****************
  9096 ;; Defined at:
  9097 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		None
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used: 1
  9117 ;; Hardware stack levels required when called: 4
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_I2C_Poller
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text42
  9126  00480C                     __ptext42:
  9127                           	callstack 0
  9128  00480C                     _I2C_MasterWaitForEvent:
  9129                           	callstack 21
  9130  00480C                     l435:
  9131                           
  9132                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  9133  00480C  A69E               	btfss	158,3,c	;volatile
  9134  00480E  EF0B  F024         	goto	u3131
  9135  004812  EF0D  F024         	goto	u3130
  9136  004816                     u3131:
  9137  004816  EF06  F024         	goto	l435
  9138  00481A                     u3130:
  9139  00481A  0012               	return		;funcret
  9140  00481C                     __end_of_I2C_MasterWaitForEvent:
  9141                           	callstack 0
  9142                           
  9143 ;; *************** function _I2C_MasterFsm *****************
  9144 ;; Defined at:
  9145 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;		None
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;Total ram usage:        2 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; Hardware stack levels required when called: 8
  9166 ;; This function calls:
  9167 ;;		_I2C_DO_ADDRESS_NACK
  9168 ;;		_I2C_DO_IDLE
  9169 ;;		_I2C_DO_RCEN
  9170 ;;		_I2C_DO_RESET
  9171 ;;		_I2C_DO_RX
  9172 ;;		_I2C_DO_RX_ACK
  9173 ;;		_I2C_DO_RX_NACK_RESTART
  9174 ;;		_I2C_DO_RX_NACK_STOP
  9175 ;;		_I2C_DO_SEND_ADR_READ
  9176 ;;		_I2C_DO_SEND_ADR_WRITE
  9177 ;;		_I2C_DO_SEND_RESTART
  9178 ;;		_I2C_DO_SEND_RESTART_READ
  9179 ;;		_I2C_DO_SEND_RESTART_WRITE
  9180 ;;		_I2C_DO_SEND_STOP
  9181 ;;		_I2C_DO_TX
  9182 ;;		_I2C_DO_TX_EMPTY
  9183 ;;		_I2C_MasterClearIrq
  9184 ;;		_I2C_MasterIsNack
  9185 ;; This function is called by:
  9186 ;;		_I2C_Poller
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           	psect	text43
  9191  003F80                     __ptext43:
  9192                           	callstack 0
  9193  003F80                     _I2C_MasterFsm:
  9194                           	callstack 17
  9195  003F80                     
  9196                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  9197  003F80  EC97  F024         	call	_I2C_MasterClearIrq	;wreg free
  9198  003F84                     
  9199                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9200  003F84  0100               	movlb	0	; () banked
  9201  003F86  A183               	btfss	(_I2C_Status+35)& (0+255),0,b
  9202  003F88  EFC8  F01F         	goto	u3141
  9203  003F8C  EFCA  F01F         	goto	u3140
  9204  003F90                     u3141:
  9205  003F90  EFD7  F01F         	goto	l4189
  9206  003F94                     u3140:
  9207  003F94                     
  9208                           ; BSR set to: 0
  9209  003F94  ECF2  F023         	call	_I2C_MasterIsNack	;wreg free
  9210  003F98  0900               	iorlw	0
  9211  003F9A  B4D8               	btfsc	status,2,c
  9212  003F9C  EFD2  F01F         	goto	u3151
  9213  003FA0  EFD4  F01F         	goto	u3150
  9214  003FA4                     u3151:
  9215  003FA4  EFD7  F01F         	goto	l4189
  9216  003FA8                     u3150:
  9217  003FA8                     
  9218                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9219  003FA8  0E0F               	movlw	15
  9220  003FAA  0100               	movlb	0	; () banked
  9221  003FAC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9222  003FAE                     l4189:
  9223                           
  9224                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
  9225  003FAE  0100               	movlb	0	; () banked
  9226  003FB0  5181               	movf	(_I2C_Status+33)& (0+255),w,b
  9227  003FB2  0D02               	mullw	2
  9228  003FB4  0E01               	movlw	low _fsmStateTable
  9229  003FB6  24F3               	addwf	243,w,c
  9230  003FB8  6EF6               	movwf	tblptrl,c
  9231  003FBA  0E10               	movlw	high _fsmStateTable
  9232  003FBC  20F4               	addwfc	244,w,c
  9233  003FBE  6EF7               	movwf	tblptrh,c
  9234  003FC0                     	if	1	;There are 3 active tblptr bytes
  9235  003FC0  6AF8               	clrf	tblptru,c
  9236  003FC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9237  003FC4  22F8               	addwfc	tblptru,f,c
  9238  003FC6                     	endif
  9239  003FC6  0009               	tblrd		*+
  9240  003FC8  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
  9241  003FCC  0009               	tblrd		*+
  9242  003FCE  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
  9243  003FD2  D802               	call	u3168
  9244  003FD4  EFF5  F01F         	goto	u3169
  9245  003FD8                     u3168:
  9246  003FD8  0005               	push	
  9247  003FDA  6EFA               	movwf	pclath,c
  9248  003FDC  5012               	movf	??_I2C_MasterFsm^0,w,c
  9249  003FDE  6EFD               	movwf	tosl,c
  9250  003FE0  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9251  003FE2  6EFE               	movwf	tosh,c
  9252  003FE4  6AFF               	clrf	tosu,c
  9253  003FE6  50FA               	movf	pclath,w,c
  9254  003FE8  0012               	return		;indir
  9255  003FEA                     u3169:
  9256  003FEA  0100               	movlb	0	; () banked
  9257  003FEC  6F81               	movwf	(_I2C_Status+33)& (0+255),b
  9258  003FEE                     
  9259                           ; BSR set to: 0
  9260  003FEE  0012               	return		;funcret
  9261  003FF0                     __end_of_I2C_MasterFsm:
  9262                           	callstack 0
  9263                           
  9264 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  9265 ;; Defined at:
  9266 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  9267 ;; Parameters:    Size  Location     Type
  9268 ;;		None
  9269 ;; Auto vars:     Size  Location     Type
  9270 ;;		None
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  1    wreg      enum E3103
  9273 ;; Registers used:
  9274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 0/0
  9277 ;;		On exit  : 0/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;Total ram usage:        2 bytes
  9285 ;; Hardware stack levels used: 1
  9286 ;; Hardware stack levels required when called: 7
  9287 ;; This function calls:
  9288 ;;		Absolute function
  9289 ;;		_I2C_CallbackReturnReset
  9290 ;;		_I2C_CallbackReturnStop
  9291 ;;		_I2C_DO_SEND_RESTART
  9292 ;;		_I2C_DO_SEND_STOP
  9293 ;;		_rd1RegCompleteHandler
  9294 ;;		_rd2RegCompleteHandler
  9295 ;;		_rdBlkRegCompleteHandler
  9296 ;;		_wr1RegCompleteHandler
  9297 ;;		_wr2RegCompleteHandler
  9298 ;; This function is called by:
  9299 ;;		_I2C_MasterFsm
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text44
  9304  00405E                     __ptext44:
  9305                           	callstack 0
  9306  00405E                     _I2C_DO_ADDRESS_NACK:
  9307                           	callstack 17
  9308  00405E                     
  9309                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  9310  00405E  0100               	movlb	0	; () banked
  9311  004060  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9312  004062                     
  9313                           ; BSR set to: 0
  9314                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  9315  004062  0E02               	movlw	2
  9316  004064  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9317                           
  9318                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  9319  004066  EF3D  F020         	goto	l4159
  9320  00406A                     l4149:
  9321                           
  9322                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  9323  00406A  EC67  F024         	call	_I2C_DO_SEND_RESTART	;wreg free
  9324  00406E  EF61  F020         	goto	l357
  9325  004072                     l4153:
  9326                           
  9327                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  9328  004072  EC63  F024         	call	_I2C_DO_SEND_STOP	;wreg free
  9329  004076  EF61  F020         	goto	l357
  9330  00407A                     l4159:
  9331                           
  9332                           ; BSR set to: 0
  9333  00407A  C070  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  9334  00407E  C071  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  9335  004082  D802               	call	u3088
  9336  004084  EF4D  F020         	goto	u3089
  9337  004088                     u3088:
  9338  004088  0005               	push	
  9339  00408A  6EFA               	movwf	pclath,c
  9340  00408C  5164               	movf	(_I2C_Status+4)& (0+255),w,b
  9341  00408E  6EFD               	movwf	tosl,c
  9342  004090  5165               	movf	(_I2C_Status+5)& (0+255),w,b
  9343  004092  6EFE               	movwf	tosh,c
  9344  004094  6AFF               	clrf	tosu,c
  9345  004096  50FA               	movf	pclath,w,c
  9346  004098  0012               	return		;indir
  9347  00409A                     u3089:
  9348  00409A  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  9349  00409C  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  9350                           
  9351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9352                           ; Switch size 1, requested type "simple"
  9353                           ; Number of cases is 1, Range of values is 0 to 0
  9354                           ; switch strategies available:
  9355                           ; Name         Instructions Cycles
  9356                           ; simple_byte            4     3 (average)
  9357                           ;	Chosen strategy is simple_byte
  9358  00409E  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  9359  0040A0  0A00               	xorlw	0	; case 0
  9360  0040A2  B4D8               	btfsc	status,2,c
  9361  0040A4  EF56  F020         	goto	l7419
  9362  0040A8  EF39  F020         	goto	l4153
  9363  0040AC                     l7419:
  9364                           
  9365                           ; Switch size 1, requested type "simple"
  9366                           ; Number of cases is 2, Range of values is 2 to 3
  9367                           ; switch strategies available:
  9368                           ; Name         Instructions Cycles
  9369                           ; simple_byte            7     4 (average)
  9370                           ;	Chosen strategy is simple_byte
  9371  0040AC  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  9372  0040AE  0A02               	xorlw	2	; case 2
  9373  0040B0  B4D8               	btfsc	status,2,c
  9374  0040B2  EF35  F020         	goto	l4149
  9375  0040B6  0A01               	xorlw	1	; case 3
  9376  0040B8  B4D8               	btfsc	status,2,c
  9377  0040BA  EF35  F020         	goto	l4149
  9378  0040BE  EF39  F020         	goto	l4153
  9379  0040C2                     l357:
  9380  0040C2  0012               	return		;funcret
  9381  0040C4                     __end_of_I2C_DO_ADDRESS_NACK:
  9382                           	callstack 0
  9383                           
  9384 ;; *************** function _I2C_DO_RESET *****************
  9385 ;; Defined at:
  9386 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;		None
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;		None
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  1    wreg      enum E3103
  9393 ;; Registers used:
  9394 ;;		wreg, status,2
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9404 ;;Total ram usage:        0 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 4
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_I2C_MasterFsm
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text45
  9415  00483C                     __ptext45:
  9416                           	callstack 0
  9417  00483C                     _I2C_DO_RESET:
  9418                           	callstack 20
  9419  00483C                     
  9420                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  9421  00483C  0100               	movlb	0	; () banked
  9422  00483E  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
  9423  004840                     
  9424                           ; BSR set to: 0
  9425                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  9426  004840  0E00               	movlw	0
  9427  004842  6F82               	movwf	(_I2C_Status+34)& (0+255),b
  9428  004844                     
  9429                           ; BSR set to: 0
  9430                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  9431  004844  0E0E               	movlw	14
  9432  004846                     
  9433                           ; BSR set to: 0
  9434  004846  0012               	return		;funcret
  9435  004848                     __end_of_I2C_DO_RESET:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  9439 ;; Defined at:
  9440 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;		None
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      enum E3103
  9447 ;; Registers used:
  9448 ;;		wreg, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9458 ;;Total ram usage:        0 bytes
  9459 ;; Hardware stack levels used: 1
  9460 ;; Hardware stack levels required when called: 5
  9461 ;; This function calls:
  9462 ;;		_I2C_MasterSendNack
  9463 ;; This function is called by:
  9464 ;;		_I2C_DO_RX
  9465 ;;		_I2C_MasterFsm
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text46
  9470  0048AE                     __ptext46:
  9471                           	callstack 0
  9472  0048AE                     _I2C_DO_RX_NACK_RESTART:
  9473                           	callstack 19
  9474  0048AE                     
  9475                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  9476  0048AE  EC7A  F024         	call	_I2C_MasterSendNack	;wreg free
  9477  0048B2                     
  9478                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  9479  0048B2  0E09               	movlw	9
  9480  0048B4  0012               	return		;funcret
  9481  0048B6                     __end_of_I2C_DO_RX_NACK_RESTART:
  9482                           	callstack 0
  9483                           
  9484 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  9485 ;; Defined at:
  9486 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;		None
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;		None
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      enum E3103
  9493 ;; Registers used:
  9494 ;;		wreg, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;Total ram usage:        0 bytes
  9505 ;; Hardware stack levels used: 1
  9506 ;; Hardware stack levels required when called: 5
  9507 ;; This function calls:
  9508 ;;		_I2C_MasterSendNack
  9509 ;; This function is called by:
  9510 ;;		_I2C_DO_RX
  9511 ;;		_I2C_MasterFsm
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text47
  9516  0048B6                     __ptext47:
  9517                           	callstack 0
  9518  0048B6                     _I2C_DO_RX_NACK_STOP:
  9519                           	callstack 19
  9520  0048B6                     
  9521                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  9522  0048B6  EC7A  F024         	call	_I2C_MasterSendNack	;wreg free
  9523  0048BA                     
  9524                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  9525  0048BA  0E0A               	movlw	10
  9526  0048BC  0012               	return		;funcret
  9527  0048BE                     __end_of_I2C_DO_RX_NACK_STOP:
  9528                           	callstack 0
  9529                           
  9530 ;; *************** function _I2C_DO_RX_ACK *****************
  9531 ;; Defined at:
  9532 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  9533 ;; Parameters:    Size  Location     Type
  9534 ;;		None
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      enum E3103
  9539 ;; Registers used:
  9540 ;;		wreg, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : 0/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;Total ram usage:        0 bytes
  9551 ;; Hardware stack levels used: 1
  9552 ;; Hardware stack levels required when called: 5
  9553 ;; This function calls:
  9554 ;;		_I2C_MasterSendAck
  9555 ;; This function is called by:
  9556 ;;		_I2C_MasterFsm
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text48
  9561  0048BE                     __ptext48:
  9562                           	callstack 0
  9563  0048BE                     _I2C_DO_RX_ACK:
  9564                           	callstack 19
  9565  0048BE                     
  9566                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  9567  0048BE  EC77  F024         	call	_I2C_MasterSendAck	;wreg free
  9568  0048C2                     
  9569                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  9570  0048C2  0E05               	movlw	5
  9571  0048C4  0012               	return		;funcret
  9572  0048C6                     __end_of_I2C_DO_RX_ACK:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _I2C_DO_SEND_STOP *****************
  9576 ;; Defined at:
  9577 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;		None
  9580 ;; Auto vars:     Size  Location     Type
  9581 ;;		None
  9582 ;; Return value:  Size  Location     Type
  9583 ;;                  1    wreg      enum E3103
  9584 ;; Registers used:
  9585 ;;		wreg, cstack
  9586 ;; Tracked objects:
  9587 ;;		On entry : 0/0
  9588 ;;		On exit  : 0/0
  9589 ;;		Unchanged: 0/0
  9590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;Total ram usage:        0 bytes
  9596 ;; Hardware stack levels used: 1
  9597 ;; Hardware stack levels required when called: 5
  9598 ;; This function calls:
  9599 ;;		_I2C_MasterStop
  9600 ;; This function is called by:
  9601 ;;		_I2C_DO_TX
  9602 ;;		_I2C_DO_TX_EMPTY
  9603 ;;		_I2C_DO_ADDRESS_NACK
  9604 ;;		_I2C_MasterFsm
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text49
  9609  0048C6                     __ptext49:
  9610                           	callstack 0
  9611  0048C6                     _I2C_DO_SEND_STOP:
  9612                           	callstack 18
  9613  0048C6                     
  9614                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  9615  0048C6  EC8D  F024         	call	_I2C_MasterStop	;wreg free
  9616  0048CA                     
  9617                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  9618  0048CA  0E00               	movlw	0
  9619  0048CC  0012               	return		;funcret
  9620  0048CE                     __end_of_I2C_DO_SEND_STOP:
  9621                           	callstack 0
  9622                           
  9623 ;; *************** function _I2C_DO_SEND_RESTART *****************
  9624 ;; Defined at:
  9625 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;		None
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;		None
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      enum E3103
  9632 ;; Registers used:
  9633 ;;		wreg, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;Total ram usage:        0 bytes
  9644 ;; Hardware stack levels used: 1
  9645 ;; Hardware stack levels required when called: 5
  9646 ;; This function calls:
  9647 ;;		_I2C_MasterEnableRestart
  9648 ;; This function is called by:
  9649 ;;		_I2C_DO_TX_EMPTY
  9650 ;;		_I2C_DO_ADDRESS_NACK
  9651 ;;		_I2C_MasterFsm
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           	psect	text50
  9656  0048CE                     __ptext50:
  9657                           	callstack 0
  9658  0048CE                     _I2C_DO_SEND_RESTART:
  9659                           	callstack 18
  9660  0048CE                     
  9661                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  9662  0048CE  EC8F  F024         	call	_I2C_MasterEnableRestart	;wreg free
  9663  0048D2                     
  9664                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  9665  0048D2  0E01               	movlw	1
  9666  0048D4  0012               	return		;funcret
  9667  0048D6                     __end_of_I2C_DO_SEND_RESTART:
  9668                           	callstack 0
  9669                           
  9670 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  9671 ;; Defined at:
  9672 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;		None
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      enum E3103
  9679 ;; Registers used:
  9680 ;;		wreg, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;Total ram usage:        0 bytes
  9691 ;; Hardware stack levels used: 1
  9692 ;; Hardware stack levels required when called: 5
  9693 ;; This function calls:
  9694 ;;		_I2C_MasterEnableRestart
  9695 ;; This function is called by:
  9696 ;;		_I2C_DO_TX
  9697 ;;		_I2C_MasterFsm
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text51
  9702  0048D6                     __ptext51:
  9703                           	callstack 0
  9704  0048D6                     _I2C_DO_SEND_RESTART_WRITE:
  9705                           	callstack 18
  9706  0048D6                     
  9707                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  9708  0048D6  EC8F  F024         	call	_I2C_MasterEnableRestart	;wreg free
  9709  0048DA                     
  9710                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  9711  0048DA  0E02               	movlw	2
  9712  0048DC  0012               	return		;funcret
  9713  0048DE                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  9714                           	callstack 0
  9715                           
  9716 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  9717 ;; Defined at:
  9718 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;                  1    wreg      enum E3103
  9725 ;; Registers used:
  9726 ;;		wreg, cstack
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;Total ram usage:        0 bytes
  9737 ;; Hardware stack levels used: 1
  9738 ;; Hardware stack levels required when called: 5
  9739 ;; This function calls:
  9740 ;;		_I2C_MasterEnableRestart
  9741 ;; This function is called by:
  9742 ;;		_I2C_DO_TX
  9743 ;;		_I2C_MasterFsm
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text52
  9748  0048DE                     __ptext52:
  9749                           	callstack 0
  9750  0048DE                     _I2C_DO_SEND_RESTART_READ:
  9751                           	callstack 18
  9752  0048DE                     
  9753                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  9754  0048DE  EC8F  F024         	call	_I2C_MasterEnableRestart	;wreg free
  9755  0048E2                     
  9756                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  9757  0048E2  0E01               	movlw	1
  9758  0048E4  0012               	return		;funcret
  9759  0048E6                     __end_of_I2C_DO_SEND_RESTART_READ:
  9760                           	callstack 0
  9761                           
  9762 ;; *************** function _I2C_DO_RCEN *****************
  9763 ;; Defined at:
  9764 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      enum E3103
  9771 ;; Registers used:
  9772 ;;		wreg, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; Hardware stack levels required when called: 5
  9785 ;; This function calls:
  9786 ;;		_I2C_MasterStartRx
  9787 ;; This function is called by:
  9788 ;;		_I2C_MasterFsm
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text53
  9793  004848                     __ptext53:
  9794                           	callstack 0
  9795  004848                     _I2C_DO_RCEN:
  9796                           	callstack 19
  9797  004848                     
  9798                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  9799  004848  0100               	movlb	0	; () banked
  9800  00484A  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
  9801  00484C                     
  9802                           ; BSR set to: 0
  9803                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  9804  00484C  EC87  F024         	call	_I2C_MasterStartRx	;wreg free
  9805  004850                     
  9806                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  9807  004850  0E04               	movlw	4
  9808  004852  0012               	return		;funcret
  9809  004854                     __end_of_I2C_DO_RCEN:
  9810                           	callstack 0
  9811                           
  9812 ;; *************** function _I2C_DO_RX *****************
  9813 ;; Defined at:
  9814 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      enum E3103
  9821 ;; Registers used:
  9822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;Total ram usage:        2 bytes
  9833 ;; Hardware stack levels used: 1
  9834 ;; Hardware stack levels required when called: 7
  9835 ;; This function calls:
  9836 ;;		Absolute function
  9837 ;;		_I2C_CallbackReturnReset
  9838 ;;		_I2C_CallbackReturnStop
  9839 ;;		_I2C_DO_RX_NACK_RESTART
  9840 ;;		_I2C_DO_RX_NACK_STOP
  9841 ;;		_I2C_MasterGetRxData
  9842 ;;		_I2C_MasterSendAck
  9843 ;;		_rd1RegCompleteHandler
  9844 ;;		_rd2RegCompleteHandler
  9845 ;;		_rdBlkRegCompleteHandler
  9846 ;;		_wr1RegCompleteHandler
  9847 ;;		_wr2RegCompleteHandler
  9848 ;; This function is called by:
  9849 ;;		_I2C_MasterFsm
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text54
  9854  003BC4                     __ptext54:
  9855                           	callstack 0
  9856  003BC4                     _I2C_DO_RX:
  9857                           	callstack 17
  9858  003BC4                     
  9859                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  9860  003BC4  EC85  F024         	call	_I2C_MasterGetRxData	;wreg free
  9861  003BC8  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
  9862  003BCC  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
  9863  003BD0  6EDF               	movwf	indf2,c
  9864  003BD2  0100               	movlb	0	; () banked
  9865  003BD4  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
  9866  003BD6  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
  9867  003BD8                     
  9868                           ; BSR set to: 0
  9869                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  9870  003BD8  077F               	decf	(_I2C_Status+31)& (0+255),f,b
  9871  003BDA  A0D8               	btfss	status,0,c
  9872  003BDC  0780               	decf	(_I2C_Status+32)& (0+255),f,b
  9873  003BDE  517F               	movf	(_I2C_Status+31)& (0+255),w,b
  9874  003BE0  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
  9875  003BE2  B4D8               	btfsc	status,2,c
  9876  003BE4  EFF6  F01D         	goto	u3051
  9877  003BE8  EFF8  F01D         	goto	u3050
  9878  003BEC                     u3051:
  9879  003BEC  EFFD  F01D         	goto	l294
  9880  003BF0                     u3050:
  9881  003BF0                     
  9882                           ; BSR set to: 0
  9883                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  9884  003BF0  EC77  F024         	call	_I2C_MasterSendAck	;wreg free
  9885  003BF4                     
  9886                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  9887  003BF4  0E05               	movlw	5
  9888  003BF6  EF34  F01E         	goto	l295
  9889  003BFA                     l294:
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  9893  003BFA  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
  9894                           
  9895                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  9896  003BFC  EF08  F01E         	goto	l4093
  9897  003C00                     l4083:
  9898                           
  9899                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  9900  003C00  EC57  F024         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
  9901  003C04  EF34  F01E         	goto	l295
  9902  003C08                     l4087:
  9903                           
  9904                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  9905  003C08  EC5B  F024         	call	_I2C_DO_RX_NACK_STOP	;wreg free
  9906  003C0C  EF34  F01E         	goto	l295
  9907  003C10                     l4093:
  9908                           
  9909                           ; BSR set to: 0
  9910  003C10  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
  9911  003C14  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
  9912  003C18  D802               	call	u3068
  9913  003C1A  EF18  F01E         	goto	u3069
  9914  003C1E                     u3068:
  9915  003C1E  0005               	push	
  9916  003C20  6EFA               	movwf	pclath,c
  9917  003C22  5160               	movf	_I2C_Status& (0+255),w,b
  9918  003C24  6EFD               	movwf	tosl,c
  9919  003C26  5161               	movf	(_I2C_Status+1)& (0+255),w,b
  9920  003C28  6EFE               	movwf	tosh,c
  9921  003C2A  6AFF               	clrf	tosu,c
  9922  003C2C  50FA               	movf	pclath,w,c
  9923  003C2E  0012               	return		;indir
  9924  003C30                     u3069:
  9925  003C30  6E10               	movwf	??_I2C_DO_RX^0,c
  9926  003C32  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
  9927                           
  9928                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9929                           ; Switch size 1, requested type "simple"
  9930                           ; Number of cases is 1, Range of values is 0 to 0
  9931                           ; switch strategies available:
  9932                           ; Name         Instructions Cycles
  9933                           ; simple_byte            4     3 (average)
  9934                           ;	Chosen strategy is simple_byte
  9935  003C34  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
  9936  003C36  0A00               	xorlw	0	; case 0
  9937  003C38  B4D8               	btfsc	status,2,c
  9938  003C3A  EF21  F01E         	goto	l7421
  9939  003C3E  EF04  F01E         	goto	l4087
  9940  003C42                     l7421:
  9941                           
  9942                           ; Switch size 1, requested type "simple"
  9943                           ; Number of cases is 4, Range of values is 1 to 4
  9944                           ; switch strategies available:
  9945                           ; Name         Instructions Cycles
  9946                           ; simple_byte           13     7 (average)
  9947                           ;	Chosen strategy is simple_byte
  9948  003C42  5010               	movf	??_I2C_DO_RX^0,w,c
  9949  003C44  0A01               	xorlw	1	; case 1
  9950  003C46  B4D8               	btfsc	status,2,c
  9951  003C48  EF04  F01E         	goto	l4087
  9952  003C4C  0A03               	xorlw	3	; case 2
  9953  003C4E  B4D8               	btfsc	status,2,c
  9954  003C50  EF00  F01E         	goto	l4083
  9955  003C54  0A01               	xorlw	1	; case 3
  9956  003C56  B4D8               	btfsc	status,2,c
  9957  003C58  EF00  F01E         	goto	l4083
  9958  003C5C  0A07               	xorlw	7	; case 4
  9959  003C5E  B4D8               	btfsc	status,2,c
  9960  003C60  EF04  F01E         	goto	l4087
  9961  003C64  EF04  F01E         	goto	l4087
  9962  003C68                     l295:
  9963  003C68  0012               	return		;funcret
  9964  003C6A                     __end_of_I2C_DO_RX:
  9965                           	callstack 0
  9966                           
  9967 ;; *************** function _I2C_DO_TX *****************
  9968 ;; Defined at:
  9969 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;		None
  9974 ;; Return value:  Size  Location     Type
  9975 ;;                  1    wreg      enum E3103
  9976 ;; Registers used:
  9977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9985 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;Total ram usage:        2 bytes
  9988 ;; Hardware stack levels used: 1
  9989 ;; Hardware stack levels required when called: 7
  9990 ;; This function calls:
  9991 ;;		Absolute function
  9992 ;;		_I2C_CallbackReturnReset
  9993 ;;		_I2C_CallbackReturnStop
  9994 ;;		_I2C_DO_SEND_RESTART_READ
  9995 ;;		_I2C_DO_SEND_RESTART_WRITE
  9996 ;;		_I2C_DO_SEND_STOP
  9997 ;;		_I2C_MasterIsNack
  9998 ;;		_I2C_MasterSendTxData
  9999 ;;		_rd1RegCompleteHandler
 10000 ;;		_rd2RegCompleteHandler
 10001 ;;		_rdBlkRegCompleteHandler
 10002 ;;		_wr1RegCompleteHandler
 10003 ;;		_wr2RegCompleteHandler
 10004 ;; This function is called by:
 10005 ;;		_I2C_MasterFsm
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text55
 10010  0038E6                     __ptext55:
 10011                           	callstack 0
 10012  0038E6                     _I2C_DO_TX:
 10013                           	callstack 17
 10014  0038E6                     
 10015                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 10016  0038E6  ECF2  F023         	call	_I2C_MasterIsNack	;wreg free
 10017  0038EA  0900               	iorlw	0
 10018  0038EC  B4D8               	btfsc	status,2,c
 10019  0038EE  EF7B  F01C         	goto	u3021
 10020  0038F2  EF7D  F01C         	goto	u3020
 10021  0038F6                     u3021:
 10022  0038F6  EFB8  F01C         	goto	l278
 10023  0038FA                     u3020:
 10024  0038FA  EF8B  F01C         	goto	l4053
 10025  0038FE                     l4039:
 10026                           
 10027                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10028  0038FE  EC6F  F024         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10029  003902  EFD4  F01C         	goto	l281
 10030  003906                     l4043:
 10031                           
 10032                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10033  003906  EC6B  F024         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10034  00390A  EFD4  F01C         	goto	l281
 10035  00390E                     l4047:
 10036                           
 10037                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 10038  00390E  EC63  F024         	call	_I2C_DO_SEND_STOP	;wreg free
 10039  003912  EFD4  F01C         	goto	l281
 10040  003916                     l4053:
 10041  003916  C072  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10042  00391A  C073  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10043  00391E  D802               	call	u3038
 10044  003920  EF9C  F01C         	goto	u3039
 10045  003924                     u3038:
 10046  003924  0005               	push	
 10047  003926  6EFA               	movwf	pclath,c
 10048  003928  0100               	movlb	0	; () banked
 10049  00392A  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 10050  00392C  6EFD               	movwf	tosl,c
 10051  00392E  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 10052  003930  6EFE               	movwf	tosh,c
 10053  003932  6AFF               	clrf	tosu,c
 10054  003934  50FA               	movf	pclath,w,c
 10055  003936  0012               	return		;indir
 10056  003938                     u3039:
 10057  003938  6E10               	movwf	??_I2C_DO_TX^0,c
 10058  00393A  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 10059                           
 10060                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10061                           ; Switch size 1, requested type "simple"
 10062                           ; Number of cases is 1, Range of values is 0 to 0
 10063                           ; switch strategies available:
 10064                           ; Name         Instructions Cycles
 10065                           ; simple_byte            4     3 (average)
 10066                           ;	Chosen strategy is simple_byte
 10067  00393C  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 10068  00393E  0A00               	xorlw	0	; case 0
 10069  003940  B4D8               	btfsc	status,2,c
 10070  003942  EFA5  F01C         	goto	l7423
 10071  003946  EF87  F01C         	goto	l4047
 10072  00394A                     l7423:
 10073                           
 10074                           ; Switch size 1, requested type "simple"
 10075                           ; Number of cases is 4, Range of values is 1 to 4
 10076                           ; switch strategies available:
 10077                           ; Name         Instructions Cycles
 10078                           ; simple_byte           13     7 (average)
 10079                           ;	Chosen strategy is simple_byte
 10080  00394A  5010               	movf	??_I2C_DO_TX^0,w,c
 10081  00394C  0A01               	xorlw	1	; case 1
 10082  00394E  B4D8               	btfsc	status,2,c
 10083  003950  EF87  F01C         	goto	l4047
 10084  003954  0A03               	xorlw	3	; case 2
 10085  003956  B4D8               	btfsc	status,2,c
 10086  003958  EF7F  F01C         	goto	l4039
 10087  00395C  0A01               	xorlw	1	; case 3
 10088  00395E  B4D8               	btfsc	status,2,c
 10089  003960  EF83  F01C         	goto	l4043
 10090  003964  0A07               	xorlw	7	; case 4
 10091  003966  B4D8               	btfsc	status,2,c
 10092  003968  EF87  F01C         	goto	l4047
 10093  00396C  EF87  F01C         	goto	l4047
 10094  003970                     l278:
 10095                           
 10096                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 10097  003970  0100               	movlb	0	; () banked
 10098  003972  9183               	bcf	(_I2C_Status+35)& (0+255),0,b
 10099  003974                     
 10100                           ; BSR set to: 0
 10101                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10102  003974  C07D  FFD9         	movff	_I2C_Status+29,fsr2l
 10103  003978  C07E  FFDA         	movff	_I2C_Status+30,fsr2h
 10104  00397C  4B7D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10105  00397E  2B7E               	incf	(_I2C_Status+30)& (0+255),f,b
 10106  003980  50DF               	movf	indf2,w,c
 10107  003982  EC73  F024         	call	_I2C_MasterSendTxData
 10108  003986                     
 10109                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10110  003986  0100               	movlb	0	; () banked
 10111  003988  077F               	decf	(_I2C_Status+31)& (0+255),f,b
 10112  00398A  A0D8               	btfss	status,0,c
 10113  00398C  0780               	decf	(_I2C_Status+32)& (0+255),f,b
 10114  00398E  517F               	movf	(_I2C_Status+31)& (0+255),w,b
 10115  003990  1180               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10116  003992  A4D8               	btfss	status,2,c
 10117  003994  EFCE  F01C         	goto	u3041
 10118  003998  EFD0  F01C         	goto	u3040
 10119  00399C                     u3041:
 10120  00399C  EFD3  F01C         	goto	l4061
 10121  0039A0                     u3040:
 10122  0039A0                     
 10123                           ; BSR set to: 0
 10124  0039A0  0E06               	movlw	6
 10125  0039A2  EFD4  F01C         	goto	l281
 10126  0039A6                     l4061:
 10127                           
 10128                           ; BSR set to: 0
 10129  0039A6  0E03               	movlw	3
 10130  0039A8                     l281:
 10131  0039A8  0012               	return		;funcret
 10132  0039AA                     __end_of_I2C_DO_TX:
 10133                           	callstack 0
 10134                           
 10135 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10136 ;; Defined at:
 10137 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;		None
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  1    wreg      enum E3103
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 0/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10155 ;;Total ram usage:        0 bytes
 10156 ;; Hardware stack levels used: 1
 10157 ;; Hardware stack levels required when called: 5
 10158 ;; This function calls:
 10159 ;;		_I2C_MasterSendTxData
 10160 ;; This function is called by:
 10161 ;;		_I2C_MasterFsm
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text56
 10166  00481C                     __ptext56:
 10167                           	callstack 0
 10168  00481C                     _I2C_DO_SEND_ADR_WRITE:
 10169                           	callstack 19
 10170  00481C                     
 10171                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 10172  00481C  0100               	movlb	0	; () banked
 10173  00481E  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 10174  004820                     
 10175                           ; BSR set to: 0
 10176                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 10177  004820  517C               	movf	(_I2C_Status+28)& (0+255),w,b
 10178  004822  257C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10179  004824  EC73  F024         	call	_I2C_MasterSendTxData
 10180  004828                     
 10181                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 10182  004828  0E03               	movlw	3
 10183  00482A  0012               	return		;funcret
 10184  00482C                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10185                           	callstack 0
 10186                           
 10187 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10188 ;; Defined at:
 10189 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  1    wreg      enum E3103
 10196 ;; Registers used:
 10197 ;;		wreg, status,0, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;Total ram usage:        0 bytes
 10208 ;; Hardware stack levels used: 1
 10209 ;; Hardware stack levels required when called: 5
 10210 ;; This function calls:
 10211 ;;		_I2C_MasterSendTxData
 10212 ;; This function is called by:
 10213 ;;		_I2C_MasterFsm
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           	psect	text57
 10218  00482C                     __ptext57:
 10219                           	callstack 0
 10220  00482C                     _I2C_DO_SEND_ADR_READ:
 10221                           	callstack 19
 10222  00482C                     
 10223                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 10224  00482C  0100               	movlb	0	; () banked
 10225  00482E  8183               	bsf	(_I2C_Status+35)& (0+255),0,b
 10226  004830                     
 10227                           ; BSR set to: 0
 10228                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 10229  004830  80D8               	bsf	status,0,c
 10230  004832  357C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 10231  004834  EC73  F024         	call	_I2C_MasterSendTxData
 10232  004838                     
 10233                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 10234  004838  0E05               	movlw	5
 10235  00483A  0012               	return		;funcret
 10236  00483C                     __end_of_I2C_DO_SEND_ADR_READ:
 10237                           	callstack 0
 10238                           
 10239 ;; *************** function _I2C_DO_IDLE *****************
 10240 ;; Defined at:
 10241 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;                  1    wreg      enum E3103
 10248 ;; Registers used:
 10249 ;;		wreg, status,2
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;Total ram usage:        0 bytes
 10260 ;; Hardware stack levels used: 1
 10261 ;; Hardware stack levels required when called: 4
 10262 ;; This function calls:
 10263 ;;		Nothing
 10264 ;; This function is called by:
 10265 ;;		_I2C_MasterFsm
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text58
 10270  004854                     __ptext58:
 10271                           	callstack 0
 10272  004854                     _I2C_DO_IDLE:
 10273                           	callstack 20
 10274  004854                     
 10275                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 10276  004854  0100               	movlb	0	; () banked
 10277  004856  9383               	bcf	(_I2C_Status+35)& (0+255),1,b
 10278  004858                     
 10279                           ; BSR set to: 0
 10280                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 10281  004858  0E00               	movlw	0
 10282  00485A  6F82               	movwf	(_I2C_Status+34)& (0+255),b
 10283  00485C                     
 10284                           ; BSR set to: 0
 10285                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 10286  00485C  0E0E               	movlw	14
 10287  00485E                     
 10288                           ; BSR set to: 0
 10289  00485E  0012               	return		;funcret
 10290  004860                     __end_of_I2C_DO_IDLE:
 10291                           	callstack 0
 10292                           
 10293 ;; *************** function _I2C_DO_TX_EMPTY *****************
 10294 ;; Defined at:
 10295 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;		None
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;		None
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      enum E3103
 10302 ;; Registers used:
 10303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;Total ram usage:        2 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 7
 10316 ;; This function calls:
 10317 ;;		Absolute function
 10318 ;;		_I2C_CallbackReturnReset
 10319 ;;		_I2C_CallbackReturnStop
 10320 ;;		_I2C_DO_SEND_RESTART
 10321 ;;		_I2C_DO_SEND_STOP
 10322 ;;		_I2C_MasterSetIrq
 10323 ;;		_rd1RegCompleteHandler
 10324 ;;		_rd2RegCompleteHandler
 10325 ;;		_rdBlkRegCompleteHandler
 10326 ;;		_wr1RegCompleteHandler
 10327 ;;		_wr2RegCompleteHandler
 10328 ;; This function is called by:
 10329 ;;		_I2C_MasterFsm
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text59
 10334  003E14                     __ptext59:
 10335                           	callstack 0
 10336  003E14                     _I2C_DO_TX_EMPTY:
 10337                           	callstack 17
 10338  003E14                     
 10339                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 10340  003E14  0100               	movlb	0	; () banked
 10341  003E16  8783               	bsf	(_I2C_Status+35)& (0+255),3,b
 10342                           
 10343                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10344  003E18  EF1B  F01F         	goto	l4125
 10345  003E1C                     l4109:
 10346                           
 10347                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 10348  003E1C  EC67  F024         	call	_I2C_DO_SEND_RESTART	;wreg free
 10349  003E20  EF47  F01F         	goto	l312
 10350  003E24                     l4113:
 10351                           
 10352                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 10353  003E24  EC83  F024         	call	_I2C_MasterSetIrq	;wreg free
 10354  003E28                     
 10355                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 10356  003E28  0E03               	movlw	3
 10357  003E2A  EF47  F01F         	goto	l312
 10358  003E2E                     l4119:
 10359                           
 10360                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 10361  003E2E  EC63  F024         	call	_I2C_DO_SEND_STOP	;wreg free
 10362  003E32  EF47  F01F         	goto	l312
 10363  003E36                     l4125:
 10364                           
 10365                           ; BSR set to: 0
 10366  003E36  C06C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10367  003E3A  C06D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10368  003E3E  D802               	call	u3078
 10369  003E40  EF2B  F01F         	goto	u3079
 10370  003E44                     u3078:
 10371  003E44  0005               	push	
 10372  003E46  6EFA               	movwf	pclath,c
 10373  003E48  5160               	movf	_I2C_Status& (0+255),w,b
 10374  003E4A  6EFD               	movwf	tosl,c
 10375  003E4C  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 10376  003E4E  6EFE               	movwf	tosh,c
 10377  003E50  6AFF               	clrf	tosu,c
 10378  003E52  50FA               	movf	pclath,w,c
 10379  003E54  0012               	return		;indir
 10380  003E56                     u3079:
 10381  003E56  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 10382  003E58  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 10383                           
 10384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10385                           ; Switch size 1, requested type "simple"
 10386                           ; Number of cases is 1, Range of values is 0 to 0
 10387                           ; switch strategies available:
 10388                           ; Name         Instructions Cycles
 10389                           ; simple_byte            4     3 (average)
 10390                           ;	Chosen strategy is simple_byte
 10391  003E5A  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 10392  003E5C  0A00               	xorlw	0	; case 0
 10393  003E5E  B4D8               	btfsc	status,2,c
 10394  003E60  EF34  F01F         	goto	l7425
 10395  003E64  EF17  F01F         	goto	l4119
 10396  003E68                     l7425:
 10397                           
 10398                           ; Switch size 1, requested type "simple"
 10399                           ; Number of cases is 4, Range of values is 1 to 4
 10400                           ; switch strategies available:
 10401                           ; Name         Instructions Cycles
 10402                           ; simple_byte           13     7 (average)
 10403                           ;	Chosen strategy is simple_byte
 10404  003E68  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 10405  003E6A  0A01               	xorlw	1	; case 1
 10406  003E6C  B4D8               	btfsc	status,2,c
 10407  003E6E  EF17  F01F         	goto	l4119
 10408  003E72  0A03               	xorlw	3	; case 2
 10409  003E74  B4D8               	btfsc	status,2,c
 10410  003E76  EF0E  F01F         	goto	l4109
 10411  003E7A  0A01               	xorlw	1	; case 3
 10412  003E7C  B4D8               	btfsc	status,2,c
 10413  003E7E  EF0E  F01F         	goto	l4109
 10414  003E82  0A07               	xorlw	7	; case 4
 10415  003E84  B4D8               	btfsc	status,2,c
 10416  003E86  EF12  F01F         	goto	l4113
 10417  003E8A  EF17  F01F         	goto	l4119
 10418  003E8E                     l312:
 10419  003E8E  0012               	return		;funcret
 10420  003E90                     __end_of_I2C_DO_TX_EMPTY:
 10421                           	callstack 0
 10422                           
 10423 ;; *************** function _I2C_MasterSetIrq *****************
 10424 ;; Defined at:
 10425 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;		None
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		None
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;Total ram usage:        0 bytes
 10444 ;; Hardware stack levels used: 1
 10445 ;; Hardware stack levels required when called: 4
 10446 ;; This function calls:
 10447 ;;		Nothing
 10448 ;; This function is called by:
 10449 ;;		_I2C_DO_TX_EMPTY
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text60
 10454  004906                     __ptext60:
 10455                           	callstack 0
 10456  004906                     _I2C_MasterSetIrq:
 10457                           	callstack 19
 10458  004906                     
 10459                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 10460  004906  869E               	bsf	158,3,c	;volatile
 10461  004908  0012               	return		;funcret
 10462  00490A                     __end_of_I2C_MasterSetIrq:
 10463                           	callstack 0
 10464                           
 10465 ;; *************** function _I2C_MasterIsNack *****************
 10466 ;; Defined at:
 10467 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;		None
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  1    wreg      _Bool 
 10474 ;; Registers used:
 10475 ;;		wreg
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10485 ;;Total ram usage:        0 bytes
 10486 ;; Hardware stack levels used: 1
 10487 ;; Hardware stack levels required when called: 4
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_I2C_MasterFsm
 10492 ;;		_I2C_DO_TX
 10493 ;; This function uses a non-reentrant model
 10494 ;;
 10495                           
 10496                           	psect	text61
 10497  0047E4                     __ptext61:
 10498                           	callstack 0
 10499  0047E4                     _I2C_MasterIsNack:
 10500                           	callstack 20
 10501  0047E4                     
 10502                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 10503  0047E4  BCC5               	btfsc	197,6,c	;volatile
 10504  0047E6  EFF7  F023         	goto	u3011
 10505  0047EA  EFFA  F023         	goto	u3010
 10506  0047EE                     u3011:
 10507  0047EE  0E01               	movlw	1
 10508  0047F0  EFFB  F023         	goto	u3016
 10509  0047F4                     u3010:
 10510  0047F4  0E00               	movlw	0
 10511  0047F6                     u3016:
 10512  0047F6  0012               	return		;funcret
 10513  0047F8                     __end_of_I2C_MasterIsNack:
 10514                           	callstack 0
 10515                           
 10516 ;; *************** function _I2C_MasterSendTxData *****************
 10517 ;; Defined at:
 10518 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  data            1    wreg     unsigned char 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  data            1    4[COMRAM] unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      void 
 10525 ;; Registers used:
 10526 ;;		wreg
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10535 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10536 ;;Total ram usage:        1 bytes
 10537 ;; Hardware stack levels used: 1
 10538 ;; Hardware stack levels required when called: 4
 10539 ;; This function calls:
 10540 ;;		Nothing
 10541 ;; This function is called by:
 10542 ;;		_I2C_DO_SEND_ADR_READ
 10543 ;;		_I2C_DO_SEND_ADR_WRITE
 10544 ;;		_I2C_DO_TX
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           	psect	text62
 10549  0048E6                     __ptext62:
 10550                           	callstack 0
 10551  0048E6                     _I2C_MasterSendTxData:
 10552                           	callstack 19
 10553                           
 10554                           ;incstack = 0
 10555                           ;I2C_MasterSendTxData@data stored from wreg
 10556  0048E6  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 10557  0048E8                     
 10558                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 10559  0048E8  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 10560  0048EC  0012               	return		;funcret
 10561  0048EE                     __end_of_I2C_MasterSendTxData:
 10562                           	callstack 0
 10563                           
 10564 ;; *************** function _I2C_MasterSendAck *****************
 10565 ;; Defined at:
 10566 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;		None
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;		None
 10571 ;; Return value:  Size  Location     Type
 10572 ;;                  1    wreg      void 
 10573 ;; Registers used:
 10574 ;;		None
 10575 ;; Tracked objects:
 10576 ;;		On entry : 0/0
 10577 ;;		On exit  : 0/0
 10578 ;;		Unchanged: 0/0
 10579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;Total ram usage:        0 bytes
 10585 ;; Hardware stack levels used: 1
 10586 ;; Hardware stack levels required when called: 4
 10587 ;; This function calls:
 10588 ;;		Nothing
 10589 ;; This function is called by:
 10590 ;;		_I2C_DO_RX
 10591 ;;		_I2C_DO_RX_ACK
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text63
 10596  0048EE                     __ptext63:
 10597                           	callstack 0
 10598  0048EE                     _I2C_MasterSendAck:
 10599                           	callstack 19
 10600  0048EE                     
 10601                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 10602  0048EE  9AC5               	bcf	197,5,c	;volatile
 10603                           
 10604                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 10605  0048F0  88C5               	bsf	197,4,c	;volatile
 10606  0048F2  0012               	return		;funcret
 10607  0048F4                     __end_of_I2C_MasterSendAck:
 10608                           	callstack 0
 10609                           
 10610 ;; *************** function _I2C_MasterGetRxData *****************
 10611 ;; Defined at:
 10612 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 10613 ;; Parameters:    Size  Location     Type
 10614 ;;		None
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;		None
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  1    wreg      unsigned char 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;Total ram usage:        0 bytes
 10631 ;; Hardware stack levels used: 1
 10632 ;; Hardware stack levels required when called: 4
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_I2C_DO_RX
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text64
 10641  00490A                     __ptext64:
 10642                           	callstack 0
 10643  00490A                     _I2C_MasterGetRxData:
 10644                           	callstack 19
 10645  00490A                     
 10646                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 10647  00490A  50C9               	movf	201,w,c	;volatile
 10648  00490C  0012               	return		;funcret
 10649  00490E                     __end_of_I2C_MasterGetRxData:
 10650                           	callstack 0
 10651                           
 10652 ;; *************** function _I2C_MasterSendNack *****************
 10653 ;; Defined at:
 10654 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      void 
 10661 ;; Registers used:
 10662 ;;		None
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;Total ram usage:        0 bytes
 10673 ;; Hardware stack levels used: 1
 10674 ;; Hardware stack levels required when called: 4
 10675 ;; This function calls:
 10676 ;;		Nothing
 10677 ;; This function is called by:
 10678 ;;		_I2C_DO_RX_NACK_STOP
 10679 ;;		_I2C_DO_RX_NACK_RESTART
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text65
 10684  0048F4                     __ptext65:
 10685                           	callstack 0
 10686  0048F4                     _I2C_MasterSendNack:
 10687                           	callstack 19
 10688  0048F4                     
 10689                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 10690  0048F4  8AC5               	bsf	197,5,c	;volatile
 10691                           
 10692                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 10693  0048F6  88C5               	bsf	197,4,c	;volatile
 10694  0048F8  0012               	return		;funcret
 10695  0048FA                     __end_of_I2C_MasterSendNack:
 10696                           	callstack 0
 10697                           
 10698 ;; *************** function _I2C_MasterStartRx *****************
 10699 ;; Defined at:
 10700 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;		None
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;		None
 10705 ;; Return value:  Size  Location     Type
 10706 ;;                  1    wreg      void 
 10707 ;; Registers used:
 10708 ;;		None
 10709 ;; Tracked objects:
 10710 ;;		On entry : 0/0
 10711 ;;		On exit  : 0/0
 10712 ;;		Unchanged: 0/0
 10713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10718 ;;Total ram usage:        0 bytes
 10719 ;; Hardware stack levels used: 1
 10720 ;; Hardware stack levels required when called: 4
 10721 ;; This function calls:
 10722 ;;		Nothing
 10723 ;; This function is called by:
 10724 ;;		_I2C_DO_RCEN
 10725 ;; This function uses a non-reentrant model
 10726 ;;
 10727                           
 10728                           	psect	text66
 10729  00490E                     __ptext66:
 10730                           	callstack 0
 10731  00490E                     _I2C_MasterStartRx:
 10732                           	callstack 19
 10733  00490E                     
 10734                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 10735  00490E  86C5               	bsf	197,3,c	;volatile
 10736  004910  0012               	return		;funcret
 10737  004912                     __end_of_I2C_MasterStartRx:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _I2C_CallbackReturnReset *****************
 10741 ;; Defined at:
 10742 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  funPtr          2   13[COMRAM] PTR void 
 10745 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10746 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      enum E360
 10751 ;; Registers used:
 10752 ;;		wreg
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10762 ;;Total ram usage:        2 bytes
 10763 ;; Hardware stack levels used: 1
 10764 ;; Hardware stack levels required when called: 4
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_I2C_Open
 10769 ;;		_I2C_DO_TX
 10770 ;;		_I2C_DO_RX
 10771 ;;		_I2C_DO_TX_EMPTY
 10772 ;;		_I2C_DO_ADDRESS_NACK
 10773 ;;		_I2C_DO_RX_EMPTY
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text67
 10778  004912                     __ptext67:
 10779                           	callstack 0
 10780  004912                     _I2C_CallbackReturnReset:
 10781                           	callstack 19
 10782  004912                     
 10783                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 10784  004912  0E05               	movlw	5
 10785  004914  0012               	return		;funcret
 10786  004916                     __end_of_I2C_CallbackReturnReset:
 10787                           	callstack 0
 10788                           
 10789 ;; *************** function _I2C_CallbackReturnStop *****************
 10790 ;; Defined at:
 10791 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 10792 ;; Parameters:    Size  Location     Type
 10793 ;;  funPtr          2   13[COMRAM] PTR void 
 10794 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10795 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      enum E360
 10800 ;; Registers used:
 10801 ;;		wreg
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;Total ram usage:        2 bytes
 10812 ;; Hardware stack levels used: 1
 10813 ;; Hardware stack levels required when called: 4
 10814 ;; This function calls:
 10815 ;;		Nothing
 10816 ;; This function is called by:
 10817 ;;		_I2C_Open
 10818 ;;		_I2C_SetCallback
 10819 ;;		_I2C_DO_TX
 10820 ;;		_I2C_DO_RX
 10821 ;;		_I2C_DO_TX_EMPTY
 10822 ;;		_I2C_DO_ADDRESS_NACK
 10823 ;;		_I2C_DO_RX_EMPTY
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text68
 10828  004916                     __ptext68:
 10829                           	callstack 0
 10830  004916                     _I2C_CallbackReturnStop:
 10831                           	callstack 19
 10832  004916                     
 10833                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 10834  004916  0E01               	movlw	1
 10835  004918  0012               	return		;funcret
 10836  00491A                     __end_of_I2C_CallbackReturnStop:
 10837                           	callstack 0
 10838                           
 10839 ;; *************** function _rdBlkRegCompleteHandler *****************
 10840 ;; Defined at:
 10841 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 10842 ;; Parameters:    Size  Location     Type
 10843 ;;  ptr             2   13[COMRAM] PTR void 
 10844 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10845 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      enum E360
 10850 ;; Registers used:
 10851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;Total ram usage:        2 bytes
 10862 ;; Hardware stack levels used: 1
 10863 ;; Hardware stack levels required when called: 6
 10864 ;; This function calls:
 10865 ;;		_I2C_SetBuffer
 10866 ;;		_I2C_SetDataCompleteCallback
 10867 ;; This function is called by:
 10868 ;;		_I2C_ReadDataBlock
 10869 ;;		_I2C_DO_TX
 10870 ;;		_I2C_DO_RX
 10871 ;;		_I2C_DO_TX_EMPTY
 10872 ;;		_I2C_DO_ADDRESS_NACK
 10873 ;;		_I2C_DO_RX_EMPTY
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text69
 10878  004448                     __ptext69:
 10879                           	callstack 0
 10880  004448                     _rdBlkRegCompleteHandler:
 10881                           	callstack 17
 10882  004448                     
 10883                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 10884  004448  EE20 F002          	lfsr	2,2
 10885  00444C  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 10886  00444E  26D9               	addwf	fsr2l,f,c
 10887  004450  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 10888  004452  22DA               	addwfc	fsr2h,f,c
 10889  004454  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 10890  004458  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 10891  00445C  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 10892  004460  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 10893  004464  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 10894  004468  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 10895  00446C  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
 10896  004470                     
 10897                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10898  004470  0E00               	movlw	0
 10899  004472  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10900  004474  0E00               	movlw	0
 10901  004476  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10902  004478  0E00               	movlw	0
 10903  00447A  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10904  00447C  0E00               	movlw	0
 10905  00447E  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10906  004480  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
 10907  004484                     
 10908                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 10909  004484  0E02               	movlw	2
 10910  004486  0012               	return		;funcret
 10911  004488                     __end_of_rdBlkRegCompleteHandler:
 10912                           	callstack 0
 10913                           
 10914 ;; *************** function _wr1RegCompleteHandler *****************
 10915 ;; Defined at:
 10916 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;  ptr             2   13[COMRAM] PTR void 
 10919 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10920 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      enum E360
 10925 ;; Registers used:
 10926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;Total ram usage:        2 bytes
 10937 ;; Hardware stack levels used: 1
 10938 ;; Hardware stack levels required when called: 6
 10939 ;; This function calls:
 10940 ;;		_I2C_SetBuffer
 10941 ;;		_I2C_SetDataCompleteCallback
 10942 ;; This function is called by:
 10943 ;;		_I2C_Write1ByteRegister
 10944 ;;		_I2C_DO_TX
 10945 ;;		_I2C_DO_RX
 10946 ;;		_I2C_DO_TX_EMPTY
 10947 ;;		_I2C_DO_ADDRESS_NACK
 10948 ;;		_I2C_DO_RX_EMPTY
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           	psect	text70
 10953  0045C2                     __ptext70:
 10954                           	callstack 0
 10955  0045C2                     _wr1RegCompleteHandler:
 10956                           	callstack 17
 10957  0045C2                     
 10958                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 10959  0045C2  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 10960  0045C6  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 10961  0045CA  0E00               	movlw	0
 10962  0045CC  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 10963  0045CE  0E01               	movlw	1
 10964  0045D0  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 10965  0045D2  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
 10966  0045D6                     
 10967                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 10968  0045D6  0E00               	movlw	0
 10969  0045D8  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 10970  0045DA  0E00               	movlw	0
 10971  0045DC  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 10972  0045DE  0E00               	movlw	0
 10973  0045E0  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 10974  0045E2  0E00               	movlw	0
 10975  0045E4  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 10976  0045E6  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
 10977  0045EA                     
 10978                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 10979  0045EA  0E04               	movlw	4
 10980  0045EC  0012               	return		;funcret
 10981  0045EE                     __end_of_wr1RegCompleteHandler:
 10982                           	callstack 0
 10983                           
 10984 ;; *************** function _rd2RegCompleteHandler *****************
 10985 ;; Defined at:
 10986 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  ptr             2   13[COMRAM] PTR void 
 10989 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10990 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;		None
 10993 ;; Return value:  Size  Location     Type
 10994 ;;                  1    wreg      enum E360
 10995 ;; Registers used:
 10996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10997 ;; Tracked objects:
 10998 ;;		On entry : 0/0
 10999 ;;		On exit  : 0/0
 11000 ;;		Unchanged: 0/0
 11001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;Total ram usage:        2 bytes
 11007 ;; Hardware stack levels used: 1
 11008 ;; Hardware stack levels required when called: 6
 11009 ;; This function calls:
 11010 ;;		_I2C_SetBuffer
 11011 ;;		_I2C_SetDataCompleteCallback
 11012 ;; This function is called by:
 11013 ;;		_I2C_Read2ByteRegister
 11014 ;;		_I2C_DO_TX
 11015 ;;		_I2C_DO_RX
 11016 ;;		_I2C_DO_TX_EMPTY
 11017 ;;		_I2C_DO_ADDRESS_NACK
 11018 ;;		_I2C_DO_RX_EMPTY
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text71
 11023  0045EE                     __ptext71:
 11024                           	callstack 0
 11025  0045EE                     _rd2RegCompleteHandler:
 11026                           	callstack 17
 11027  0045EE                     
 11028                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11029  0045EE  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11030  0045F2  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11031  0045F6  0E00               	movlw	0
 11032  0045F8  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11033  0045FA  0E02               	movlw	2
 11034  0045FC  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 11035  0045FE  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
 11036  004602                     
 11037                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11038  004602  0E00               	movlw	0
 11039  004604  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11040  004606  0E00               	movlw	0
 11041  004608  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11042  00460A  0E00               	movlw	0
 11043  00460C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11044  00460E  0E00               	movlw	0
 11045  004610  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11046  004612  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
 11047  004616                     
 11048                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11049  004616  0E02               	movlw	2
 11050  004618  0012               	return		;funcret
 11051  00461A                     __end_of_rd2RegCompleteHandler:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function _rd1RegCompleteHandler *****************
 11055 ;; Defined at:
 11056 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  ptr             2   13[COMRAM] PTR void 
 11059 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11060 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  1    wreg      enum E360
 11065 ;; Registers used:
 11066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;Total ram usage:        2 bytes
 11077 ;; Hardware stack levels used: 1
 11078 ;; Hardware stack levels required when called: 6
 11079 ;; This function calls:
 11080 ;;		_I2C_SetBuffer
 11081 ;;		_I2C_SetDataCompleteCallback
 11082 ;; This function is called by:
 11083 ;;		_I2C_Read1ByteRegister
 11084 ;;		_I2C_DO_TX
 11085 ;;		_I2C_DO_RX
 11086 ;;		_I2C_DO_TX_EMPTY
 11087 ;;		_I2C_DO_ADDRESS_NACK
 11088 ;;		_I2C_DO_RX_EMPTY
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text72
 11093  00461A                     __ptext72:
 11094                           	callstack 0
 11095  00461A                     _rd1RegCompleteHandler:
 11096                           	callstack 17
 11097  00461A                     
 11098                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11099  00461A  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11100  00461E  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11101  004622  0E00               	movlw	0
 11102  004624  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11103  004626  0E01               	movlw	1
 11104  004628  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 11105  00462A  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
 11106  00462E                     
 11107                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11108  00462E  0E00               	movlw	0
 11109  004630  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11110  004632  0E00               	movlw	0
 11111  004634  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11112  004636  0E00               	movlw	0
 11113  004638  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11114  00463A  0E00               	movlw	0
 11115  00463C  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11116  00463E  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
 11117  004642                     
 11118                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11119  004642  0E02               	movlw	2
 11120  004644  0012               	return		;funcret
 11121  004646                     __end_of_rd1RegCompleteHandler:
 11122                           	callstack 0
 11123                           
 11124 ;; *************** function _wr2RegCompleteHandler *****************
 11125 ;; Defined at:
 11126 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;  ptr             2   13[COMRAM] PTR void 
 11129 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11130 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11131 ;; Auto vars:     Size  Location     Type
 11132 ;;		None
 11133 ;; Return value:  Size  Location     Type
 11134 ;;                  1    wreg      enum E360
 11135 ;; Registers used:
 11136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11137 ;; Tracked objects:
 11138 ;;		On entry : 0/0
 11139 ;;		On exit  : 0/0
 11140 ;;		Unchanged: 0/0
 11141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11146 ;;Total ram usage:        2 bytes
 11147 ;; Hardware stack levels used: 1
 11148 ;; Hardware stack levels required when called: 6
 11149 ;; This function calls:
 11150 ;;		_I2C_SetBuffer
 11151 ;;		_I2C_SetDataCompleteCallback
 11152 ;; This function is called by:
 11153 ;;		_I2C_Write2ByteRegister
 11154 ;;		_I2C_DO_TX
 11155 ;;		_I2C_DO_RX
 11156 ;;		_I2C_DO_TX_EMPTY
 11157 ;;		_I2C_DO_ADDRESS_NACK
 11158 ;;		_I2C_DO_RX_EMPTY
 11159 ;; This function uses a non-reentrant model
 11160 ;;
 11161                           
 11162                           	psect	text73
 11163  004646                     __ptext73:
 11164                           	callstack 0
 11165  004646                     _wr2RegCompleteHandler:
 11166                           	callstack 17
 11167  004646                     
 11168                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11169  004646  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11170  00464A  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11171  00464E  0E00               	movlw	0
 11172  004650  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11173  004652  0E02               	movlw	2
 11174  004654  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 11175  004656  EC8C  F023         	call	_I2C_SetBuffer	;wreg free
 11176  00465A                     
 11177                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11178  00465A  0E00               	movlw	0
 11179  00465C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11180  00465E  0E00               	movlw	0
 11181  004660  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11182  004662  0E00               	movlw	0
 11183  004664  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11184  004666  0E00               	movlw	0
 11185  004668  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11186  00466A  ECDB  F023         	call	_I2C_SetDataCompleteCallback	;wreg free
 11187  00466E                     
 11188                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11189  00466E  0E04               	movlw	4
 11190  004670  0012               	return		;funcret
 11191  004672                     __end_of_wr2RegCompleteHandler:
 11192                           	callstack 0
 11193                           
 11194 ;; *************** function _I2C_SetDataCompleteCallback *****************
 11195 ;; Defined at:
 11196 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 11197 ;; Parameters:    Size  Location     Type
 11198 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 11199 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11200 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11201 ;;  ptr             2   11[COMRAM] PTR void 
 11202 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11203 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;		None
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  1    wreg      void 
 11208 ;; Registers used:
 11209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11215 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11219 ;;Total ram usage:        4 bytes
 11220 ;; Hardware stack levels used: 1
 11221 ;; Hardware stack levels required when called: 5
 11222 ;; This function calls:
 11223 ;;		_I2C_SetCallback
 11224 ;; This function is called by:
 11225 ;;		_I2C_Read2ByteRegister
 11226 ;;		_I2C_Write1ByteRegister
 11227 ;;		_rd1RegCompleteHandler
 11228 ;;		_rd2RegCompleteHandler
 11229 ;;		_wr1RegCompleteHandler
 11230 ;;		_wr2RegCompleteHandler
 11231 ;;		_rdBlkRegCompleteHandler
 11232 ;;		_I2C_Read1ByteRegister
 11233 ;;		_I2C_Write2ByteRegister
 11234 ;;		_I2C_ReadDataBlock
 11235 ;; This function uses a non-reentrant model
 11236 ;;
 11237                           
 11238                           	psect	text74
 11239  0047B6                     __ptext74:
 11240                           	callstack 0
 11241  0047B6                     _I2C_SetDataCompleteCallback:
 11242                           	callstack 23
 11243  0047B6                     
 11244                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11245  0047B6  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 11246  0047BA  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 11247  0047BE  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 11248  0047C2  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 11249  0047C6  0E00               	movlw	0
 11250  0047C8  EC48  F01F         	call	_I2C_SetCallback
 11251  0047CC  0012               	return		;funcret
 11252  0047CE                     __end_of_I2C_SetDataCompleteCallback:
 11253                           	callstack 0
 11254                           
 11255 ;; *************** function _I2C_SetCallback *****************
 11256 ;; Defined at:
 11257 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;  idx             1    wreg     enum E3121
 11260 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 11261 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11262 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11263 ;;  ptr             2    6[COMRAM] PTR void 
 11264 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11265 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11266 ;; Auto vars:     Size  Location     Type
 11267 ;;  idx             1    8[COMRAM] enum E3121
 11268 ;; Return value:  Size  Location     Type
 11269 ;;                  1    wreg      void 
 11270 ;; Registers used:
 11271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;Total ram usage:        5 bytes
 11282 ;; Hardware stack levels used: 1
 11283 ;; Hardware stack levels required when called: 4
 11284 ;; This function calls:
 11285 ;;		Nothing
 11286 ;; This function is called by:
 11287 ;;		_I2C_SetDataCompleteCallback
 11288 ;;		_I2C_SetAddressNackCallback
 11289 ;;		_I2C_SetWriteCollisionCallback
 11290 ;;		_I2C_SetDataNackCallback
 11291 ;;		_I2C_SetTimeoutCallback
 11292 ;; This function uses a non-reentrant model
 11293 ;;
 11294                           
 11295                           	psect	text75
 11296  003E90                     __ptext75:
 11297                           	callstack 0
 11298  003E90                     _I2C_SetCallback:
 11299                           	callstack 23
 11300                           
 11301                           ;incstack = 0
 11302                           ;I2C_SetCallback@idx stored from wreg
 11303  003E90  6E09               	movwf	I2C_SetCallback@idx^0,c
 11304  003E92                     
 11305                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 11306  003E92  5005               	movf	I2C_SetCallback@cb^0,w,c
 11307  003E94  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 11308  003E96  B4D8               	btfsc	status,2,c
 11309  003E98  EF50  F01F         	goto	u2961
 11310  003E9C  EF52  F01F         	goto	u2960
 11311  003EA0                     u2961:
 11312  003EA0  EF6C  F01F         	goto	l3871
 11313  003EA4                     u2960:
 11314  003EA4                     
 11315                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 11316  003EA4  5009               	movf	I2C_SetCallback@idx^0,w,c
 11317  003EA6  0D02               	mullw	2
 11318  003EA8  0E60               	movlw	low _I2C_Status
 11319  003EAA  24F3               	addwf	243,w,c
 11320  003EAC  6ED9               	movwf	fsr2l,c
 11321  003EAE  0E00               	movlw	high _I2C_Status
 11322  003EB0  20F4               	addwfc	prodh,w,c
 11323  003EB2  6EDA               	movwf	fsr2h,c
 11324  003EB4  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 11325  003EB8  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 11326                           
 11327                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 11328  003EBC  5009               	movf	I2C_SetCallback@idx^0,w,c
 11329  003EBE  0D02               	mullw	2
 11330  003EC0  0E6C               	movlw	low (_I2C_Status+12)
 11331  003EC2  24F3               	addwf	243,w,c
 11332  003EC4  6ED9               	movwf	fsr2l,c
 11333  003EC6  0E00               	movlw	high (_I2C_Status+12)
 11334  003EC8  20F4               	addwfc	prodh,w,c
 11335  003ECA  6EDA               	movwf	fsr2h,c
 11336  003ECC  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 11337  003ED0  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 11338                           
 11339                           ;mcc_generated_files/i2c_master.c: 304:     }
 11340  003ED4  EF84  F01F         	goto	l256
 11341  003ED8                     l3871:
 11342                           
 11343                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 11344  003ED8  5009               	movf	I2C_SetCallback@idx^0,w,c
 11345  003EDA  0D02               	mullw	2
 11346  003EDC  0E60               	movlw	low _I2C_Status
 11347  003EDE  24F3               	addwf	243,w,c
 11348  003EE0  6ED9               	movwf	fsr2l,c
 11349  003EE2  0E00               	movlw	high _I2C_Status
 11350  003EE4  20F4               	addwfc	prodh,w,c
 11351  003EE6  6EDA               	movwf	fsr2h,c
 11352  003EE8  0E16               	movlw	low _I2C_CallbackReturnStop
 11353  003EEA  6EDE               	movwf	postinc2,c
 11354  003EEC  0E49               	movlw	high _I2C_CallbackReturnStop
 11355  003EEE  6EDD               	movwf	postdec2,c
 11356                           
 11357                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 11358  003EF0  5009               	movf	I2C_SetCallback@idx^0,w,c
 11359  003EF2  0D02               	mullw	2
 11360  003EF4  0E6C               	movlw	low (_I2C_Status+12)
 11361  003EF6  24F3               	addwf	243,w,c
 11362  003EF8  6ED9               	movwf	fsr2l,c
 11363  003EFA  0E00               	movlw	high (_I2C_Status+12)
 11364  003EFC  20F4               	addwfc	prodh,w,c
 11365  003EFE  6EDA               	movwf	fsr2h,c
 11366  003F00  0E00               	movlw	0
 11367  003F02  6EDE               	movwf	postinc2,c
 11368  003F04  0E00               	movlw	0
 11369  003F06  6EDD               	movwf	postdec2,c
 11370  003F08                     l256:
 11371  003F08  0012               	return		;funcret
 11372  003F0A                     __end_of_I2C_SetCallback:
 11373                           	callstack 0
 11374                           
 11375 ;; *************** function _I2C_SetBuffer *****************
 11376 ;; Defined at:
 11377 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 11378 ;; Parameters:    Size  Location     Type
 11379 ;;  buffer          2    4[COMRAM] PTR void 
 11380 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
 11381 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
 11382 ;;		 -> NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), 
 11383 ;;  bufferSize      2    6[COMRAM] unsigned int 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;		None
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, status,2, status,0
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11398 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11399 ;;Total ram usage:        4 bytes
 11400 ;; Hardware stack levels used: 1
 11401 ;; Hardware stack levels required when called: 4
 11402 ;; This function calls:
 11403 ;;		Nothing
 11404 ;; This function is called by:
 11405 ;;		_I2C_Read2ByteRegister
 11406 ;;		_I2C_Write1ByteRegister
 11407 ;;		_rd1RegCompleteHandler
 11408 ;;		_rd2RegCompleteHandler
 11409 ;;		_wr1RegCompleteHandler
 11410 ;;		_wr2RegCompleteHandler
 11411 ;;		_rdBlkRegCompleteHandler
 11412 ;;		_I2C_Read1ByteRegister
 11413 ;;		_I2C_Write2ByteRegister
 11414 ;;		_I2C_WriteNBytes
 11415 ;;		_I2C_ReadNBytes
 11416 ;;		_I2C_ReadDataBlock
 11417 ;; This function uses a non-reentrant model
 11418 ;;
 11419                           
 11420                           	psect	text76
 11421  004718                     __ptext76:
 11422                           	callstack 0
 11423  004718                     _I2C_SetBuffer:
 11424                           	callstack 24
 11425  004718                     
 11426                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 11427  004718  0100               	movlb	0	; () banked
 11428  00471A  A783               	btfss	(_I2C_Status+35)& (0+255),3,b
 11429  00471C  EF92  F023         	goto	u2971
 11430  004720  EF94  F023         	goto	u2970
 11431  004724                     u2971:
 11432  004724  EF9D  F023         	goto	l236
 11433  004728                     u2970:
 11434  004728                     
 11435                           ; BSR set to: 0
 11436                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 11437  004728  C005  F07D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 11438  00472C  C006  F07E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 11439  004730                     
 11440                           ; BSR set to: 0
 11441                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 11442  004730  C007  F07F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 11443  004734  C008  F080         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 11444  004738                     
 11445                           ; BSR set to: 0
 11446                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 11447  004738  9783               	bcf	(_I2C_Status+35)& (0+255),3,b
 11448  00473A                     l236:
 11449                           
 11450                           ; BSR set to: 0
 11451  00473A  0012               	return		;funcret
 11452  00473C                     __end_of_I2C_SetBuffer:
 11453                           	callstack 0
 11454                           
 11455 ;; *************** function _I2C_MasterStop *****************
 11456 ;; Defined at:
 11457 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;		None
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		None
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;Total ram usage:        0 bytes
 11476 ;; Hardware stack levels used: 1
 11477 ;; Hardware stack levels required when called: 4
 11478 ;; This function calls:
 11479 ;;		Nothing
 11480 ;; This function is called by:
 11481 ;;		_I2C_DO_SEND_STOP
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text77
 11486  00491A                     __ptext77:
 11487                           	callstack 0
 11488  00491A                     _I2C_MasterStop:
 11489                           	callstack 18
 11490  00491A                     
 11491                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 11492  00491A  84C5               	bsf	197,2,c	;volatile
 11493  00491C  0012               	return		;funcret
 11494  00491E                     __end_of_I2C_MasterStop:
 11495                           	callstack 0
 11496                           
 11497 ;; *************** function _I2C_MasterEnableRestart *****************
 11498 ;; Defined at:
 11499 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 11500 ;; Parameters:    Size  Location     Type
 11501 ;;		None
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1    wreg      void 
 11506 ;; Registers used:
 11507 ;;		None
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11517 ;;Total ram usage:        0 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 4
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_I2C_DO_SEND_RESTART_READ
 11524 ;;		_I2C_DO_SEND_RESTART_WRITE
 11525 ;;		_I2C_DO_SEND_RESTART
 11526 ;;		_I2C_DO_RX_EMPTY
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text78
 11531  00491E                     __ptext78:
 11532                           	callstack 0
 11533  00491E                     _I2C_MasterEnableRestart:
 11534                           	callstack 18
 11535  00491E                     
 11536                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 11537  00491E  82C5               	bsf	197,1,c	;volatile
 11538  004920  0012               	return		;funcret
 11539  004922                     __end_of_I2C_MasterEnableRestart:
 11540                           	callstack 0
 11541                           
 11542 ;; *************** function _I2C_MasterStart *****************
 11543 ;; Defined at:
 11544 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 11545 ;; Parameters:    Size  Location     Type
 11546 ;;		None
 11547 ;; Auto vars:     Size  Location     Type
 11548 ;;		None
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  1    wreg      void 
 11551 ;; Registers used:
 11552 ;;		None
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;Total ram usage:        0 bytes
 11563 ;; Hardware stack levels used: 1
 11564 ;; Hardware stack levels required when called: 4
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_I2C_MasterOperation
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text79
 11573  004922                     __ptext79:
 11574                           	callstack 0
 11575  004922                     _I2C_MasterStart:
 11576                           	callstack 22
 11577  004922                     
 11578                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 11579  004922  80C5               	bsf	197,0,c	;volatile
 11580  004924  0012               	return		;funcret
 11581  004926                     __end_of_I2C_MasterStart:
 11582                           	callstack 0
 11583                           
 11584 ;; *************** function _I2C_Close *****************
 11585 ;; Defined at:
 11586 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;		None
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  returnValue     1    4[COMRAM] enum E355
 11591 ;; Return value:  Size  Location     Type
 11592 ;;                  1    wreg      enum E355
 11593 ;; Registers used:
 11594 ;;		wreg, status,2, cstack
 11595 ;; Tracked objects:
 11596 ;;		On entry : 0/0
 11597 ;;		On exit  : 0/0
 11598 ;;		Unchanged: 0/0
 11599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;Total ram usage:        1 bytes
 11605 ;; Hardware stack levels used: 1
 11606 ;; Hardware stack levels required when called: 5
 11607 ;; This function calls:
 11608 ;;		_I2C_MasterClearIrq
 11609 ;;		_I2C_MasterClose
 11610 ;;		_I2C_MasterDisableIrq
 11611 ;; This function is called by:
 11612 ;;		_I2C_Read2ByteRegister
 11613 ;;		_I2C_Write1ByteRegister
 11614 ;;		_I2C_Read1ByteRegister
 11615 ;;		_I2C_Write2ByteRegister
 11616 ;;		_I2C_WriteNBytes
 11617 ;;		_I2C_ReadNBytes
 11618 ;;		_I2C_ReadDataBlock
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           	psect	text80
 11623  004672                     __ptext80:
 11624                           	callstack 0
 11625  004672                     _I2C_Close:
 11626                           	callstack 23
 11627  004672                     
 11628                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 11629  004672  0E01               	movlw	1
 11630  004674  6E05               	movwf	I2C_Close@returnValue^0,c
 11631  004676                     
 11632                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 11633  004676  0100               	movlb	0	; () banked
 11634  004678  B383               	btfsc	(_I2C_Status+35)& (0+255),1,b
 11635  00467A  EF41  F023         	goto	u5311
 11636  00467E  EF43  F023         	goto	u5310
 11637  004682                     u5311:
 11638  004682  EF4D  F023         	goto	l5445
 11639  004686                     u5310:
 11640  004686                     
 11641                           ; BSR set to: 0
 11642                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 11643  004686  9583               	bcf	(_I2C_Status+35)& (0+255),2,b
 11644                           
 11645                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 11646  004688  697C               	setf	(_I2C_Status+28)& (0+255),b
 11647  00468A                     
 11648                           ; BSR set to: 0
 11649                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 11650  00468A  EC97  F024         	call	_I2C_MasterClearIrq	;wreg free
 11651                           
 11652                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 11653  00468E  EC93  F024         	call	_I2C_MasterDisableIrq	;wreg free
 11654                           
 11655                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 11656  004692  EC95  F024         	call	_I2C_MasterClose	;wreg free
 11657  004696                     
 11658                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 11659  004696  C082  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 11660  00469A                     l5445:
 11661                           
 11662                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 11663  00469A  5005               	movf	I2C_Close@returnValue^0,w,c
 11664  00469C  0012               	return		;funcret
 11665  00469E                     __end_of_I2C_Close:
 11666                           	callstack 0
 11667                           
 11668 ;; *************** function _I2C_MasterDisableIrq *****************
 11669 ;; Defined at:
 11670 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		None
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used: 1
 11690 ;; Hardware stack levels required when called: 4
 11691 ;; This function calls:
 11692 ;;		Nothing
 11693 ;; This function is called by:
 11694 ;;		_I2C_Close
 11695 ;;		_I2C_SetTimeOut
 11696 ;; This function uses a non-reentrant model
 11697 ;;
 11698                           
 11699                           	psect	text81
 11700  004926                     __ptext81:
 11701                           	callstack 0
 11702  004926                     _I2C_MasterDisableIrq:
 11703                           	callstack 23
 11704  004926                     
 11705                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 11706  004926  969D               	bcf	157,3,c	;volatile
 11707  004928  0012               	return		;funcret
 11708  00492A                     __end_of_I2C_MasterDisableIrq:
 11709                           	callstack 0
 11710                           
 11711 ;; *************** function _I2C_MasterClose *****************
 11712 ;; Defined at:
 11713 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 11714 ;; Parameters:    Size  Location     Type
 11715 ;;		None
 11716 ;; Auto vars:     Size  Location     Type
 11717 ;;		None
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      void 
 11720 ;; Registers used:
 11721 ;;		None
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;Total ram usage:        0 bytes
 11732 ;; Hardware stack levels used: 1
 11733 ;; Hardware stack levels required when called: 4
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_I2C_Close
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text82
 11742  00492A                     __ptext82:
 11743                           	callstack 0
 11744  00492A                     _I2C_MasterClose:
 11745                           	callstack 23
 11746  00492A                     
 11747                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 11748  00492A  9AC6               	bcf	198,5,c	;volatile
 11749  00492C  0012               	return		;funcret
 11750  00492E                     __end_of_I2C_MasterClose:
 11751                           	callstack 0
 11752                           
 11753 ;; *************** function _I2C_MasterClearIrq *****************
 11754 ;; Defined at:
 11755 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;		None
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      void 
 11762 ;; Registers used:
 11763 ;;		None
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;Total ram usage:        0 bytes
 11774 ;; Hardware stack levels used: 1
 11775 ;; Hardware stack levels required when called: 4
 11776 ;; This function calls:
 11777 ;;		Nothing
 11778 ;; This function is called by:
 11779 ;;		_I2C_Open
 11780 ;;		_I2C_Close
 11781 ;;		_I2C_MasterFsm
 11782 ;; This function uses a non-reentrant model
 11783 ;;
 11784                           
 11785                           	psect	text83
 11786  00492E                     __ptext83:
 11787                           	callstack 0
 11788  00492E                     _I2C_MasterClearIrq:
 11789                           	callstack 23
 11790  00492E                     
 11791                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 11792  00492E  969E               	bcf	158,3,c	;volatile
 11793  004930  0012               	return		;funcret
 11794  004932                     __end_of_I2C_MasterClearIrq:
 11795                           	callstack 0
 11796                           
 11797 ;; *************** function _SYSTEM_Initialize *****************
 11798 ;; Defined at:
 11799 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;		None
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;		None
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, status,2, status,0, cstack
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11817 ;;Total ram usage:        0 bytes
 11818 ;; Hardware stack levels used: 1
 11819 ;; Hardware stack levels required when called: 6
 11820 ;; This function calls:
 11821 ;;		_EUSART_Initialize
 11822 ;;		_I2C_Initialize
 11823 ;;		_INTERRUPT_Initialize
 11824 ;;		_OSCILLATOR_Initialize
 11825 ;;		_PIN_MANAGER_Initialize
 11826 ;; This function is called by:
 11827 ;;		_main
 11828 ;; This function uses a non-reentrant model
 11829 ;;
 11830                           
 11831                           	psect	text84
 11832  0047CE                     __ptext84:
 11833                           	callstack 0
 11834  0047CE                     _SYSTEM_Initialize:
 11835                           	callstack 24
 11836  0047CE                     
 11837                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 11838  0047CE  EC99  F024         	call	_INTERRUPT_Initialize	;wreg free
 11839  0047D2                     
 11840                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
 11841  0047D2  ECFC  F023         	call	_I2C_Initialize	;wreg free
 11842  0047D6                     
 11843                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 11844  0047D6  ECB3  F022         	call	_PIN_MANAGER_Initialize	;wreg free
 11845  0047DA                     
 11846                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 11847  0047DA  EC35  F024         	call	_OSCILLATOR_Initialize	;wreg free
 11848  0047DE                     
 11849                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
 11850  0047DE  EC85  F01F         	call	_EUSART_Initialize	;wreg free
 11851  0047E2  0012               	return		;funcret
 11852  0047E4                     __end_of_SYSTEM_Initialize:
 11853                           	callstack 0
 11854                           
 11855 ;; *************** function _PIN_MANAGER_Initialize *****************
 11856 ;; Defined at:
 11857 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;		None
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;		None
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  1    wreg      void 
 11864 ;; Registers used:
 11865 ;;		wreg, status,2
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11875 ;;Total ram usage:        0 bytes
 11876 ;; Hardware stack levels used: 1
 11877 ;; Hardware stack levels required when called: 4
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_SYSTEM_Initialize
 11882 ;; This function uses a non-reentrant model
 11883 ;;
 11884                           
 11885                           	psect	text85
 11886  004566                     __ptext85:
 11887                           	callstack 0
 11888  004566                     _PIN_MANAGER_Initialize:
 11889                           	callstack 25
 11890  004566                     
 11891                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11892  004566  0E00               	movlw	0
 11893  004568  6E8D               	movwf	141,c	;volatile
 11894                           
 11895                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 11896  00456A  0E00               	movlw	0
 11897  00456C  6E8C               	movwf	140,c	;volatile
 11898                           
 11899                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11900  00456E  0E00               	movlw	0
 11901  004570  6E89               	movwf	137,c	;volatile
 11902                           
 11903                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 11904  004572  0E00               	movlw	0
 11905  004574  6E8A               	movwf	138,c	;volatile
 11906                           
 11907                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 11908  004576  0E00               	movlw	0
 11909  004578  6E8B               	movwf	139,c	;volatile
 11910                           
 11911                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 11912  00457A  0E07               	movlw	7
 11913  00457C  6E96               	movwf	150,c	;volatile
 11914  00457E                     
 11915                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 11916  00457E  6892               	setf	146,c	;volatile
 11917  004580                     
 11918                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 11919  004580  6893               	setf	147,c	;volatile
 11920                           
 11921                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 11922  004582  0EBF               	movlw	191
 11923  004584  6E94               	movwf	148,c	;volatile
 11924  004586                     
 11925                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 11926  004586  6895               	setf	149,c	;volatile
 11927  004588                     
 11928                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
 11929  004588  687E               	setf	126,c	;volatile
 11930                           
 11931                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
 11932  00458A  0E1F               	movlw	31
 11933  00458C  6E7F               	movwf	127,c	;volatile
 11934                           
 11935                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
 11936  00458E  0E00               	movlw	0
 11937  004590  6E7C               	movwf	124,c	;volatile
 11938  004592                     
 11939                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
 11940  004592  8EF1               	bsf	241,7,c	;volatile
 11941  004594  0012               	return		;funcret
 11942  004596                     __end_of_PIN_MANAGER_Initialize:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _OSCILLATOR_Initialize *****************
 11946 ;; Defined at:
 11947 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used: 1
 11967 ;; Hardware stack levels required when called: 4
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_SYSTEM_Initialize
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text86
 11976  00486A                     __ptext86:
 11977                           	callstack 0
 11978  00486A                     _OSCILLATOR_Initialize:
 11979                           	callstack 25
 11980  00486A                     
 11981                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
 11982  00486A  0E60               	movlw	96
 11983  00486C  6ED3               	movwf	211,c	;volatile
 11984                           
 11985                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 11986  00486E  0E00               	movlw	0
 11987  004870  6E9B               	movwf	155,c	;volatile
 11988  004872  0012               	return		;funcret
 11989  004874                     __end_of_OSCILLATOR_Initialize:
 11990                           	callstack 0
 11991                           
 11992 ;; *************** function _INTERRUPT_Initialize *****************
 11993 ;; Defined at:
 11994 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		None
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; Hardware stack levels required when called: 4
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_SYSTEM_Initialize
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text87
 12023  004932                     __ptext87:
 12024                           	callstack 0
 12025  004932                     _INTERRUPT_Initialize:
 12026                           	callstack 25
 12027  004932                     
 12028                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 12029  004932  9ED0               	bcf	208,7,c	;volatile
 12030  004934  0012               	return		;funcret
 12031  004936                     __end_of_INTERRUPT_Initialize:
 12032                           	callstack 0
 12033                           
 12034 ;; *************** function _I2C_Initialize *****************
 12035 ;; Defined at:
 12036 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 12037 ;; Parameters:    Size  Location     Type
 12038 ;;		None
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12054 ;;Total ram usage:        0 bytes
 12055 ;; Hardware stack levels used: 1
 12056 ;; Hardware stack levels required when called: 4
 12057 ;; This function calls:
 12058 ;;		Nothing
 12059 ;; This function is called by:
 12060 ;;		_SYSTEM_Initialize
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text88
 12065  0047F8                     __ptext88:
 12066                           	callstack 0
 12067  0047F8                     _I2C_Initialize:
 12068                           	callstack 25
 12069  0047F8                     
 12070                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 12071  0047F8  0E00               	movlw	0
 12072  0047FA  6EC7               	movwf	199,c	;volatile
 12073                           
 12074                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 12075  0047FC  0E08               	movlw	8
 12076  0047FE  6EC6               	movwf	198,c	;volatile
 12077                           
 12078                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 12079  004800  0E00               	movlw	0
 12080  004802  6EC5               	movwf	197,c	;volatile
 12081                           
 12082                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 12083  004804  0E13               	movlw	19
 12084  004806  6EC8               	movwf	200,c	;volatile
 12085  004808                     
 12086                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 12087  004808  9AC6               	bcf	198,5,c	;volatile
 12088  00480A  0012               	return		;funcret
 12089  00480C                     __end_of_I2C_Initialize:
 12090                           	callstack 0
 12091                           
 12092 ;; *************** function _EUSART_Initialize *****************
 12093 ;; Defined at:
 12094 ;;		line 88 in file "mcc_generated_files/eusart.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;		None
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;		None
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  1    wreg      void 
 12101 ;; Registers used:
 12102 ;;		wreg, status,2, status,0, cstack
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;Total ram usage:        0 bytes
 12113 ;; Hardware stack levels used: 1
 12114 ;; Hardware stack levels required when called: 5
 12115 ;; This function calls:
 12116 ;;		_EUSART_SetErrorHandler
 12117 ;;		_EUSART_SetFramingErrorHandler
 12118 ;;		_EUSART_SetOverrunErrorHandler
 12119 ;;		_EUSART_SetRxInterruptHandler
 12120 ;;		_EUSART_SetTxInterruptHandler
 12121 ;; This function is called by:
 12122 ;;		_SYSTEM_Initialize
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           	psect	text89
 12127  003F0A                     __ptext89:
 12128                           	callstack 0
 12129  003F0A                     _EUSART_Initialize:
 12130                           	callstack 24
 12131  003F0A                     
 12132                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
 12133  003F0A  9A9D               	bcf	157,5,c	;volatile
 12134  003F0C                     
 12135                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 12136  003F0C  0EAA               	movlw	low _EUSART_Receive_ISR
 12137  003F0E  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
 12138  003F10  0E39               	movlw	high _EUSART_Receive_ISR
 12139  003F12  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
 12140  003F14  EC3F  F024         	call	_EUSART_SetRxInterruptHandler	;wreg free
 12141  003F18                     
 12142                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
 12143  003F18  989D               	bcf	157,4,c	;volatile
 12144                           
 12145                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 12146  003F1A  0E06               	movlw	low _EUSART_Transmit_ISR
 12147  003F1C  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
 12148  003F1E  0E44               	movlw	high _EUSART_Transmit_ISR
 12149  003F20  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
 12150  003F22  EC3A  F024         	call	_EUSART_SetTxInterruptHandler	;wreg free
 12151  003F26                     
 12152                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
 12153  003F26  0E08               	movlw	8
 12154  003F28  6EB8               	movwf	184,c	;volatile
 12155  003F2A                     
 12156                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
 12157  003F2A  0E90               	movlw	144
 12158  003F2C  6EAB               	movwf	171,c	;volatile
 12159  003F2E                     
 12160                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
 12161  003F2E  0E24               	movlw	36
 12162  003F30  6EAC               	movwf	172,c	;volatile
 12163  003F32                     
 12164                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
 12165  003F32  0ECF               	movlw	207
 12166  003F34  6EAF               	movwf	175,c	;volatile
 12167  003F36                     
 12168                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
 12169  003F36  0E00               	movlw	0
 12170  003F38  6EB0               	movwf	176,c	;volatile
 12171  003F3A                     
 12172                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 12173  003F3A  0E36               	movlw	low _EUSART_DefaultFramingErrorHandler
 12174  003F3C  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
 12175  003F3E  0E49               	movlw	high _EUSART_DefaultFramingErrorHandler
 12176  003F40  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
 12177  003F42  EC49  F024         	call	_EUSART_SetFramingErrorHandler	;wreg free
 12178  003F46                     
 12179                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 12180  003F46  0EFA               	movlw	low _EUSART_DefaultOverrunErrorHandler
 12181  003F48  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
 12182  003F4A  0E48               	movlw	high _EUSART_DefaultOverrunErrorHandler
 12183  003F4C  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
 12184  003F4E  EC44  F024         	call	_EUSART_SetOverrunErrorHandler	;wreg free
 12185  003F52                     
 12186                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 12187  003F52  0E00               	movlw	low _EUSART_DefaultErrorHandler
 12188  003F54  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
 12189  003F56  0E49               	movlw	high _EUSART_DefaultErrorHandler
 12190  003F58  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
 12191  003F5A  EC4E  F024         	call	_EUSART_SetErrorHandler	;wreg free
 12192                           
 12193                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 12194  003F5E  0E00               	movlw	0
 12195  003F60  0100               	movlb	0	; () banked
 12196  003F62  6FB5               	movwf	_eusartRxLastError& (0+255),b	;volatile
 12197                           
 12198                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 12199  003F64  0E00               	movlw	0
 12200  003F66  6E5A               	movwf	_eusartTxHead^0,c	;volatile
 12201                           
 12202                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 12203  003F68  0E00               	movlw	0
 12204  003F6A  6E59               	movwf	_eusartTxTail^0,c	;volatile
 12205                           
 12206                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 12207  003F6C  0E08               	movlw	8
 12208  003F6E  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 12209                           
 12210                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 12211  003F70  0E00               	movlw	0
 12212  003F72  6E58               	movwf	_eusartRxHead^0,c	;volatile
 12213                           
 12214                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 12215  003F74  0E00               	movlw	0
 12216  003F76  6E57               	movwf	_eusartRxTail^0,c	;volatile
 12217                           
 12218                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 12219  003F78  0E00               	movlw	0
 12220  003F7A  6E56               	movwf	_eusartRxCount^0,c	;volatile
 12221  003F7C                     
 12222                           ; BSR set to: 0
 12223                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
 12224  003F7C  8A9D               	bsf	157,5,c	;volatile
 12225  003F7E                     
 12226                           ; BSR set to: 0
 12227  003F7E  0012               	return		;funcret
 12228  003F80                     __end_of_EUSART_Initialize:
 12229                           	callstack 0
 12230                           
 12231 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 12232 ;; Defined at:
 12233 ;;		line 285 in file "mcc_generated_files/eusart.c"
 12234 ;; Parameters:    Size  Location     Type
 12235 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 12236 ;;		 -> EUSART_Transmit_ISR(1), 
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;		None
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		wreg, status,2, status,0
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;Total ram usage:        2 bytes
 12253 ;; Hardware stack levels used: 1
 12254 ;; Hardware stack levels required when called: 4
 12255 ;; This function calls:
 12256 ;;		Nothing
 12257 ;; This function is called by:
 12258 ;;		_EUSART_Initialize
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text90
 12263  004874                     __ptext90:
 12264                           	callstack 0
 12265  004874                     _EUSART_SetTxInterruptHandler:
 12266                           	callstack 24
 12267  004874                     
 12268                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 12269  004874  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
 12270  004878  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
 12271  00487C  0012               	return		;funcret
 12272  00487E                     __end_of_EUSART_SetTxInterruptHandler:
 12273                           	callstack 0
 12274                           
 12275 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 12276 ;; Defined at:
 12277 ;;		line 289 in file "mcc_generated_files/eusart.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 12280 ;;		 -> EUSART_Receive_ISR(1), 
 12281 ;; Auto vars:     Size  Location     Type
 12282 ;;		None
 12283 ;; Return value:  Size  Location     Type
 12284 ;;                  1    wreg      void 
 12285 ;; Registers used:
 12286 ;;		wreg, status,2, status,0
 12287 ;; Tracked objects:
 12288 ;;		On entry : 0/0
 12289 ;;		On exit  : 0/0
 12290 ;;		Unchanged: 0/0
 12291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12296 ;;Total ram usage:        2 bytes
 12297 ;; Hardware stack levels used: 1
 12298 ;; Hardware stack levels required when called: 4
 12299 ;; This function calls:
 12300 ;;		Nothing
 12301 ;; This function is called by:
 12302 ;;		_EUSART_Initialize
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           	psect	text91
 12307  00487E                     __ptext91:
 12308                           	callstack 0
 12309  00487E                     _EUSART_SetRxInterruptHandler:
 12310                           	callstack 24
 12311  00487E                     
 12312                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 12313  00487E  C005  F0FA         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
 12314  004882  C006  F0FB         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
 12315  004886  0012               	return		;funcret
 12316  004888                     __end_of_EUSART_SetRxInterruptHandler:
 12317                           	callstack 0
 12318                           
 12319 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 12320 ;; Defined at:
 12321 ;;		line 277 in file "mcc_generated_files/eusart.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 12324 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		wreg, status,2, status,0
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;Total ram usage:        2 bytes
 12341 ;; Hardware stack levels used: 1
 12342 ;; Hardware stack levels required when called: 4
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_EUSART_Initialize
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text92
 12351  004888                     __ptext92:
 12352                           	callstack 0
 12353  004888                     _EUSART_SetOverrunErrorHandler:
 12354                           	callstack 24
 12355  004888                     
 12356                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 12357  004888  C005  F152         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
 12358  00488C  C006  F153         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
 12359  004890  0012               	return		;funcret
 12360  004892                     __end_of_EUSART_SetOverrunErrorHandler:
 12361                           	callstack 0
 12362                           
 12363 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 12364 ;; Defined at:
 12365 ;;		line 273 in file "mcc_generated_files/eusart.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 12368 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;		None
 12371 ;; Return value:  Size  Location     Type
 12372 ;;                  1    wreg      void 
 12373 ;; Registers used:
 12374 ;;		wreg, status,2, status,0
 12375 ;; Tracked objects:
 12376 ;;		On entry : 0/0
 12377 ;;		On exit  : 0/0
 12378 ;;		Unchanged: 0/0
 12379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;Total ram usage:        2 bytes
 12385 ;; Hardware stack levels used: 1
 12386 ;; Hardware stack levels required when called: 4
 12387 ;; This function calls:
 12388 ;;		Nothing
 12389 ;; This function is called by:
 12390 ;;		_EUSART_Initialize
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394                           	psect	text93
 12395  004892                     __ptext93:
 12396                           	callstack 0
 12397  004892                     _EUSART_SetFramingErrorHandler:
 12398                           	callstack 24
 12399  004892                     
 12400                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 12401  004892  C005  F154         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
 12402  004896  C006  F155         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
 12403  00489A  0012               	return		;funcret
 12404  00489C                     __end_of_EUSART_SetFramingErrorHandler:
 12405                           	callstack 0
 12406                           
 12407 ;; *************** function _EUSART_SetErrorHandler *****************
 12408 ;; Defined at:
 12409 ;;		line 281 in file "mcc_generated_files/eusart.c"
 12410 ;; Parameters:    Size  Location     Type
 12411 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 12412 ;;		 -> EUSART_DefaultErrorHandler(1), 
 12413 ;; Auto vars:     Size  Location     Type
 12414 ;;		None
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  1    wreg      void 
 12417 ;; Registers used:
 12418 ;;		wreg, status,2, status,0
 12419 ;; Tracked objects:
 12420 ;;		On entry : 0/0
 12421 ;;		On exit  : 0/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12428 ;;Total ram usage:        2 bytes
 12429 ;; Hardware stack levels used: 1
 12430 ;; Hardware stack levels required when called: 4
 12431 ;; This function calls:
 12432 ;;		Nothing
 12433 ;; This function is called by:
 12434 ;;		_EUSART_Initialize
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text94
 12439  00489C                     __ptext94:
 12440                           	callstack 0
 12441  00489C                     _EUSART_SetErrorHandler:
 12442                           	callstack 24
 12443  00489C                     
 12444                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 12445  00489C  C005  F150         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
 12446  0048A0  C006  F151         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
 12447  0048A4  0012               	return		;funcret
 12448  0048A6                     __end_of_EUSART_SetErrorHandler:
 12449                           	callstack 0
 12450                           
 12451 ;; *************** function _INTERRUPT_InterruptManager *****************
 12452 ;; Defined at:
 12453 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 12454 ;; Parameters:    Size  Location     Type
 12455 ;;		None
 12456 ;; Auto vars:     Size  Location     Type
 12457 ;;		None
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  1    wreg      void 
 12460 ;; Registers used:
 12461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12470 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12471 ;;Total ram usage:        4 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; Hardware stack levels required when called: 3
 12474 ;; This function calls:
 12475 ;;		Absolute function
 12476 ;;		_EUSART_Receive_ISR
 12477 ;;		_EUSART_Transmit_ISR
 12478 ;; This function is called by:
 12479 ;;		Interrupt level 2
 12480 ;; This function uses a non-reentrant model
 12481 ;;
 12482                           
 12483                           	psect	intcode
 12484  000008                     __pintcode:
 12485                           	callstack 0
 12486  000008                     _INTERRUPT_InterruptManager:
 12487                           	callstack 17
 12488                           
 12489                           ;incstack = 0
 12490  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12491  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 12492  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12493  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 12494  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 12495  00001A                     
 12496                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 12497  00001A  ACF2               	btfss	242,6,c	;volatile
 12498  00001C  EF12  F000         	goto	i2u584_41
 12499  000020  EF14  F000         	goto	i2u584_40
 12500  000024                     i2u584_41:
 12501  000024  EF4E  F000         	goto	i2l671
 12502  000028                     i2u584_40:
 12503  000028                     
 12504                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 12505  000028  A89D               	btfss	157,4,c	;volatile
 12506  00002A  EF19  F000         	goto	i2u585_41
 12507  00002E  EF1B  F000         	goto	i2u585_40
 12508  000032                     i2u585_41:
 12509  000032  EF31  F000         	goto	i2l666
 12510  000036                     i2u585_40:
 12511  000036  A89E               	btfss	158,4,c	;volatile
 12512  000038  EF20  F000         	goto	i2u586_41
 12513  00003C  EF22  F000         	goto	i2u586_40
 12514  000040                     i2u586_41:
 12515  000040  EF31  F000         	goto	i2l666
 12516  000044                     i2u586_40:
 12517  000044                     
 12518                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 12519  000044  D802               	call	i2u587_48
 12520  000046  EF2F  F000         	goto	i2u587_49
 12521  00004A                     i2u587_48:
 12522  00004A  0005               	push	
 12523  00004C  6EFA               	movwf	pclath,c
 12524  00004E  0100               	movlb	0	; () banked
 12525  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 12526  000052  6EFD               	movwf	tosl,c
 12527  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 12528  000056  6EFE               	movwf	tosh,c
 12529  000058  6AFF               	clrf	tosu,c
 12530  00005A  50FA               	movf	pclath,w,c
 12531  00005C  0012               	return		;indir
 12532  00005E                     i2u587_49:
 12533                           
 12534                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 12535  00005E  EF4E  F000         	goto	i2l671
 12536  000062                     i2l666:
 12537  000062  AA9D               	btfss	157,5,c	;volatile
 12538  000064  EF36  F000         	goto	i2u588_41
 12539  000068  EF38  F000         	goto	i2u588_40
 12540  00006C                     i2u588_41:
 12541  00006C  EF4E  F000         	goto	i2l667
 12542  000070                     i2u588_40:
 12543  000070  AA9E               	btfss	158,5,c	;volatile
 12544  000072  EF3D  F000         	goto	i2u589_41
 12545  000076  EF3F  F000         	goto	i2u589_40
 12546  00007A                     i2u589_41:
 12547  00007A  EF4E  F000         	goto	i2l667
 12548  00007E                     i2u589_40:
 12549  00007E                     
 12550                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 12551  00007E  D802               	call	i2u590_48
 12552  000080  EF4C  F000         	goto	i2u590_49
 12553  000084                     i2u590_48:
 12554  000084  0005               	push	
 12555  000086  6EFA               	movwf	pclath,c
 12556  000088  0100               	movlb	0	; () banked
 12557  00008A  51FA               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 12558  00008C  6EFD               	movwf	tosl,c
 12559  00008E  51FB               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 12560  000090  6EFE               	movwf	tosh,c
 12561  000092  6AFF               	clrf	tosu,c
 12562  000094  50FA               	movf	pclath,w,c
 12563  000096  0012               	return		;indir
 12564  000098                     i2u590_49:
 12565                           
 12566                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 12567  000098  EF4E  F000         	goto	i2l671
 12568  00009C                     i2l667:
 12569  00009C                     i2l671:
 12570  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 12571  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 12572  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12573  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 12574  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12575  0000AE  0011               	retfie		f
 12576  0000B0                     __end_of_INTERRUPT_InterruptManager:
 12577                           	callstack 0
 12578                           
 12579 ;; *************** function _EUSART_Transmit_ISR *****************
 12580 ;; Defined at:
 12581 ;;		line 206 in file "mcc_generated_files/eusart.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;		None
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/0
 12592 ;;		On exit  : 0/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;Total ram usage:        0 bytes
 12600 ;; Hardware stack levels used: 1
 12601 ;; This function calls:
 12602 ;;		Nothing
 12603 ;; This function is called by:
 12604 ;;		_EUSART_Initialize
 12605 ;;		_INTERRUPT_InterruptManager
 12606 ;; This function uses a non-reentrant model
 12607 ;;
 12608                           
 12609                           	psect	text96
 12610  004406                     __ptext96:
 12611                           	callstack 0
 12612  004406                     _EUSART_Transmit_ISR:
 12613                           	callstack 19
 12614  004406                     
 12615                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 12616  004406  0E08               	movlw	8
 12617  004408  0100               	movlb	0	; () banked
 12618  00440A  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 12619  00440C  EF0A  F022         	goto	i2u564_41
 12620  004410  EF0C  F022         	goto	i2u564_40
 12621  004414                     i2u564_41:
 12622  004414  EF22  F022         	goto	i2l607
 12623  004418                     i2u564_40:
 12624  004418                     
 12625                           ; BSR set to: 0
 12626                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 12627  004418  0E94               	movlw	low _eusartTxBuffer
 12628  00441A  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 12629  00441C  6ED9               	movwf	fsr2l,c
 12630  00441E  6ADA               	clrf	fsr2h,c
 12631  004420  0E00               	movlw	high _eusartTxBuffer
 12632  004422  22DA               	addwfc	fsr2h,f,c
 12633  004424  50DF               	movf	indf2,w,c
 12634  004426  6EAD               	movwf	173,c	;volatile
 12635  004428                     
 12636                           ; BSR set to: 0
 12637  004428  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 12638  00442A                     
 12639                           ; BSR set to: 0
 12640                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 12641  00442A  0E07               	movlw	7
 12642  00442C  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 12643  00442E  EF1B  F022         	goto	i2u565_41
 12644  004432  EF1D  F022         	goto	i2u565_40
 12645  004436                     i2u565_41:
 12646  004436  EF1F  F022         	goto	i2l5735
 12647  00443A                     i2u565_40:
 12648  00443A                     
 12649                           ; BSR set to: 0
 12650                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 12651  00443A  0E00               	movlw	0
 12652  00443C  6E59               	movwf	_eusartTxTail^0,c	;volatile
 12653  00443E                     i2l5735:
 12654                           
 12655                           ; BSR set to: 0
 12656                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 12657  00443E  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 12658                           
 12659                           ;mcc_generated_files/eusart.c: 218:     }
 12660  004440  EF23  F022         	goto	i2l610
 12661  004444                     i2l607:
 12662                           
 12663                           ; BSR set to: 0
 12664                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 12665  004444  989D               	bcf	157,4,c	;volatile
 12666  004446                     i2l610:
 12667                           
 12668                           ; BSR set to: 0
 12669  004446  0012               	return		;funcret
 12670  004448                     __end_of_EUSART_Transmit_ISR:
 12671                           	callstack 0
 12672                           
 12673 ;; *************** function _EUSART_Receive_ISR *****************
 12674 ;; Defined at:
 12675 ;;		line 225 in file "mcc_generated_files/eusart.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;		None
 12678 ;; Auto vars:     Size  Location     Type
 12679 ;;		None
 12680 ;; Return value:  Size  Location     Type
 12681 ;;                  1    wreg      void 
 12682 ;; Registers used:
 12683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 12684 ;; Tracked objects:
 12685 ;;		On entry : 0/0
 12686 ;;		On exit  : 0/0
 12687 ;;		Unchanged: 0/0
 12688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12693 ;;Total ram usage:        0 bytes
 12694 ;; Hardware stack levels used: 1
 12695 ;; Hardware stack levels required when called: 2
 12696 ;; This function calls:
 12697 ;;		Absolute function
 12698 ;;		_EUSART_DefaultErrorHandler
 12699 ;;		_EUSART_DefaultFramingErrorHandler
 12700 ;;		_EUSART_DefaultOverrunErrorHandler
 12701 ;;		_EUSART_RxDataHandler
 12702 ;; This function is called by:
 12703 ;;		_EUSART_Initialize
 12704 ;;		_INTERRUPT_InterruptManager
 12705 ;; This function uses a non-reentrant model
 12706 ;;
 12707                           
 12708                           	psect	text97
 12709  0039AA                     __ptext97:
 12710                           	callstack 0
 12711  0039AA                     _EUSART_Receive_ISR:
 12712                           	callstack 17
 12713  0039AA                     
 12714                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 12715  0039AA  0E84               	movlw	low _eusartRxStatusBuffer
 12716  0039AC  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 12717  0039AE  6ED9               	movwf	fsr2l,c
 12718  0039B0  6ADA               	clrf	fsr2h,c
 12719  0039B2  0E00               	movlw	high _eusartRxStatusBuffer
 12720  0039B4  22DA               	addwfc	fsr2h,f,c
 12721  0039B6  0E00               	movlw	0
 12722  0039B8  6EDF               	movwf	indf2,c
 12723  0039BA                     
 12724                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 12725  0039BA  A4AB               	btfss	171,2,c	;volatile
 12726  0039BC  EFE2  F01C         	goto	i2u566_41
 12727  0039C0  EFE4  F01C         	goto	i2u566_40
 12728  0039C4                     i2u566_41:
 12729  0039C4  EFF9  F01C         	goto	i2l5745
 12730  0039C8                     i2u566_40:
 12731  0039C8                     
 12732                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 12733  0039C8  0E84               	movlw	low _eusartRxStatusBuffer
 12734  0039CA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 12735  0039CC  6ED9               	movwf	fsr2l,c
 12736  0039CE  6ADA               	clrf	fsr2h,c
 12737  0039D0  0E00               	movlw	high _eusartRxStatusBuffer
 12738  0039D2  22DA               	addwfc	fsr2h,f,c
 12739  0039D4  0100               	movlb	0	; () banked
 12740  0039D6  82DF               	bsf	indf2,1,c
 12741  0039D8                     
 12742                           ; BSR set to: 0
 12743                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 12744  0039D8  D802               	call	i2u567_48
 12745  0039DA  EFF9  F01C         	goto	i2u567_49
 12746  0039DE                     i2u567_48:
 12747  0039DE  0005               	push	
 12748  0039E0  6EFA               	movwf	pclath,c
 12749  0039E2  0101               	movlb	1	; () banked
 12750  0039E4  5154               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 12751  0039E6  6EFD               	movwf	tosl,c
 12752  0039E8  5155               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 12753  0039EA  6EFE               	movwf	tosh,c
 12754  0039EC  6AFF               	clrf	tosu,c
 12755  0039EE  50FA               	movf	pclath,w,c
 12756  0039F0  0012               	return		;indir
 12757  0039F2                     i2u567_49:
 12758  0039F2                     i2l5745:
 12759                           
 12760                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 12761  0039F2  A2AB               	btfss	171,1,c	;volatile
 12762  0039F4  EFFE  F01C         	goto	i2u568_41
 12763  0039F8  EF00  F01D         	goto	i2u568_40
 12764  0039FC                     i2u568_41:
 12765  0039FC  EF15  F01D         	goto	i2l5751
 12766  003A00                     i2u568_40:
 12767  003A00                     
 12768                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 12769  003A00  0E84               	movlw	low _eusartRxStatusBuffer
 12770  003A02  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 12771  003A04  6ED9               	movwf	fsr2l,c
 12772  003A06  6ADA               	clrf	fsr2h,c
 12773  003A08  0E00               	movlw	high _eusartRxStatusBuffer
 12774  003A0A  22DA               	addwfc	fsr2h,f,c
 12775  003A0C  0100               	movlb	0	; () banked
 12776  003A0E  84DF               	bsf	indf2,2,c
 12777  003A10                     
 12778                           ; BSR set to: 0
 12779                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 12780  003A10  D802               	call	i2u569_48
 12781  003A12  EF15  F01D         	goto	i2u569_49
 12782  003A16                     i2u569_48:
 12783  003A16  0005               	push	
 12784  003A18  6EFA               	movwf	pclath,c
 12785  003A1A  0101               	movlb	1	; () banked
 12786  003A1C  5152               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 12787  003A1E  6EFD               	movwf	tosl,c
 12788  003A20  5153               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 12789  003A22  6EFE               	movwf	tosh,c
 12790  003A24  6AFF               	clrf	tosu,c
 12791  003A26  50FA               	movf	pclath,w,c
 12792  003A28  0012               	return		;indir
 12793  003A2A                     i2u569_49:
 12794  003A2A                     i2l5751:
 12795                           
 12796                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 12797  003A2A  0E84               	movlw	low _eusartRxStatusBuffer
 12798  003A2C  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 12799  003A2E  6ED9               	movwf	fsr2l,c
 12800  003A30  6ADA               	clrf	fsr2h,c
 12801  003A32  0E00               	movlw	high _eusartRxStatusBuffer
 12802  003A34  22DA               	addwfc	fsr2h,f,c
 12803  003A36  50DF               	movf	indf2,w,c
 12804  003A38  B4D8               	btfsc	status,2,c
 12805  003A3A  EF21  F01D         	goto	i2u570_41
 12806  003A3E  EF23  F01D         	goto	i2u570_40
 12807  003A42                     i2u570_41:
 12808  003A42  EF32  F01D         	goto	i2l5755
 12809  003A46                     i2u570_40:
 12810  003A46                     
 12811                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 12812  003A46  D802               	call	i2u571_48
 12813  003A48  EF30  F01D         	goto	i2u571_49
 12814  003A4C                     i2u571_48:
 12815  003A4C  0005               	push	
 12816  003A4E  6EFA               	movwf	pclath,c
 12817  003A50  0101               	movlb	1	; () banked
 12818  003A52  5150               	movf	_EUSART_ErrorHandler& (0+255),w,b
 12819  003A54  6EFD               	movwf	tosl,c
 12820  003A56  5151               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 12821  003A58  6EFE               	movwf	tosh,c
 12822  003A5A  6AFF               	clrf	tosu,c
 12823  003A5C  50FA               	movf	pclath,w,c
 12824  003A5E  0012               	return		;indir
 12825  003A60                     i2u571_49:
 12826                           
 12827                           ;mcc_generated_files/eusart.c: 242:     } else {
 12828  003A60  EF34  F01D         	goto	i2l617
 12829  003A64                     i2l5755:
 12830                           
 12831                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 12832  003A64  EC64  F023         	call	_EUSART_RxDataHandler	;wreg free
 12833  003A68                     i2l617:
 12834  003A68  0012               	return		;funcret
 12835  003A6A                     __end_of_EUSART_Receive_ISR:
 12836                           	callstack 0
 12837                           
 12838 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 12839 ;; Defined at:
 12840 ;;		line 261 in file "mcc_generated_files/eusart.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;		None
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      void 
 12847 ;; Registers used:
 12848 ;;		None
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12858 ;;Total ram usage:        0 bytes
 12859 ;; Hardware stack levels used: 1
 12860 ;; This function calls:
 12861 ;;		Nothing
 12862 ;; This function is called by:
 12863 ;;		_EUSART_Initialize
 12864 ;;		_EUSART_Receive_ISR
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868                           	psect	text98
 12869  0048FA                     __ptext98:
 12870                           	callstack 0
 12871  0048FA                     _EUSART_DefaultOverrunErrorHandler:
 12872                           	callstack 18
 12873  0048FA                     
 12874                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 12875  0048FA  98AB               	bcf	171,4,c	;volatile
 12876                           
 12877                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 12878  0048FC  88AB               	bsf	171,4,c	;volatile
 12879  0048FE  0012               	return		;funcret
 12880  004900                     __end_of_EUSART_DefaultOverrunErrorHandler:
 12881                           	callstack 0
 12882                           
 12883 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 12884 ;; Defined at:
 12885 ;;		line 259 in file "mcc_generated_files/eusart.c"
 12886 ;; Parameters:    Size  Location     Type
 12887 ;;		None
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;		None
 12890 ;; Return value:  Size  Location     Type
 12891 ;;                  1    wreg      void 
 12892 ;; Registers used:
 12893 ;;		None
 12894 ;; Tracked objects:
 12895 ;;		On entry : 0/0
 12896 ;;		On exit  : 0/0
 12897 ;;		Unchanged: 0/0
 12898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;Total ram usage:        0 bytes
 12904 ;; Hardware stack levels used: 1
 12905 ;; This function calls:
 12906 ;;		Nothing
 12907 ;; This function is called by:
 12908 ;;		_EUSART_Initialize
 12909 ;;		_EUSART_Receive_ISR
 12910 ;; This function uses a non-reentrant model
 12911 ;;
 12912                           
 12913                           	psect	text99
 12914  004936                     __ptext99:
 12915                           	callstack 0
 12916  004936                     _EUSART_DefaultFramingErrorHandler:
 12917                           	callstack 18
 12918  004936  0012               	return		;funcret
 12919  004938                     __end_of_EUSART_DefaultFramingErrorHandler:
 12920                           	callstack 0
 12921                           
 12922 ;; *************** function _EUSART_DefaultErrorHandler *****************
 12923 ;; Defined at:
 12924 ;;		line 269 in file "mcc_generated_files/eusart.c"
 12925 ;; Parameters:    Size  Location     Type
 12926 ;;		None
 12927 ;; Auto vars:     Size  Location     Type
 12928 ;;		None
 12929 ;; Return value:  Size  Location     Type
 12930 ;;                  1    wreg      void 
 12931 ;; Registers used:
 12932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12933 ;; Tracked objects:
 12934 ;;		On entry : 0/0
 12935 ;;		On exit  : 0/0
 12936 ;;		Unchanged: 0/0
 12937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;Total ram usage:        0 bytes
 12943 ;; Hardware stack levels used: 1
 12944 ;; Hardware stack levels required when called: 1
 12945 ;; This function calls:
 12946 ;;		_EUSART_RxDataHandler
 12947 ;; This function is called by:
 12948 ;;		_EUSART_Initialize
 12949 ;;		_EUSART_Receive_ISR
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text100
 12954  004900                     __ptext100:
 12955                           	callstack 0
 12956  004900                     _EUSART_DefaultErrorHandler:
 12957                           	callstack 17
 12958  004900                     
 12959                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 12960  004900  EC64  F023         	call	_EUSART_RxDataHandler	;wreg free
 12961  004904  0012               	return		;funcret
 12962  004906                     __end_of_EUSART_DefaultErrorHandler:
 12963                           	callstack 0
 12964                           
 12965 ;; *************** function _EUSART_RxDataHandler *****************
 12966 ;; Defined at:
 12967 ;;		line 249 in file "mcc_generated_files/eusart.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;		None
 12970 ;; Auto vars:     Size  Location     Type
 12971 ;;		None
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  1    wreg      void 
 12974 ;; Registers used:
 12975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12985 ;;Total ram usage:        0 bytes
 12986 ;; Hardware stack levels used: 1
 12987 ;; This function calls:
 12988 ;;		Nothing
 12989 ;; This function is called by:
 12990 ;;		_EUSART_Receive_ISR
 12991 ;;		_EUSART_DefaultErrorHandler
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           	psect	text101
 12996  0046C8                     __ptext101:
 12997                           	callstack 0
 12998  0046C8                     _EUSART_RxDataHandler:
 12999                           	callstack 18
 13000  0046C8                     
 13001                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 13002  0046C8  0E8C               	movlw	low _eusartRxBuffer
 13003  0046CA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13004  0046CC  6ED9               	movwf	fsr2l,c
 13005  0046CE  6ADA               	clrf	fsr2h,c
 13006  0046D0  0E00               	movlw	high _eusartRxBuffer
 13007  0046D2  22DA               	addwfc	fsr2h,f,c
 13008  0046D4  CFAE FFDF          	movff	4014,indf2	;volatile
 13009  0046D8  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 13010  0046DA                     
 13011                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 13012  0046DA  0E07               	movlw	7
 13013  0046DC  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 13014  0046DE  EF73  F023         	goto	i2u532_41
 13015  0046E2  EF75  F023         	goto	i2u532_40
 13016  0046E6                     i2u532_41:
 13017  0046E6  EF77  F023         	goto	i2l5467
 13018  0046EA                     i2u532_40:
 13019  0046EA                     
 13020                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 13021  0046EA  0E00               	movlw	0
 13022  0046EC  6E58               	movwf	_eusartRxHead^0,c	;volatile
 13023  0046EE                     i2l5467:
 13024                           
 13025                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 13026  0046EE  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 13027  0046F0  0012               	return		;funcret
 13028  0046F2                     __end_of_EUSART_RxDataHandler:
 13029                           	callstack 0
 13030                           
 13031                           	psect	text102
 13032  000000                     __ptext102:
 13033                           	callstack 0
 13034  000000                     
 13035                           	psect	rparam
 13036  0000                     
 13037                           	psect	temp
 13038  00005B                     btemp:
 13039                           	callstack 0
 13040  00005B                     	ds	1
 13041  0000                     int$flags	set	btemp
 13042  0000                     wtemp8	set	btemp+1
 13043  0000                     ttemp5	set	btemp+1
 13044  0000                     ttemp6	set	btemp+4
 13045  0000                     ttemp7	set	btemp+8
 13046                           
 13047                           	psect	idloc
 13048                           
 13049                           ;Config register IDLOC0 @ 0x200000
 13050                           ;	unspecified, using default values
 13051  200000                     	org	2097152
 13052  200000  FF                 	db	255
 13053                           
 13054                           ;Config register IDLOC1 @ 0x200001
 13055                           ;	unspecified, using default values
 13056  200001                     	org	2097153
 13057  200001  FF                 	db	255
 13058                           
 13059                           ;Config register IDLOC2 @ 0x200002
 13060                           ;	unspecified, using default values
 13061  200002                     	org	2097154
 13062  200002  FF                 	db	255
 13063                           
 13064                           ;Config register IDLOC3 @ 0x200003
 13065                           ;	unspecified, using default values
 13066  200003                     	org	2097155
 13067  200003  FF                 	db	255
 13068                           
 13069                           ;Config register IDLOC4 @ 0x200004
 13070                           ;	unspecified, using default values
 13071  200004                     	org	2097156
 13072  200004  FF                 	db	255
 13073                           
 13074                           ;Config register IDLOC5 @ 0x200005
 13075                           ;	unspecified, using default values
 13076  200005                     	org	2097157
 13077  200005  FF                 	db	255
 13078                           
 13079                           ;Config register IDLOC6 @ 0x200006
 13080                           ;	unspecified, using default values
 13081  200006                     	org	2097158
 13082  200006  FF                 	db	255
 13083                           
 13084                           ;Config register IDLOC7 @ 0x200007
 13085                           ;	unspecified, using default values
 13086  200007                     	org	2097159
 13087  200007  FF                 	db	255
 13088                           
 13089                           	psect	config
 13090                           
 13091                           ; Padding undefined space
 13092  300000                     	org	3145728
 13093  300000  FF                 	db	255
 13094                           
 13095                           ;Config register CONFIG1H @ 0x300001
 13096                           ;	Oscillator Selection bits
 13097                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 13098                           ;	Fail-Safe Clock Monitor Enable bit
 13099                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13100                           ;	Internal/External Oscillator Switchover bit
 13101                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13102  300001                     	org	3145729
 13103  300001  08                 	db	8
 13104                           
 13105                           ;Config register CONFIG2L @ 0x300002
 13106                           ;	Power-up Timer Enable bit
 13107                           ;	PWRT = OFF, PWRT disabled
 13108                           ;	Brown-out Reset Enable bits
 13109                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13110                           ;	Brown Out Reset Voltage bits
 13111                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13112  300002                     	org	3145730
 13113  300002  1F                 	db	31
 13114                           
 13115                           ;Config register CONFIG2H @ 0x300003
 13116                           ;	Watchdog Timer Enable bit
 13117                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13118                           ;	Watchdog Timer Postscale Select bits
 13119                           ;	WDTPS = 32768, 1:32768
 13120  300003                     	org	3145731
 13121  300003  1E                 	db	30
 13122                           
 13123                           ; Padding undefined space
 13124  300004                     	org	3145732
 13125  300004  FF                 	db	255
 13126                           
 13127                           ;Config register CONFIG3H @ 0x300005
 13128                           ;	CCP2 MUX bit
 13129                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13130                           ;	PORTB A/D Enable bit
 13131                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13132                           ;	Low-Power Timer1 Oscillator Enable bit
 13133                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13134                           ;	HFINTOSC Fast Start-up
 13135                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 13136                           ;	MCLR Pin Enable bit
 13137                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 13138  300005                     	org	3145733
 13139  300005  0B                 	db	11
 13140                           
 13141                           ;Config register CONFIG4L @ 0x300006
 13142                           ;	Stack Full/Underflow Reset Enable bit
 13143                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13144                           ;	Single-Supply ICSP Enable bit
 13145                           ;	LVP = OFF, Single-Supply ICSP disabled
 13146                           ;	Extended Instruction Set Enable bit
 13147                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13148                           ;	Background Debugger Enable bit
 13149                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13150  300006                     	org	3145734
 13151  300006  81                 	db	129
 13152                           
 13153                           ; Padding undefined space
 13154  300007                     	org	3145735
 13155  300007  FF                 	db	255
 13156                           
 13157                           ;Config register CONFIG5L @ 0x300008
 13158                           ;	Code Protection Block 0
 13159                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13160                           ;	Code Protection Block 1
 13161                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13162                           ;	Code Protection Block 2
 13163                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13164                           ;	Code Protection Block 3
 13165                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13166  300008                     	org	3145736
 13167  300008  0F                 	db	15
 13168                           
 13169                           ;Config register CONFIG5H @ 0x300009
 13170                           ;	Boot Block Code Protection bit
 13171                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13172                           ;	Data EEPROM Code Protection bit
 13173                           ;	CPD = OFF, Data EEPROM not code-protected
 13174  300009                     	org	3145737
 13175  300009  C0                 	db	192
 13176                           
 13177                           ;Config register CONFIG6L @ 0x30000A
 13178                           ;	Write Protection Block 0
 13179                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13180                           ;	Write Protection Block 1
 13181                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13182                           ;	Write Protection Block 2
 13183                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13184                           ;	Write Protection Block 3
 13185                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13186  30000A                     	org	3145738
 13187  30000A  0F                 	db	15
 13188                           
 13189                           ;Config register CONFIG6H @ 0x30000B
 13190                           ;	Configuration Register Write Protection bit
 13191                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13192                           ;	Boot Block Write Protection bit
 13193                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13194                           ;	Data EEPROM Write Protection bit
 13195                           ;	WRTD = OFF, Data EEPROM not write-protected
 13196  30000B                     	org	3145739
 13197  30000B  E0                 	db	224
 13198                           
 13199                           ;Config register CONFIG7L @ 0x30000C
 13200                           ;	Table Read Protection Block 0
 13201                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13202                           ;	Table Read Protection Block 1
 13203                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13204                           ;	Table Read Protection Block 2
 13205                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13206                           ;	Table Read Protection Block 3
 13207                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13208  30000C                     	org	3145740
 13209  30000C  0F                 	db	15
 13210                           
 13211                           ;Config register CONFIG7H @ 0x30000D
 13212                           ;	Boot Block Table Read Protection bit
 13213                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13214  30000D                     	org	3145741
 13215  30000D  40                 	db	64
 13216                           tosu	equ	0xFFF
 13217                           tosh	equ	0xFFE
 13218                           tosl	equ	0xFFD
 13219                           stkptr	equ	0xFFC
 13220                           pclatu	equ	0xFFB
 13221                           pclath	equ	0xFFA
 13222                           pcl	equ	0xFF9
 13223                           tblptru	equ	0xFF8
 13224                           tblptrh	equ	0xFF7
 13225                           tblptrl	equ	0xFF6
 13226                           tablat	equ	0xFF5
 13227                           prodh	equ	0xFF4
 13228                           prodl	equ	0xFF3
 13229                           indf0	equ	0xFEF
 13230                           postinc0	equ	0xFEE
 13231                           postdec0	equ	0xFED
 13232                           preinc0	equ	0xFEC
 13233                           plusw0	equ	0xFEB
 13234                           fsr0h	equ	0xFEA
 13235                           fsr0l	equ	0xFE9
 13236                           wreg	equ	0xFE8
 13237                           indf1	equ	0xFE7
 13238                           postinc1	equ	0xFE6
 13239                           postdec1	equ	0xFE5
 13240                           preinc1	equ	0xFE4
 13241                           plusw1	equ	0xFE3
 13242                           fsr1h	equ	0xFE2
 13243                           fsr1l	equ	0xFE1
 13244                           bsr	equ	0xFE0
 13245                           indf2	equ	0xFDF
 13246                           postinc2	equ	0xFDE
 13247                           postdec2	equ	0xFDD
 13248                           preinc2	equ	0xFDC
 13249                           plusw2	equ	0xFDB
 13250                           fsr2h	equ	0xFDA
 13251                           fsr2l	equ	0xFD9
 13252                           status	equ	0xFD8

Data Sizes:
    Strings     43
    Constant    32
    Data        0
    BSS         171
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     68     159
    BANK1           256      4      90
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2518$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2524$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2530$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2536$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2535	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2530	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2529	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2524	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2523	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2518	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2517	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1976_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), 
		 -> I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _VEML6030_Init->_I2C_Write1ByteRegister
    _VEML6030_GetValue->_I2C_Read2ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  230102
                                              2 BANK1      2     2      0
                  _SYSTEM_Initialize
                  _VEML6030_GetValue
                      _VEML6030_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   38935
                                             62 BANK0      6     0      6
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38746
                                             83 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   38219
                                             61 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29540
                                             49 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3385
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _VEML6030_Init                                        3     3      0   95132
                                             24 COMRAM     1     1      0
             _I2C_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Write1ByteRegister                               3     1      2   95132
                                             21 COMRAM     3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _VEML6030_GetValue                                   10     6      4   95545
                                             29 COMRAM    10     6      4
              _I2C_Read2ByteRegister
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Read2ByteRegister                                8     6      2   95101
                                             21 COMRAM     8     6      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _VEML6030_GetValue
     _I2C_Read2ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     ___xxtofl
   _VEML6030_Init
     _I2C_Write1ByteRegister
       _I2C_Close
       _I2C_MasterWrite
       _I2C_Open
       _I2C_SetAddressNackCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      5A       7       35.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     153      32        0.0%
DATA                 0      0     153       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 15 15:23:52 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 001D                                   ___fldiv@bexp 001C  
                                 ___fldiv@sign 0015                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l42 3E12  
                                           l51 405C                                             l90 4644  
                                           l93 4618                                             l96 45EC  
                                           l99 4670                                   ___awdiv@sign 000A  
                          ___wmul@multiplicand 0007                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 4486                                            l213 3D8C  
                                          l223 4404                                            l312 3E8E  
                                          l209 480A                                            l217 469C  
                __size_of_I2C_MasterSendTxData 0008                                            l402 491C  
                                          l306 4852                                            l330 48E4  
                                          l411 48F8                                            l236 473A  
                                          l405 47F6                                            l333 48DC  
                                          l229 48AC                                            l245 47B4  
                                          l342 48C4                                            l262 479C  
                                          l239 47CC                                            l351 4846  
                                          l256 3F08                                            l408 48F2  
                                          l432 4908                                            l272 483A  
                                          l336 48D4                                            l281 39A8  
                                          l345 48BC                                            l426 4928  
                                          l266 3FEE                                            l275 482A  
                                          l339 48CC                                            l435 480C  
                                          l348 48B4                                            l604 4868  
                                          l429 4930                                            l381 492C  
                                          l365 4918                                            l269 485E  
                                          l357 40C2                                            l390 4920  
                                          l278 3970                                            l294 3BFA  
                                          l295 3C68                                            l439 481A  
                                          l456 47E2                                            l368 4914  
                                          l384 490C                                            l712 4716  
                                          l633 489A                                            l642 487C  
                                          l570 3F7E                                            l378 477E  
                                          l706 475C                                            l459 4872  
                                          l387 48EC                                            l636 4890  
                                          l660 4934                                            l492 4594  
                                          l396 4910                                            l645 4886  
                                          l709 437C                                            l639 48A4  
                                          l399 4924                                            l594 425C  
                                          l595 4272                                            l598 429E  
                                          l943 38E4                                            l971 3BC2  
                                          l956 3B18                                            l982 3580  
                                          l977 353A                                            l986 44F6  
                       ??_EUSART_RxDataHandler 0001                                            _pad 375C  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 480C  
               ?_EUSART_SetFramingErrorHandler 0005                                   ___awmod@sign 000A  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   ___flmul@aexp 0012  
                                 ___flmul@bexp 0017                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0011                                   ___flmul@temp 001C  
                                 ___flmul@prod 0018                         _I2C_Write1ByteRegister 3FF0  
                     ??_I2C_CallbackReturnStop 0010                                   _I2C_DO_RESET 483C  
                                 ___fltol@exp1 000E                                           l1009 347C  
                      ??_rd2RegCompleteHandler 0010                                           l1240 1EE2  
                                         l1305 2CBC                                           l1241 1ED0  
                                         l1330 2A7C                                           l1242 1E96  
                                         l1307 2D34                                           l1308 2D22  
                                         l1500 18A8                                           l1333 290E  
                                         l1326 2718                                           l1343 2A3E  
                                         l1335 2986                                           l1431 37A2  
                                         l1336 2974                                           l1257 1FFC  
                                         l1249 21B2                                           l1370 31DC  
                                         l1602 3376                                           l1266 20CC  
                                         l1282 4336                                           l1434 37E4  
                                         l4003 4912                                           l4011 4854  
                                         l1267 20BA                                           l1611 2F6C  
                                         l1436 3820                                           l4013 4858  
                                         l4021 4830                                           l4101 484C  
                                         l1381 3174                                           l1374 3118  
                                         l1294 2E16                                           l1454 1CF2  
                                         l1390 46C6                                           l4015 485C  
                                         l4023 4838                                           l4031 4828  
                                         l4103 4850                                           l1367 3080  
                                         l1296 2C76                                           l1608 3028  
                                         l1632 44BE                                           l1472 1468  
                                         l1560 4126                                           l4009 492E  
                                         l4113 3E24                                           l5001 43F6  
                                         l1553 2570                                           l1618 452E  
                                         l1626 42F0                                           l1570 367E  
                                         l1546 2652                                           l4115 3E28  
                                         l4107 3E14                                           l4019 482C  
                                         l4027 481C                                           l4043 3906  
                                         l4035 38E6                                           l4131 48BE  
                                         l5003 43FA                                           l1299 2C3A  
                                         l4109 3E1C                                           l4125 3E36  
                                         l4029 4820                                           l4061 39A6  
                                         l4053 3916                                           l4133 48C2  
                                         l4141 4844                                           l5005 43FE  
                                         l1661 4246                                           l4119 3E2E  
                                         l4055 3974                                           l4047 390E  
                                         l4039 38FE                                           l4071 3BD2  
                                         l5007 4402                                           l1647 3CFE  
                                         l1655 43C0                                           l1671 375A  
                                         l1559 411E                                           l4057 3986  
                                         l4073 3BD8                                           l4137 483C  
                                         l4153 4072                                           l4145 405E  
                                         l1681 41E0                                           l4059 39A0  
                                         l4083 3C00                                           l4075 3BF0  
                                         l4139 4840                                           l4147 4062  
                                         l1667 4564                                           l4093 3C10  
                                         l4077 3BF4                                           l4069 3BC4  
                                         l4149 406A                                           l4181 3F80  
                                         l4421 4788                                           l6101 1DF8  
                                         l6021 424A                                           l1686 41E8  
                                         l4415 4922                                           l4087 3C08  
                                         l4159 407A                                           l4183 3F84  
                                         l4423 478C                                           l1599 336E  
                                         l6111 1E0C                                           l6103 1DFC  
                                         l6031 4296                                           l6023 426A  
                                         l4185 3F94                                           l4417 4780  
                                         l5401 3D36                                           l6201 2050  
                                         l6121 1E20                                           l6113 1E10  
                                         l6105 1E00                                           l6033 429A  
                                         l6025 4274                                           l6041 3C7C  
                                         l7001 186C                                           l4099 4848  
                                         l4187 3FA8                                           l4419 4784  
                                         l5411 3D5E                                           l5403 3D3E  
                                         l6203 205E                                           l6211 207C  
                                         l6123 1E24                                           l6115 1E14  
                                         l6107 1E04                                           l6131 1E34  
                                         l6027 4284                                           l6035 429C  
                                         l6019 424A                                           l6043 3C8E  
                                         l7011 18C4                                           l7003 1870  
                                         l4189 3FAE                                           l5421 3D82  
                                         l5413 3D66                                           l5405 3D46  
                                         l6301 2AE4                                           l6205 2066  
                                         l6213 208A                                           l6141 1EA4  
                                         l6133 1E38                                           l6125 1E28  
                                         l6117 1E18                                           l6109 1E08  
                                         l6061 1D20                                           l6053 1CF4  
                                         l6029 4286                                           l6037 4862  
                                         l6045 3C98                                           l7101 1BE0  
                                         l7021 196A                                           l7013 1928  
                                         l7005 1880                                           ?_pad 0017  
                                         l3911 4642                                           l5431 48A6  
                                         l5423 3D86                                           l5415 3D6E  
                                         l5407 3D4E                                           l6311 2B10  
                                         l6303 2AEA                                           l6223 20DC  
                                         l6231 2132                                           l6215 208E  
                                         l6207 206A                                           l6151 1ECE  
                                         l6143 1EB0                                           l6135 1E62  
                                         l6127 1E2C                                           l6119 1E1C  
                                         l6071 1D5A                                           l6063 1D30  
                                         l6055 1D00                                           l6047 3CB6  
                                         l6039 3C6A                                           l7111 1C26  
                                         l7103 1BFA                                           l7031 19A6  
                                         l7015 1938                                           l7023 1972  
                                         l7007 1894                                           l5601 4580  
                                         l5441 468A                                           l5417 3D76  
                                         l5409 3D56                                           l5425 3D8A  
                                         l6401 2DBC                                           l6321 2B4A  
                                         l6313 2B20                                           l6305 2AF0  
                                         l6241 2184                                           l6233 2142  
                                         l6225 20E8                                           l6217 209C  
                                         l6209 207A                                           l6161 1F24  
                                         l6153 1EF0                                           l6145 1EB4  
                                         l6137 1E7E                                           l6129 1E30  
                                         l6081 1D88                                           l6073 1D60  
                                         l6065 1D40                                           l6057 1D0E  
                                         l6049 3CEC                                           l7121 1C76  
                                         l7113 1C36                                           l7105 1C00  
                                         l7041 19D2                                           l7033 19AC  
                                         l7025 1984                                           l7017 194A  
                                         l7009 18A0                                           l7201 21DA  
                                         l5451 4874                                           l5611 3F0A  
                                         l5603 4586                                           l5443 4696  
                                         l5435 4672                                           l3931 4646  
                                         l3907 461A                                           l3915 45EE  
                                         l3923 45C2                                           l5419 3D7E  
                                         l6411 2E0A                                           l6403 2DD6  
                                         l6323 2B60                                           l6315 2B30  
                                         l6307 2AFE                                           l6251 21A2  
                                         l6243 218A                                           l6235 2152  
                                         l6227 20F6                                           l6219 20B2  
                                         l6171 1F5E                                           l6163 1F32  
                                         l6155 1F00                                           l6147 1EC2  
                                         l6139 1E8E                                           l6091 1DBC  
                                         l6083 1D8A                                           l6075 1D72  
                                         l6067 1D42                                           l6059 1D10  
                                         l7131 1CB2                                           l7123 1C88  
                                         l7115 1C3C                                           l7107 1C12  
                                         l7035 19B8                                           l7027 1992  
                                         l7043 19D8                                           l7051 1A06  
                                         l7019 195C                                           l7211 222C  
                                         l7203 21E8                                           l5453 4892  
                                         l5621 3F2E                                           l5613 3F0C  
                                         l5605 4588                                           l5701 47DE  
                                         l5445 469A                                           l5437 4676  
                                         l3933 465A                                           l3909 462E  
                                         l3917 4602                                           l3925 45D6  
                                         l3941 4470                                           l5381 3D02  
                                         l5429 479E                                           l7141 31F6  
                                         l6413 2E0C                                           l6405 2DF2  
                                         l6341 2BB4                                           l6325 2B70  
                                         l6333 2B90                                           l6317 2B32  
                                         l6309 2B00                                           l6501 28D6  
                                         l6421 2654                                           l6245 218C  
                                         l6237 2172                                           l6229 2130  
                                         l6181 1FCA                                           l6173 1F60  
                                         l6165 1F40                                           l6149 1EC4  
                                         l6085 1D9A                                           l6093 1DC4  
                                         l6077 1D74                                           l6069 1D4A  
                                         l6261 43A0                                           l7125 1C94  
                                         l7117 1C42                                           l7109 1C1E  
                                         l7133 1CCE                                           l7061 1ABC  
                                         l7053 1A5E                                           l7045 19EA  
                                         l7037 19C8                                           l7029 19A2  
                                         l7221 22C8                                           l7213 223A  
                                         l7205 21FA                                           l5455 4888  
                                         l5631 3F52                                           l5623 3F32  
                                         l5615 3F18                                           l5607 4592  
                                         l5439 4686                                           l3871 3ED8  
                                         l3935 466E                                           l3919 4616  
                                         l3927 45EA                                           l3943 4484  
                                         l3951 48E8                                           l5391 3D1E  
                                         l5383 3D06                                           l7143 31FA  
                                         l6407 2DF6                                           l6351 2C06  
                                         l6343 2BCE                                           l6335 2BA0  
                                         l6327 2B78                                           l6319 2B3A  
                                         l6511 292C                                           l6503 28F4  
                                         l6431 2690                                           l6423 2660  
                                         l6247 2192                                           l6239 2176  
                                         l6191 2022                                           l6183 1FCC  
                                         l6175 1F6A                                           l6167 1F4C  
                                         l6159 1F14                                           l6095 1DD4  
                                         l6087 1DAA                                           l6079 1D7A  
                                         l6255 437E                                           l6263 4530  
                                         l7127 1C9C                                           l7071 1B0C  
                                         l7063 1AD8                                           l7055 1A92  
                                         l7047 19FC                                           l7039 19CC  
                                         l7231 2354                                           l7215 2260  
                                         l7207 21FE                                           l7311 4134  
                                         l7303 4128                                           l5457 489C  
                                         l5449 487E                                           l5633 3F7C  
                                         l5625 3F36                                           l5617 3F26  
                                         l5609 486A                                           l3881 4738  
                                         l3873 47B6                                           l3953 48DE  
                                         l3961 48DA                                           l5393 3D20  
                                         l5385 3D16                                           l5561 3D98  
                                         l5641 303C                                           l7161 32B6  
                                         l7153 325A                                           l7145 3218  
                                         l7137 31DE                                           l6601 3A6A  
                                         l6409 2E04                                           l6361 2C62  
                                         l6353 2C16                                           l6345 2BDE  
                                         l6337 2BA0                                           l6329 2B7C  
                                         l6521 2996                                           l6513 2930  
                                         l6505 28FE                                           l6441 26C2  
                                         l6433 26A0                                           l6425 266E  
                                         l6249 21A0                                           l6185 1FDC  
                                         l6169 1F50                                           l6177 1F70  
                                         l6097 1DE6                                           l6089 1DBA  
                                         l6257 438A                                           l6265 453C  
                                         l6273 4488                                           l7129 1CAC  
                                         l7081 1B4E                                           l7073 1B1C  
                                         l7065 1AEA                                           l7057 1A9A  
                                         l7049 1A00                                           l7241 23F2  
                                         l7233 2386                                           l7225 2310  
                                         l7217 229A                                           l7209 2224  
                                         l7313 4148                                           l7305 412C  
                                         l5627 3F3A                                           l5619 3F2A  
                                         l3883 491E                                           l3875 4718  
                                         l3867 3E92                                           l3939 4448  
                                         l3971 490A                                           l3947 47E4  
                                         l3955 48E2                                           l5395 3D24  
                                         l5387 3D1A                                           l5571 3DEE  
                                         l5563 3DAE                                           l5651 30BA  
                                         l5643 304A                                           l7171 3340  
                                         l7155 3270                                           l7147 3250  
                                         l7139 31F2                                           l6611 3A96  
                                         l6603 3A6E                                           l6371 2CA2  
                                         l6363 2C64                                           l6355 2C2A  
                                         l6347 2BEE                                           l6291 2AAA  
                                         l6283 2A7E                                           l6531 29F8  
                                         l6523 29A2                                           l6515 293E  
                                         l6507 290C                                           l6451 2702  
                                         l6443 26D0                                           l6435 26A6  
                                         l6427 2670                                           l6195 2036  
                                         l6179 1F96                                           l6187 1FEC  
                                         l6099 1DF4                                           l6259 439C  
                                         l6267 4540                                           l7091 1B7E  
                                         l7083 1B5C                                           l7075 1B2E  
                                         l7067 1AF8                                           l7059 1A9E  
                                         l7251 248A                                           l7243 2400  
                                         l7235 2396                                           l7219 22BA  
                                         l7227 2322                                           l7315 4166  
                                         l7307 4130                                           l5629 3F46  
                                         l3885 491A                                           l3877 4728  
                                         l3869 3EA4                                           l7421 3C42  
                                         l3965 48C6                                           l5397 3D2C  
                                         l5389 3D1C                                           l5573 3E02  
                                         l5565 3DC2                                           l5661 310E  
                                         l5653 30C2                                           l5645 3090  
                                         l5581 4008                                           l6277 46F2  
                                         l7173 3352                                           l7165 32EE  
                                         l7157 3278                                           l7149 3254  
                                         l6621 3ACE                                           l6613 3A9E  
                                         l6605 3A7C                                           l6381 2CDE  
                                         l6373 2CAC                                           l6365 2C74  
                                         l6357 2C38                                           l6349 2BFE  
                                         l6293 2ABA                                           l6285 2A8A  
                                         l6541 2A60                                           l6533 2A0C  
                                         l6525 29B0                                           l6517 296C  
                                         l6509 291E                                           l6461 274C  
                                         l6453 2708                                           l6445 26D2  
                                         l6437 26B6                                           l6429 2680  
                                         l6197 2040                                           l6189 2012  
                                         l6269 4558                                           l7093 1BA4  
                                         l7085 1B64                                           l7077 1B36  
                                         l7069 1B08                                           l7181 36AA  
                                         l7261 2580                                           l7245 2430  
                                         l7237 23C8                                           l7229 2344  
                                         l7309 4132                                           l5591 47F8  
                                         l3879 4730                                           l3887 48F4  
                                         l3975 48EE                                           l7423 394A  
                                         l3959 48D6                                           l3991 48CE  
                                         l3967 48CA                                           l3983 48B6  
                                         l5399 3D2E                                           l5567 3DD6  
                                         l5559 3D90                                           l5671 3184  
                                         l5663 314A                                           l5655 30CE  
                                         l5647 30A6                                           l5639 302C  
                                         l5583 401C                                           l6279 470E  
                                         l7159 3280                                           l6631 3B08  
                                         l6623 3AE4                                           l6615 3AB0  
                                         l6607 3A84                                           l6391 2D50  
                                         l6383 2CEC                                           l6375 2CBA  
                                         l6367 2C86                                           l6359 2C44  
                                         l6295 2ACA                                           l6287 2A98  
                                         l6543 2A62                                           l6535 2A26  
                                         l6527 29DA                                           l6471 279C  
                                         l6463 2758                                           l6455 2728  
                                         l6447 26E2                                           l6439 26BC  
                                         l6199 204E                                           l6551 42F2  
                                         l7095 1BC0                                           l7087 1B6C  
                                         l7079 1B46                                           l7191 36FA  
                                         l7271 25F4                                           l7255 24FA  
                                         l7239 23DA                                           l5593 4808  
                                         l7425 3E68                                           l3993 48D2  
                                         l3985 48BA                                           l3977 48AE  
                                         l5569 3DEA                                           l5681 31CC  
                                         l5673 3188                                           l5665 3156  
                                         l5657 3100                                           l5761 4338  
                                         l5585 4030                                           l5577 3FF2  
                                         l7169 332E                                           l7417 32A0  
                                         l6561 3834                                           l6633 3B10  
                                         l6625 3AEC                                           l6617 3AB8  
                                         l6609 3A88                                           l6393 2D5E  
                                         l6385 2D1A                                           l6369 2C9C  
                                         l6377 2CCC                                           l6297 2ACC  
                                         l6289 2A9A                                           l6641 3B58  
                                         l6537 2A42                                           l6545 2A68  
                                         l6529 29DE                                           l6481 27DE  
                                         l6473 27A8                                           l6465 2762  
                                         l6457 2738                                           l6449 26F2  
                                         l6553 4302                                           l6721 345C  
                                         l6705 3408                                           l6801 2F90  
                                         l7097 1BC8                                           l7089 1B78  
                                         l7193 370C                                           l7185 36B6  
                                         l7257 250C                                           l7265 25AC  
                                         l7249 245C                                           l7281 261A  
                                         l5595 4932                                           l3979 48B2  
                                         l7419 40AC                                           l5675 31AC  
                                         l5667 3164                                           l5659 3102  
                                         l5763 434A                                           l5587 4044  
                                         l5579 3FF2                                           l6571 385A  
                                         l6563 383C                                           l6627 3AF2  
                                         l6619 3AC0                                           l6395 2D88  
                                         l6379 2CDA                                           l6299 2AD4  
                                         l6643 3B86                                           l6547 2A6C  
                                         l6539 2A52                                           l6491 2840  
                                         l6483 27EA                                           l6475 27B4  
                                         l6467 2778                                           l6723 346C  
                                         l6715 3430                                           l6707 3412  
                                         l6803 2FCC                                           l6731 3780  
                                         l7099 1BCE                                           l7195 3736  
                                         l7187 36C4                                           l7179 3680  
                                         l7283 2640                                           l7267 25D2  
                                         l7275 2600                                           l7259 2540  
                                         l7291 40CC                                           l5597 4566  
                                         l5693 47CE                                           l3989 490E  
                                         l3997 4906                                           l4981 477C  
                                         l5677 31BC                                           l5669 3182  
                                         l5765 436C                                           l5589 4048  
                                         l5757 473C                                           l6813 44F8  
                                         l6821 42B8                                           l6581 3892  
                                         l6573 3862                                           l6565 3840  
                                         l6557 3822                                           l6629 3AF8  
                                         l6389 2D44                                           l6397 2D8C  
                                         l6645 3B96                                           l6637 3B1A  
                                         l6661 34FA                                           l6653 347E  
                                         l6493 284C                                           l6485 27FA  
                                         l6477 27C2                                           l6469 2784  
                                         l6717 343C                                           l6709 341C  
                                         l6805 2FE0                                           l6741 37C6  
                                         l6733 378E                                           l6901 1300  
                                         l7189 36DC                                           l7277 260E  
                                         l7269 25E0                                           l7293 40DA  
                                         l5599 457E                                           l5695 47D2  
                                         l3999 4916                                           l4991 43C8  
                                         l5679 31CA                                           l5759 474A  
                                         l6823 42E6                                           l6591 38BE  
                                         l6583 3898                                           l6575 3874  
                                         l6567 384E                                           l6559 3826  
                                         l6399 2DA6                                           l6647 3BBA  
                                         l6639 3B48                                           l6671 357E  
                                         l6663 3508                                           l6655 34AC  
                                         l6495 2868                                           l6487 2814  
                                         l6479 27CE                                           l6719 344C  
                                         l6751 35A2                                           l6807 3008  
                                         l6743 37F4                                           l6735 379A  
                                         l6727 375C                                           l6911 13D0  
                                         l6903 1334                                           l6831 1058  
                                         l7199 21B4                                           l7295 4100  
                                         l5697 47D6                                           l4985 4926  
                                         l4993 43D8                                           l4977 475E  
                                         l6825 42EA                                           l6817 42A0  
                                         l6585 38AE                                           l6577 387C  
                                         l6593 38C4                                           l6569 3856  
                                         l6649 3BC0                                           l6665 351A  
                                         l6657 34BC                                           l6497 2892  
                                         l6489 2824                                           l6753 35E0  
                                         l6761 3620                                           l6809 3018  
                                         l6745 3808                                           l6737 37AE  
                                         l6729 376C                                           l6921 143A  
                                         l6905 133A                                           l6913 1402  
                                         l6841 10AC                                           l6833 1068  
                                         l7289 40C4                                           l7297 469E  
                                         l5699 47DA                                           l4987 492A  
                                         l4995 43DA                                           l4979 476C  
                                         l6819 42A4                                           l6595 38D4  
                                         l6587 38B6                                           l6579 3884  
                                         l6667 3528                                           l6659 34EA  
                                         l6499 28C8                                           l6675 44C0  
                                         l6691 33CC                                           l6683 3378  
                                         l6763 3632                                           l6755 3608  
                                         l6739 37C2                                           l6771 41EA  
                                         l6923 1442                                           l6915 1412  
                                         l6907 1394                                           l6851 10F2  
                                         l6843 10B4                                           l6835 1076  
                                         l7299 46A8                                           l4997 43DE  
                                         l4989 43C4                                           l6597 38DC  
                                         l6589 38B8                                           l6669 3578  
                                         l6677 44D6                                           l6693 33CE  
                                         l6685 338E                                           l6757 3614  
                                         l6749 3582                                           l6773 41FA  
                                         l6781 41D2                                           l6941 14F2  
                                         l6933 1486                                           l6925 145C  
                                         l6917 1416                                           l6909 13C8  
                                         l6861 112E                                           l6853 10FA  
                                         l6845 10C6                                           l6837 107E  
                                         l6829 104E                                           l4999 43EE  
                                         l6679 44E6                                           l6695 33DE  
                                         l6767 3676                                           l6791 2EA2  
                                         l6775 418A                                           l6951 1530  
                                         l6935 1498                                           l6943 14F6  
                                         l6919 1428                                           l6927 1474  
                                         l6871 11AA                                           l6855 10FE  
                                         l6847 10D4                                           l6839 10A2  
                                         l6697 33E2                                           l6689 33A2  
                                         l6793 2EB0                                           l6785 2E18  
                                         l6961 157E                                           l6953 1534  
                                         l6945 14FE                                           l6937 14B4  
                                         l6873 11B4                                           l6865 1164  
                                         l6857 1102                                           l6849 10E6  
                                         l6699 33F0                                           l6787 2E38  
                                         l6779 41C0                                           l6971 1616  
                                         l6955 1546                                           l6963 1586  
                                         l6947 1510                                           l6939 14EA  
                                         l6891 1288                                           l6883 1238  
                                         l6867 1176                                           l6859 1108  
                                         l6797 2F20                                           l6789 2E8E  
                                         l6981 16FA                                           l6973 166E  
                                         l6965 158E                                           l6957 1554  
                                         l6949 1522                                           l6885 124A  
                                         l6869 1192                                           l6877 11DC  
                                         l6799 2F5C                                           l6991 1794  
                                         l6983 172C                                           l6975 16A2  
                                         l6967 159E                                           l6959 156C  
                                         l6887 1266                                           l6879 1202  
                                         l6895 12B0                                           l6993 17C8  
                                         l6985 1742                                           l6969 15B2  
                                         l6977 16A8                                           l6897 12CA  
                                         l6889 127E                                           l6995 181E  
                                         l6987 1774                                           l6979 16C6  
                                         l6997 1824                                           l6989 1784  
                                         l6999 1858                                           STR_1 1021  
                                         STR_2 1039                                           STR_3 1041  
                                         STR_6 103D                                           STR_7 1045  
                   __size_of_VEML6030_GetValue 0046                                           u3010 47F4  
                                         u3011 47EE                                           u3020 38FA  
                                         u3021 38F6                                           _LATA 000F89  
                                         _LATB 000F8A                                           _LATC 000F8B  
                                         u3016 47F6                                           u3040 39A0  
                                         _LATD 000F8C                                           u3041 399C  
                                         _LATE 000F8D                                           u3050 3BF0  
                                         u3130 481A                                           u3051 3BEC  
                                         u3131 4816                                           u3140 3F94  
                                         u3141 3F90                                           u3038 3924  
                                         u3150 3FA8                                           u3039 3938  
                                         u3151 3FA4                                           u3068 3C1E  
                                         u3069 3C30                                           u3078 3E44  
                                         u3079 3E56                                           u3088 4088  
                                         u3168 3FD8                                           u3600 479C  
                                         u6000 1D30                                           u3089 409A  
                                         u3169 3FEA                                           u3601 4798  
                                         u6001 1D2C                                           u6010 1D72  
                                         u6011 1D6E                                           u5300 3D16  
                                         u6100 1EA4                                           u6020 1D88  
                                         u5301 3D12                                           u6101 1EA0  
                                         u6021 1D84                                           u5310 4686  
                                         u6110 1EC2                                           u6030 1D9A  
                                         u5311 4682                                           u6111 1EBE  
                                         u6031 1D96                                           u7000 3508  
                                         u6200 2012                                           u6120 1EE2  
                                         u6040 1DAA                                           u7001 3504  
                                         u6201 200E                                           u6121 1EDE  
                                         u6041 1DA6                                           u4610 476C  
                                         u7010 3528                                           u6210 2022  
                                         u6130 1EF0                                           u6050 1DE6  
                                         u4611 4768                                           u7011 3524  
                                         u6211 201E                                           u6131 1EEC  
                                         u6051 1DE2                                           u4620 43D8  
                                         u5500 405C                                           u7020 3578  
                                         u6300 20F6                                           u6220 204E  
                                         u6140 1F00                                           u6060 1DF4  
                                         u7100 345C                                           u4621 43D4  
                                         u5501 4058                                           u7021 3574  
                                         u6301 20F2                                           u6221 204A  
                                         u6141 1EFC                                           u6061 1DF0  
                                         u7101 3458                                           u4630 43EE  
                                         u5510 303C                                           u7030 44D6  
                                         u6310 2130                                           u6230 205E  
                                         u6150 1F32                                           u6070 1E62  
                                         u7110 376C                                           u4631 43EA  
                                         u5511 3038                                           u7031 44D2  
                                         u6311 212C                                           u6231 205A  
                                         u6151 1F2E                                           u6071 1E5E  
                                         u7111 3768                                           u2960 3EA4  
                                         u5600 31CA                                           u5520 304A  
                                         u8000 3340                                           u6320 2142  
                                         u6240 207A                                           u6160 1F40  
                                         u6080 1E7A                                           u7040 338E  
                                         u7200 366C                                           u7120 378E  
                                         u6400 44BA                                           u2961 3EA0  
                                         u5601 31C6                                           u5521 3046  
                                         u8001 333C                                           u6321 213E  
                                         u6241 2076                                           u6161 1F3C  
                                         u6081 1E74                                           u7041 338A  
                                         u7201 3666                                           u7121 378A  
                                         u2970 4728                                           u5530 30A6  
                                         u8010 3352                                           u6410 2A98  
                                         u6330 2152                                           u6250 208A  
                                         u6170 1F5E                                           u6090 1E7C  
                                         u7050 33C2                                           u7210 366E  
                                         u7130 37E4                                           u2971 4724  
                                         u5531 30A2                                           u8011 334E  
                                         u6411 2A94                                           u6331 214E  
                                         u6251 2086                                           u6171 1F5A  
                                         u7131 37E0                                           u5540 30FC  
                                         u6500 2C38                                           u6420 2AAA  
                                         u6340 2172                                           u6260 209C  
                                         u6180 1F96                                           u7060 33F0  
                                         u7140 37F4                                           u7220 4234  
                                         u8020 36AA                                           u8100 230A  
                                         u5541 30F8                                           u6501 2C34  
                                         u6421 2AA6                                           u6341 216E  
                                         u6261 2098                                           u6181 1F92  
                                         u7061 33EC                                           u7141 37F0  
                                         u8021 36A6                                           u8101 2304  
                                         u5470 3DAE                                           u5550 3146  
                                         u6510 2C62                                           u6430 2ABA  
                                         u6350 2184                                           u6270 20B2  
                                         u6190 1FDC                                           u7070 3404  
                                         u7150 35C2                                           u7310 2F1C  
                                         u7230 4246                                           u8030 36DC  
                                         u8110 230C                                           u5471 3DAA  
                                         u5551 3142                                           u6511 2C5E  
                                         u6431 2AB6                                           u6351 2180  
                                         u6271 20AE                                           u6191 1FD8  
                                         u7071 3400                                           u7055 33B8  
                                         u7311 2F18                                           u7231 4242  
                                         u8031 36D8                                           u5480 3E02  
                                         u5560 3164                                           u7400 42E6  
                                         u6600 2D5E                                           u6520 2C86  
                                         u6440 2AFE                                           u6360 21A0  
                                         u6280 20C8                                           u7080 342C  
                                         u7160 35E0                                           u7320 2F40  
                                         u7240 41BA                                           u8040 36FA  
                                         u8200 25D2                                           u8120 2322  
                                         u5481 3DFE                                           u5561 3160  
                                         u7401 42E2                                           u6601 2D5A  
                                         u6521 2C82                                           u6441 2AFA  
                                         u6361 219C                                           u6281 20C4  
                                         u7081 3428                                           u7161 35DC  
                                         u7305 2EC4                                           u7241 41B4  
                                         u8041 36F6                                           u8201 25CE  
                                         u8121 231E                                           u5570 3174  
                                         u5490 4008                                           u6610 2DA6  
                                         u6530 2C9C                                           u6450 2B10  
                                         u6290 20DC                                           u7090 344C  
                                         u7170 3608                                           u7330 2F5C  
                                         u7306 2ECE                                           u6370 43C0  
                                         u7250 41BC                                           u7410 1076  
                                         u8050 370C                                           u8130 2354  
                                         u8210 411E                                           u5571 3170  
                                         u5491 4004                                           u6611 2DA2  
                                         u6531 2C98                                           u6451 2B0C  
                                         u6291 20D8                                           u7091 3448  
                                         u7171 3604                                           u7155 35B8  
                                         u7331 2F58                                           u7307 2EDE  
                                         u6371 43BC                                           u7227 422A  
                                         u7411 1072                                           u8051 3708  
                                         u8131 2350                                           u8211 411A  
                                         u5580 3182                                           u6620 2DD6  
                                         u6540 2CBA                                           u6460 2B20  
                                         u6700 2728                                           u7180 3632  
                                         u7340 2FB0                                           u6380 4558  
                                         u7260 41D2                                           u7500 1230  
                                         u7420 10C6                                           u8060 3736  
                                         u8140 2396                                           u5581 317E  
                                         u6621 2DD2                                           u6541 2CB6  
                                         u6461 2B1C                                           u6701 2724  
                                         u7181 362E                                           u7325 2F36  
                                         u6381 4554                                           u7261 41CE  
                                         u7501 122A                                           u7421 10C2  
                                         u8061 3732                                           u8141 2392  
                                         u5590 31BC                                           u6630 2E04  
                                         u6550 2CDA                                           u6470 2B60  
                                         u6710 2738                                           u7350 2FCC  
                                         u7270 2E60                                           u5910 425C  
                                         u6390 44B8                                           u7510 1232  
                                         u7430 10D4                                           u8150 23DA  
                                         u8070 21DA                                           u5591 31B8  
                                         u6631 2E00                                           u6551 2CD6  
                                         u6471 2B5C                                           u6711 2734  
                                         u7351 2FC8                                           u5911 4258  
                                         u6391 44B2                                           u7431 10D0  
                                         u8151 23D6                                           u8071 21D6  
                                         u6560 2CEC                                           u6480 2BA0  
                                         u6800 29F8                                           u6720 28B2  
                                         u6640 266E                                           u7360 3008  
                                         u7280 2E8E                                           u5920 426A  
                                         u7600 1498                                           u7520 124A  
                                         u7440 10E6                                           u8160 248A  
                                         u8080 2224                                           u6561 2CE8  
                                         u6481 2B9C                                           u6801 29F4  
                                         u6641 266A                                           u7361 3004  
                                         u7345 2FA6                                           u7281 2E8A  
                                         u5921 4266                                           u7601 1494  
                                         u7521 1246                                           u7441 10E2  
                                         u8161 2486                                           u8081 2220  
                                         u7370 4528                                           u6570 2D1A  
                                         u6490 2C16                                           u6810 2A26  
                                         u6730 290C                                           u6650 2680  
                                         u7290 2EB0                                           u5930 4296  
                                         u7610 14B4                                           u7530 12FC  
                                         u7450 112E                                           u8170 24F4  
                                         u8090 2260                                           u7371 4522  
                                         u6571 2D16                                           u6491 2C12  
                                         u6811 2A22                                           u6731 2908  
                                         u6651 267C                                           u7195 3644  
                                         u7291 2EAC                                           u7275 2E56  
                                         u5931 4292                                           u7611 14B0  
                                         u7531 12F8                                           u7451 112A  
                                         u8171 24EE                                           u8091 225C  
                                         u8227 4172                                           u7380 452A  
                                         u6900 3A96                                           u6580 2D30  
                                         u6820 2A60                                           u6740 292C  
                                         u6660 2690                                           u5940 3C7C  
                                         u7700 172C                                           u7620 14EA  
                                         u7540 1390                                           u7460 115C  
                                         u8180 24F6                                           u8237 4750  
                                         u6901 3A92                                           u6581 2D2C  
                                         u6821 2A5C                                           u6741 2928  
                                         u6725 28A8                                           u6661 268C  
                                         u5941 3C78                                           u7701 1728  
                                         u7621 14E6                                           u7541 138C  
                                         u7461 1156                                           u7390 42B8  
                                         u6830 3834                                           u6910 3AB0  
                                         u6590 2D44                                           u6750 293E  
                                         u6670 26D0                                           u5950 3C8E  
                                         u7710 1774                                           u7630 1510  
                                         u7550 1402                                           u7470 115E  
                                         u8190 250C                                           u7391 42B4  
                                         u6831 3830                                           u6911 3AAC  
                                         u6591 2D40                                           u6751 293A  
                                         u6671 26CC                                           u5951 3C8A  
                                         u7711 1770                                           u7631 150C  
                                         u7551 13FE                                           u8191 2508  
                                         u6840 384E                                           u6920 3ACE  
                                         u6760 296C                                           u6680 26E2  
                                         u5960 3CB6                                           u7800 1984  
                                         u7720 1784                                           u7640 1522  
                                         u7560 1428                                           u7480 1176  
                                         u6841 384A                                           u6921 3ACA  
                                         u6761 2968                                           u6681 26DE  
                                         u5961 3CB2                                           u7801 1980  
                                         u7721 1780                                           u7641 151E  
                                         u7561 1424                                           u7481 1172  
                                         u6850 3874                                           u6930 3AE4  
                                         u6770 2982                                           u6690 26F2  
                                         u5970 3CEC                                           u7810 1992  
                                         u7730 181E                                           u7650 1530  
                                         u7570 143A                                           u7490 1202  
                                         u6851 3870                                           u6931 3AE0  
                                         u6771 297E                                           u6691 26EE  
                                         u5971 3CE8                                           u7811 198E  
                                         u7731 181A                                           u7651 152C  
                                         u7571 1436                                           u7491 11FE  
                                         u6860 3892                                           u6940 3B08  
                                         u6780 2996                                           u5980 1D0E  
                                         u7900 1BFA                                           u7820 19EA  
                                         u7740 186C                                           u7660 1546  
                                         u7580 145C                                           u6861 388E  
                                         u6941 3B04                                           u6781 2992  
                                         u5981 1D0A                                           u7901 1BF6  
                                         u7821 19E6                                           u7741 1868  
                                         u7661 1542                                           u7581 1458  
                                         u6870 38AE                                           u6950 3B48  
                                         u6790 29B0                                           u5990 1D20  
                                         u7910 1C12                                           u7830 1ABC  
                                         u7750 1894                                           u7670 1554  
                                         u7590 1482                                           u6871 38AA  
                                         u6951 3B44                                           u6791 29AC  
                                         u5991 1D1C                                           u7911 1C0E  
                                         u7831 1AB8                                           u7751 1890  
                                         u7671 1550                                           u7591 147E  
                                         u6880 38D4                                           u6960 3B86  
                                         u7920 1C70                                           u7840 1AD8  
                                         u7760 1938                                           u7680 157E  
                                         u6881 38D0                                           u6961 3B82  
                                         u7921 1C6A                                           u7841 1AD4  
                                         u7761 1934                                           u7681 157A  
                                         u6890 3A7C                                           u6970 3BBA  
                                         u7930 1C72                                           u7850 1AEA  
                                         u7770 194A                                           u7690 16C6  
                                         u6891 3A78                                           u6971 3BB6  
                                         u7851 1AE6                                           u7771 1946  
                                         u7691 16C2                                           u6980 34AC  
                                         u7940 1C88                                           u7860 1AF8  
                                         u7780 195C                                           u6981 34A8  
                                         u7941 1C84                                           u7861 1AF4  
                                         u7781 1958                                           u7950 3218  
                                         u6990 34EA                                           u7870 1B2E  
                                         u7790 196A                                           u7951 3214  
                                         u6991 34E6                                           u7871 1B2A  
                                         u7791 1966                                           u7960 3250  
                                         u7880 1B5C                                           u7961 324C  
                                         u7881 1B58                                           u7970 326C  
                                         u7890 1BE0                                           u7971 3268  
                                         u7891 1BDC                                           u7980 3328  
                                         u7981 3322                                           u7990 332A  
                                         _WPUB 000F7C                        ??_wr2RegCompleteHandler 0010  
                                         _dbuf 0100                                           _atoi 31DE  
                                         _main 4128                       ?_I2C_CallbackReturnReset 000E  
                                         _prec 00AF                                           _nout 00AB  
                                         pad@i 001E                                           pad@p 001B  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 3D8E  
                                         btemp 005B                                  ___fpclassifyf 3582  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                                ___fldiv@new_exp 0016  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   _tolower$2244 0011  
                                 ___param_bank 000000               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 48BE                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 4874                                    _writeBuffer 00A8  
                                ___fltol@sign1 000D                                          ?_atoi 000C  
                              __end_of___fladd 21B4                                          ?_main 0001  
                              __end_of___fldiv 2E18                                __end_of___awdiv 38E6  
                              __end_of___flneg 44F8                                          STR_10 1049  
                                        STR_12 1049                                __end_of___awmod 3B1A  
                              __end_of___flmul 2A7E                                __end_of___flsub 4338  
                              __end_of___fltol 347E                                          _ANSEL 000F7E  
                              ___awdiv@divisor 0007                                          i2l610 4446  
                                        i2l621 46F0                                          i2l630 4904  
                                        i2l607 4444                                          i2l624 4936  
                                        i2l617 3A68                                          i2l627 48FE  
                                        i2l671 009C                                          i2l666 0062  
                                        i2l667 009C                                ___awdiv@counter 0009  
                                        _RCREG 000FAE                   __size_of_I2C_DO_RX_NACK_STOP 0008  
                                        _RCSTA 000FAB                                   vfpfcnvrt@fmt 0040  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 3C6A  
                            __end_of_I2C_DO_TX 39AA                                          _flags 00B1  
                                        _light 00A4                                          _fputc 3C6A  
                            __end_of_I2C_Close 469E                                          _fputs 437E  
                              __end_of_isdigit 4530                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          atoi@n 0019  
                                        pad@fp 0017                                          atoi@s 000C  
                                        _width 00AD                                          _putch 4860  
                      _I2C_MasterEnableRestart 491E                                __end_of_isspace 42F2  
                              __end_of_isupper 44C0                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                               ?___fpclassifyf 0005                                __end_of_tolower 41EA  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                              __end_of_strncmp 375C                             ??_I2C_DO_SEND_STOP 0005  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 4596                                   __end_of_atoi 3378  
                                 __end_of_main 418A                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                                       ??_atoi 000E                                         ??_main 0158  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                        _I2C_Read2ByteRegister 3D8E                              ?_I2C_MasterSetIrq 0001  
             I2C_Read2ByteRegister@returnValue 001C                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 4938     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 4936                     _EUSART_OverrunErrorHandler 0152  
              __end_of_I2C_CallbackReturnReset 4916                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                             ___awdiv@dividend 0005                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l5461 46D8  
                                       i2l5463 46DA                                         i2l5465 46EA  
                                       i2l5467 46EE                                         i2l5459 46C8  
                                       i2l5635 48FA                                         i2l5731 442A  
                                       i2l5637 4900                                         i2l5741 39C8  
                                       i2l5733 443A                                         i2l5725 4406  
                                       i2l5901 0070                                         i2l5751 3A2A  
                                       i2l5743 39D8                                         i2l5735 443E  
                                       i2l5727 4418                                         i2l5903 007E  
                                       i2l5753 3A46                                         i2l5745 39F2  
                                       i2l5737 39AA                                         i2l5729 4428  
                                       i2l5755 3A64                                         i2l5747 3A00  
                                       i2l5739 39BA                                         i2l5749 3A10  
                                       i2l5893 001A                                         i2l5895 0028  
                                       i2l5897 0036                                         i2l5899 0044  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 31DE                            _I2C_MasterGetRxData 490A  
                                 vfprintf@cfmt 0054                                         ___flge 347E  
                                       ___fleq 3B1A                                      ??___fladd 000D  
                                       ___wmul 46F2                                      ??___fldiv 000D  
                                _I2C_MasterFsm 3F80                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 000D                                      ??___flsub 0026  
                                    ??___fltol 0009                                         _efgtoa 104E  
                          _EUSART_Transmit_ISR 4406                                         _floorf 2E18  
                                       clear_0 459C                                         clear_1 45A8  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                      __size_of_I2C_MasterOpen 0022                                         isa$std 000001  
                      __size_of_I2C_MasterStop 0004                                ___awmod@counter 0009  
                      __size_of_I2C_Initialize 0014                                         _printf 469E  
                                       pad@buf 0019                                  _I2C_SetBuffer 4718  
                           __end_of_I2C_Poller 479E                                         _strcpy 41EA  
                                       _strlen 4530                   __end_of_I2C_MasterDisableIrq 492A  
                                       fputc@c 0007                                         fputs@c 0014  
                          _I2C_DO_ADDRESS_NACK 405E                                         fputs@i 0015  
                                       fputs@s 0010                                      ??_isdigit 0007  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 47B6                     _I2C_SetAddressNackCallback 479E  
                              ___fpclassifyf@e 000D                                ___fpclassifyf@u 000F  
                              ___fpclassifyf@x 0005                                   __mediumconst 0000  
                                    ??_isspace 0007                                         tblptrh 000FF7  
                                    ??_isupper 0007                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 4128                                      ??_tolower 000D  
                                    ??_strncmp 000B                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 001E  
                                   ___flge@ff2 0022                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 47CE                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 45B8  
                                   ___flneg@f1 0005                            _I2C_MasterOperation 43C2  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 487E          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4874                        _rdBlkRegCompleteHandler 4448  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4916                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 3D00                                  __end_of_fputs 43C2  
                                __end_of_putch 486A                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                         ?_I2C_Read2ByteRegister 0016  
                __end_of_I2C_DO_SEND_ADR_WRITE 482C                     ?_I2C_DO_SEND_RESTART_WRITE 0001  
                         ?_I2C_MasterOperation 0001                          ??_I2C_MasterGetRxData 0005  
                      ?_I2C_Write1ByteRegister 0016                                     ??_I2C_Open 0005  
                         _eusartRxStatusBuffer 0084                     __end_of_I2C_MasterClearIrq 4932  
              ??_EUSART_SetOverrunErrorHandler 0007                                        ??_fputc 000B  
                    __end_of_SYSTEM_Initialize 47E4                                        ??_fputs 0014  
                        ??_EUSART_Transmit_ISR 0001                                        ??_putch 0006  
                            _I2C_MasterSendAck 48EE                                     __pbssBANK0 0060  
                                   __pbssBANK1 0100                           __end_of_EUSART_Write 42A0  
                                ??_I2C_DO_IDLE 0005                 __size_of_rd2RegCompleteHandler 002C  
                                ??_I2C_DO_RCEN 0005                  __end_of_rd2RegCompleteHandler 461A  
                 __end_of_I2C_MasterSendTxData 48EE                             ?_I2C_MasterSendAck 0001  
                            _I2C_MasterStartRx 490E                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 4672  
                  __size_of_EUSART_Receive_ISR 00C0                            _I2C_DO_RX_NACK_STOP 48B6  
                        _rd1RegCompleteHandler 461A                             ?_I2C_MasterStartRx 0001  
                   __end_of_I2C_MasterSendNack 48FA                         __size_of_VEML6030_Init 0022  
                        _wr1RegCompleteHandler 45C2                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 001E  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 00FC                    __end_of_I2C_DO_SEND_RESTART 48D6  
                              _I2C_DO_TX_EMPTY 3E14                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 0032  
               __end_of_I2C_MasterWaitForEvent 481C                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        ?_floorf 001E  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00F4                 I2C_SetDataCompleteCallback@ptr 000C  
               __end_of_I2C_Write1ByteRegister 405E                                        ?_strcpy 0005  
                                      ?_strlen 0005                       ??_I2C_DO_RX_NACK_RESTART 0005  
            __end_of_I2C_DO_SEND_RESTART_WRITE 48DE                           ?_I2C_DO_RX_NACK_STOP 0001  
                                _eusartRxCount 0056                                      ?___xxtofl 0005  
                           __size_of_vfpfcnvrt 04A0                  __size_of_EUSART_RxDataHandler 002A  
                    __end_of_I2C_MasterSendAck 48F4                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 4912                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 3BC4  
                                    _I2C_DO_TX 38E6               __end_of_I2C_DO_SEND_RESTART_READ 48E6  
                                    _I2C_Close 4672                      ??_rdBlkRegCompleteHandler 0010  
                         _I2C_MasterDisableIrq 4926                                ??_I2C_MasterFsm 0012  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                            __end_of_I2C_DO_IDLE 4860  
                          __end_of_I2C_DO_RCEN 4854                                     _readBuffer 00B3  
                              __size_of___flge 0104                                __size_of___fleq 00AA  
                                      ___fladd 1CF4                                        ___fldiv 2A7E  
                                      ___awdiv 3822                                        ___flneg 44C0  
                                      ___awmod 3A6A                                        ___flmul 2654  
                                      ___flsub 42F2                                        ___fltol 3378  
                              ??_I2C_SetBuffer 0009                                __size_of___wmul 0026  
                                    ?_vfprintf 00EE                        I2C_SetBuffer@bufferSize 0007  
                                 __psmallconst 1000                                __size_of_efgtoa 0CA6  
                               _I2C_MasterOpen 475E                                __size_of_floorf 0212  
                                      __pcinit 4596                                 _I2C_MasterStop 491A  
                               _I2C_Initialize 47F8                                        __ramtop 1000  
                    __size_of_I2C_DO_SEND_STOP 0008                                        __ptext0 4128  
                                      __ptext1 469E                                        __ptext2 40C4  
                                      __ptext3 21B4                                        __ptext4 3680  
                                      __ptext5 104E                                        __ptext6 418A  
                                      __ptext7 4488                                        __ptext8 41EA  
                                      __ptext9 375C                                __size_of_printf 002A  
                        ??_I2C_DO_RX_NACK_STOP 0005                                __size_of_strcpy 005E  
                              __size_of_strlen 0036                          _OSCILLATOR_Initialize 486A  
                        VEML6030_GetValue@data 0026                                   __size_of_pad 00C6  
                                      _isdigit 44F8                                     ??___xxtofl 0009  
                             ___awmod@dividend 0005                                  _VEML6030_Init 473C  
                           I2C_SetCallback@idx 0009                       __size_of_I2C_MasterClose 0004  
                     ??_PIN_MANAGER_Initialize 0005                  I2C_CallbackReturnReset@funPtr 000E  
                                      _isspace 42A0                             I2C_SetCallback@ptr 0007  
                     wr1RegCompleteHandler@ptr 000E                                        _isupper 4488  
                                      efgtoa@c 0038                                        efgtoa@d 00CE  
                                      efgtoa@e 00E6                                        efgtoa@f 0034  
                                      efgtoa@g 00E2                                        efgtoa@h 00D8  
                                      efgtoa@i 00E0                                        efgtoa@l 00DC  
                                      efgtoa@m 00C8                                        efgtoa@n 00E8  
                                      efgtoa@p 00D2                                        efgtoa@t 00C2  
                                      efgtoa@u 00EA                                        efgtoa@w 00D4  
                    I2C_Write1ByteRegister@reg 0016                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 418A                                        _strncmp 3680  
                         end_of_initialization 45B8                                        floorf@e 002C  
                                      floorf@m 0028                                        floorf@u 002E  
                                      floorf@x 001E                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4892  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4888  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 3E90  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                            _EUSART_Initialize 3F0A                         ?_wr1RegCompleteHandler 000E  
                     fp__rd2RegCompleteHandler 0000                             ?_EUSART_Initialize 0001  
                     __size_of_I2C_SetCallback 007A                              __end_of_vfpfcnvrt 2654  
                                   efgtoa@mode 00D7                                     efgtoa@sign 00D0  
                                    _RCSTAbits 000FAB                                        postdec2 000FDD  
                       __end_of_I2C_MasterOpen 4780                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 491E  
                       __end_of_I2C_Initialize 480C                                     ??_vfprintf 0054  
                    fp__I2C_CallbackReturnStop 0000                                        strcpy@d 000D  
                                      strlen@a 0007                                        strcpy@s 000B  
                                      strlen@s 0005                            ??_EUSART_Initialize 0007  
               ??_EUSART_SetTxInterruptHandler 0007                __end_of_rdBlkRegCompleteHandler 4488  
                         _I2C_MasterSendTxData 48E6                                fp__I2C_DO_RESET 0000  
                VEML6030_GetValue@lightDataAnz 0022                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                               ?_VEML6030_Init 0001                                    ___fladd@grs 0014  
                                ___xxtofl@sign 000D                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                                  ___fldiv@grs 0018                                    ___fldiv@rem 0011  
                            __size_of_I2C_Open 008E                __size_of_EUSART_SetErrorHandler 000A  
                   __size_of_I2C_MasterStartRx 0004                                    ___flmul@grs 0013  
                    __end_of_EUSART_Initialize 3F80                                    _I2C_DO_IDLE 4854  
                                  _I2C_DO_RCEN 4848                     rdBlkRegCompleteHandler@ptr 000E  
                I2C_Write1ByteRegister@address 0018                                      _TXSTAbits 000FAC  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 48DE  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                      ??_I2C_Read2ByteRegister 0018                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 4936                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 4912  
                   fp__I2C_CallbackReturnReset 0000                                 __end_of___flge 3582  
                               __end_of___fleq 3BC4             __end_of_EUSART_DefaultErrorHandler 4906  
                   _EUSART_DefaultErrorHandler 4900                                    vfpfcnvrt@ap 0042  
                                  vfpfcnvrt@ct 0050                                    vfpfcnvrt@fp 003E  
                               __end_of___wmul 4718           __size_of_I2C_SetDataCompleteCallback 0018  
                               __end_of_efgtoa 1CF4                                   _EUSART_Write 4248  
                               __end_of_floorf 302A                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F527 009C  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 46C8  
                               __end_of_strcpy 4248                                 __end_of_strlen 4566  
                          start_initialization 4596                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_pad 3822                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                          __end_of___fpclassifyf 3680  
                            ??_I2C_MasterWrite 0016                 __end_of_I2C_CallbackReturnStop 491A  
                       _I2C_DO_RX_NACK_RESTART 48AE                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 492E                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00F0                     _EUSART_FramingErrorHandler 0154  
                                     ??___flge 0026                                       ??___fleq 000D  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 489C  
                          ?_I2C_MasterClearIrq 0001                                       ??_efgtoa 0039  
                  __end_of_I2C_MasterGetRxData 490E                                       ??_floorf 0022  
                        __end_of_I2C_DO_RX_ACK 48C6                               _I2C_DO_SEND_STOP 48C6  
                            ??_I2C_SetCallback 0009                                       ??_printf 0056  
                              ??_VEML6030_Init 0019                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 48F4  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 0009                                      ___fladd@b 0005  
                       fp__I2C_DO_SEND_RESTART 0000                                      ___fldiv@a 0009  
                                    ___fldiv@b 0005                       I2C_Read2ByteRegister@reg 0016  
                  __end_of_EUSART_Transmit_ISR 4448                          _I2C_DO_SEND_ADR_WRITE 481C  
                                    ___flmul@a 0009                                      ___flmul@b 0005  
                                  __pbssCOMRAM 0056                                      ___flsub@a 0022  
                                    ___flsub@b 001E                                  __pcstackBANK0 00B6  
                                __pcstackBANK1 0156                                 ??_I2C_DO_RESET 0005  
                          ?_I2C_MasterSendNack 0001                              __size_of___xxtofl 01B4  
                 __end_of_I2C_DO_SEND_ADR_READ 483C                           ??_I2C_MasterClearIrq 0005  
                  __end_of_I2C_DO_ADDRESS_NACK 40C4                     __end_of_EUSART_Receive_ISR 3A6A  
                             _I2C_MasterIsNack 47E4                     __size_of_EUSART_Initialize 0076  
                    _I2C_DO_SEND_RESTART_WRITE 48D6               _EUSART_RxDefaultInterruptHandler 00FA  
                             _I2C_MasterSetIrq 4906                                      _atoi$2155 0014  
                                    _atoi$2156 0018                                      _atoi$2157 0016  
                                    __pnvBANK0 00FA                                      __pnvBANK1 0150  
                        _rd2RegCompleteHandler 45EE                          __end_of_fsmStateTable 1021  
                                  _efgtoa$2101 00BC                                    _efgtoa$2102 00BE  
                                  _efgtoa$2103 00C0                                    _efgtoa$2091 00B6  
                                  _efgtoa$2092 00B8                                    _efgtoa$2097 00BA  
                 __end_of_EUSART_RxDataHandler 46F2                         _PIN_MANAGER_Initialize 4566  
                        _wr2RegCompleteHandler 4646                      ??_I2C_CallbackReturnReset 0010  
                  __end_of_I2C_MasterOperation 4406                           ??_I2C_MasterSendNack 0005  
                     rd2RegCompleteHandler@ptr 000E                                      __pintcode 0008  
                                     ?___fladd 0005                                       ?___fldiv 0005  
                                     ?___awdiv 0005                                      __ptext100 4900  
                                    __ptext101 46C8                                      __ptext102 0000  
                                     ?___flneg 0005                                       ?___awmod 0005  
                                     ?___flmul 0005                                       ?___flsub 001E  
                                     ?___fltol 0005                                   _eusartRxHead 0058  
                                 _eusartTxHead 005A                                   _eusartRxTail 0057  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0059  
                 ??_INTERRUPT_InterruptManager 0001                              __size_of_vfprintf 0064  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00FE                   __size_of_I2C_DO_SEND_RESTART 0008  
                                  __smallconst 1000                                       ?_isdigit 0005  
                      I2C_MasterOperation@read 0014                                       _I2C_Open 3D00  
                                     ?_isspace 0005                                       ?_isupper 0005  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4932                                 _eusartRxBuffer 008C  
                      ??_wr1RegCompleteHandler 0010                   I2C_Read2ByteRegister@address 001B  
                               _eusartTxBuffer 0094                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00B5            __size_of_INTERRUPT_InterruptManager 00A8  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0007  
                                     _PIR2bits 000FA1                                       i2u532_40 46EA  
                                     i2u532_41 46E6                                       i2u570_40 3A46  
                                     i2u570_41 3A42                                       i2u571_48 3A4C  
                                     i2u564_40 4418                                       i2u571_49 3A60  
                                     i2u564_41 4414                                       i2u565_40 443A  
                                     i2u565_41 4436                                       i2u566_40 39C8  
                                     i2u566_41 39C4                                       i2u590_48 0084  
                                     i2u590_49 0098                                       i2u568_40 3A00  
                                     i2u567_48 39DE                                       i2u584_40 0028  
                                     i2u568_41 39FC                                       i2u567_49 39F2  
                                     i2u584_41 0024                                       i2u585_40 0036  
                                     i2u585_41 0032                                       i2u569_48 3A16  
                                     i2u586_40 0044                                       i2u569_49 3A2A  
                                     i2u586_41 0040                                       i2u588_40 0070  
                                     i2u587_48 004A                                       i2u588_41 006C  
                                     i2u587_49 005E                                       i2u589_40 007E  
                                     i2u589_41 007A                          __end_of_I2C_MasterFsm 3FF0  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 48BE  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 4900  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 48FA  
              __end_of_I2C_MasterEnableRestart 4922                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 21B4  
                        __end_of_I2C_SetBuffer 473C                              ___wmul@multiplier 0005  
                       ?_I2C_DO_SEND_ADR_WRITE 0001                       I2C_MasterSendTxData@data 0005  
                     wr2RegCompleteHandler@ptr 000E                                   _isspace$2186 000B  
                                   vfpfcnvrt@c 0053                                     vfpfcnvrt@f 004C  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                                   _I2C_Poller 4780                                     _I2C_Status 0060  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                          fp__EUSART_Receive_ISR 0000  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00F2  
                                     __Lrparam 0000                                     vfprintf@fp 00EE  
                         __end_of_I2C_DO_RESET 4848                       ??_I2C_Write1ByteRegister 0018  
                      ??_OSCILLATOR_Initialize 0005                            _EUSART_ErrorHandler 0150  
                             __size_of___fladd 04C0                               __size_of___fldiv 039A  
                             __size_of___awdiv 00C4                           _I2C_DO_SEND_ADR_READ 482C  
                             __size_of___flneg 0038                               __size_of___awmod 00B0  
                             __size_of___flmul 042A                               __size_of___flsub 0046  
                             __size_of___fltol 0106                 __size_of_I2C_Read2ByteRegister 0086  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 003E  
                __end_of_I2C_Read2ByteRegister 3E14                             ___fpclassifyf@F465 00A0  
                              _I2C_MasterClose 492A                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                                       ___xxtofl 302A  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 4922  
                              _I2C_MasterWrite 48A6                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 46C8                               __size_of_isspace 0052  
                                     __ptext10 4530                                       __ptext11 437E  
                                     __ptext20 44C0                                       __ptext12 3C6A  
                                     __ptext21 2654                                       __ptext13 4860  
                                     __ptext30 46F2                                       __ptext22 347E  
                                     __ptext14 4248                                       __ptext31 473C  
                                     __ptext23 3B1A                                       __ptext15 2E18  
                                     __ptext40 43C2                                       __ptext32 3FF0  
                                     __ptext24 2A7E                                       __ptext16 3582  
                                     __ptext41 4780                                       __ptext33 4338  
                                     __ptext25 3A6A                                       __ptext17 3378  
                                     __ptext50 48CE                                       __ptext42 480C  
                                     __ptext34 302A                                       __ptext26 3822  
                                     __ptext18 42F2                                       __ptext51 48D6  
                                     __ptext43 3F80                                       __ptext35 3D8E  
                                     __ptext27 31DE                                       __ptext19 1CF4  
                                     __ptext60 4906                                       __ptext52 48DE  
                                     __ptext44 405E                                       __ptext36 479E  
                                     __ptext28 42A0                                       __ptext61 47E4  
                                     __ptext53 4848                                       __ptext45 483C  
                                     __ptext37 3D00                                       __ptext29 44F8  
                                     __ptext70 45C2                                       __ptext62 48E6  
                                     __ptext54 3BC4                                       __ptext46 48AE  
                                     __ptext38 475E                                       __ptext71 45EE  
                                     __ptext63 48EE                                       __ptext55 38E6  
                                     __ptext47 48B6                                       __ptext39 48A6  
                                     __ptext80 4672                                       __ptext72 461A  
                                     __ptext64 490A                                       __ptext56 481C  
                                     __ptext48 48BE                                       __ptext81 4926  
                                     __ptext73 4646                                       __ptext65 48F4  
                                     __ptext57 482C                                       __ptext49 48C6  
                                     __ptext90 4874                                       __ptext82 492A  
                                     __ptext74 47B6                                       __ptext66 490E  
                                     __ptext58 4854                                       __ptext91 487E  
                                     __ptext83 492E                                       __ptext75 3E90  
                                     __ptext67 4912                                       __ptext59 3E14  
                                     __ptext92 4888                                       __ptext84 47CE  
                                     __ptext76 4718                                       __ptext68 4916  
                                     __ptext93 4892                                       __ptext85 4566  
                                     __ptext77 491A                                       __ptext69 4448  
                                     __ptext94 489C                                       __ptext86 486A  
                                     __ptext78 491E                                       __ptext87 4932  
                                     __ptext79 4922                                       __ptext96 4406  
                                     __ptext88 47F8                                       __ptext97 39AA  
                                     __ptext89 3F0A                                       __ptext98 48FA  
                                     __ptext99 4936                               __size_of_isupper 0038  
          __end_of_I2C_SetDataCompleteCallback 47CE                    _I2C_SetDataCompleteCallback 47B6  
                      ?_I2C_DO_RX_NACK_RESTART 0001                               __size_of_tolower 0060  
                                   strcpy@dest 0005                               __size_of_strncmp 00DC  
                     __end_of_I2C_DO_SEND_STOP 48CE                              _VEML6030_GetValue 4338  
                                __size_of_atoi 019A                                  __size_of_main 0062  
                           ?_VEML6030_GetValue 001E                        ?_EUSART_SetErrorHandler 0005  
                              _I2C_SetCallback 3E90                  ??_I2C_SetDataCompleteCallback 000E  
                   I2C_Write1ByteRegister@data 0017                                       efgtoa@fp 0032  
                                     efgtoa@ne 00C6                                       efgtoa@pp 00C4  
                                     efgtoa@ou 00CA  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     isa$xinst 000000                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                            ??_VEML6030_GetValue 0022  
                                     _vfprintf 40C4             __end_of_INTERRUPT_InterruptManager 00B0  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 00F4  
        __end_of_EUSART_SetFramingErrorHandler 489C         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 4892                       __end_of_I2C_MasterIsNack 47F8  
                     __end_of_I2C_MasterSetIrq 490A                                 _vfpfcnvrt$2121 004A  
                               _vfpfcnvrt$2117 0048                                     _INTCONbits 000FF2  
                        ?_EUSART_RxDataHandler 0001                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 48B6  
                    __end_of_VEML6030_GetValue 437E                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                                       isspace@c 0005  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 48A6  
                          _I2C_DO_SEND_RESTART 48CE                                      strcpy@src 0007  
                __size_of_I2C_MasterDisableIrq 0004                                       isupper@c 0005  
                       fp__I2C_DO_ADDRESS_NACK 0000                                      strncmp@_l 0005  
                                    strncmp@_r 0007           __end_of_EUSART_SetRxInterruptHandler 4888  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 487E  
              __size_of_I2C_MasterWaitForEvent 0010                                    efgtoa@nmode 00D6  
                                     printf@ap 0156                __size_of_I2C_Write1ByteRegister 006E  
                           _EUSART_Receive_ISR 39AA  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 492E                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                                    ??_vfpfcnvrt 0044  
                      __end_of_I2C_MasterStart 4926                        __end_of_I2C_MasterWrite 48AE  
                         ?_I2C_DO_SEND_RESTART 0001                                       tolower@c 000B  
                          ?_EUSART_Receive_ISR 0001                          __end_of_VEML6030_Init 475E  
                       __size_of___fpclassifyf 00FE                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       strncmp@l 000C  
                                     strncmp@n 0009                                       strncmp@r 000E  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                                ___fladd@signs 0011                    __size_of_I2C_MasterClearIrq 0004  
                           EUSART_Write@txData 0005                   __size_of_EUSART_Transmit_ISR 0042  
                      __end_of_I2C_SetCallback 3F0A                 __end_of_PIN_MANAGER_Initialize 4596  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 4646  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 0012                                   ___fladd@bexp 0013  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 45EE  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                             __size_of_I2C_DO_RX 00A6  
                           __size_of_I2C_DO_TX 00C4  
